{"ast":null,"code":"// Initial state of shop\nconst initialStateShop = {\n  cart: [],\n  groups: [],\n  order: []\n};\n\nconst shopReducer = (state = initialStateShop, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case \"INITIAL_CART\":\n      return {\n        cart: payload.cart\n      };\n\n    case \"INITIAL_ORDER\":\n      return { ...state,\n        order: payload.order\n      };\n\n    case \"SETTING_GROUP\":\n      const itemsInCart = payload.itemsInCart;\n      const sorted = itemsInCart.sort((a, b) => {\n        if (item1.attr < item2.attr) return -1;\n        if (item1.attr > item2.attr) return 1;\n        return 0;\n      });\n      console.log(sorted);\n      let userId = null;\n      let groupTemp = [];\n\n      for (const key in itemsInCart) {\n        if (userId === itemsInCart[key].customerId) {\n          const index = groupTemp.findIndex(group => group.userId === itemsInCart[key].customerId);\n          const newItems = groupTemp[index].items.concat(itemsInCart[key]);\n          groupTemp[index] = { ...groupTemp[index],\n            items: newItems\n          };\n        } else {\n          groupTemp.push({\n            id: +key,\n            userId: itemsInCart[key].customerId,\n            userName: itemsInCart[key].customerName,\n            items: [itemsInCart[key]]\n          });\n          userId = itemsInCart[key].customerId;\n        }\n      }\n\n      return { ...state,\n        groups: groupTemp\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/food_online/src/app/store/reducers/shop-reducer.js"],"names":["initialStateShop","cart","groups","order","shopReducer","state","type","payload","itemsInCart","sorted","sort","a","b","item1","attr","item2","console","log","userId","groupTemp","key","customerId","index","findIndex","group","newItems","items","concat","push","id","userName","customerName"],"mappings":"AAAA;AACA,MAAMA,gBAAgB,GAAG;AACvBC,EAAAA,IAAI,EAAE,EADiB;AAEvBC,EAAAA,MAAM,EAAE,EAFe;AAGvBC,EAAAA,KAAK,EAAE;AAHgB,CAAzB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,gBAAT,EAA2B;AAAEM,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA3B,KAAiD;AACnE,UAAQD,IAAR;AACE,SAAK,cAAL;AACE,aAAO;AAAEL,QAAAA,IAAI,EAAEM,OAAO,CAACN;AAAhB,OAAP;;AACF,SAAK,eAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELF,QAAAA,KAAK,EAAEI,OAAO,CAACJ;AAFV,OAAP;;AAIF,SAAK,eAAL;AACE,YAAMK,WAAW,GAAGD,OAAO,CAACC,WAA5B;AACA,YAAMC,MAAM,GAAGD,WAAW,CAACE,IAAZ,CAAiB,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxC,YAAIC,KAAK,CAACC,IAAN,GAAaC,KAAK,CAACD,IAAvB,EAA6B,OAAO,CAAC,CAAR;AAC7B,YAAID,KAAK,CAACC,IAAN,GAAaC,KAAK,CAACD,IAAvB,EAA6B,OAAO,CAAP;AAC7B,eAAO,CAAP;AACD,OAJc,CAAf;AAKAE,MAAAA,OAAO,CAACC,GAAR,CAAYR,MAAZ;AACA,UAAIS,MAAM,GAAG,IAAb;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAK,MAAMC,GAAX,IAAkBZ,WAAlB,EAA+B;AAC7B,YAAIU,MAAM,KAAKV,WAAW,CAACY,GAAD,CAAX,CAAiBC,UAAhC,EAA4C;AAC1C,gBAAMC,KAAK,GAAGH,SAAS,CAACI,SAAV,CACXC,KAAD,IAAWA,KAAK,CAACN,MAAN,KAAiBV,WAAW,CAACY,GAAD,CAAX,CAAiBC,UADjC,CAAd;AAGA,gBAAMI,QAAQ,GAAGN,SAAS,CAACG,KAAD,CAAT,CAAiBI,KAAjB,CAAuBC,MAAvB,CAA8BnB,WAAW,CAACY,GAAD,CAAzC,CAAjB;AACAD,UAAAA,SAAS,CAACG,KAAD,CAAT,GAAmB,EACjB,GAAGH,SAAS,CAACG,KAAD,CADK;AAEjBI,YAAAA,KAAK,EAAED;AAFU,WAAnB;AAID,SATD,MASO;AACLN,UAAAA,SAAS,CAACS,IAAV,CAAe;AACbC,YAAAA,EAAE,EAAE,CAACT,GADQ;AAEbF,YAAAA,MAAM,EAAEV,WAAW,CAACY,GAAD,CAAX,CAAiBC,UAFZ;AAGbS,YAAAA,QAAQ,EAAEtB,WAAW,CAACY,GAAD,CAAX,CAAiBW,YAHd;AAIbL,YAAAA,KAAK,EAAE,CAAClB,WAAW,CAACY,GAAD,CAAZ;AAJM,WAAf;AAMAF,UAAAA,MAAM,GAAGV,WAAW,CAACY,GAAD,CAAX,CAAiBC,UAA1B;AACD;AACF;;AAED,aAAO,EACL,GAAGhB,KADE;AAELH,QAAAA,MAAM,EAAEiB;AAFH,OAAP;;AAIF;AACE,aAAOd,KAAP;AA5CJ;AA8CD,CA/CD;;AAiDA,eAAeD,WAAf","sourcesContent":["// Initial state of shop\nconst initialStateShop = {\n  cart: [],\n  groups: [],\n  order: [],\n};\n\nconst shopReducer = (state = initialStateShop, { type, payload }) => {\n  switch (type) {\n    case \"INITIAL_CART\":\n      return { cart: payload.cart };\n    case \"INITIAL_ORDER\":\n      return {\n        ...state,\n        order: payload.order,\n      };\n    case \"SETTING_GROUP\":\n      const itemsInCart = payload.itemsInCart;\n      const sorted = itemsInCart.sort((a, b) => {\n        if (item1.attr < item2.attr) return -1;\n        if (item1.attr > item2.attr) return 1;\n        return 0;\n      });\n      console.log(sorted);\n      let userId = null;\n      let groupTemp = [];\n      for (const key in itemsInCart) {\n        if (userId === itemsInCart[key].customerId) {\n          const index = groupTemp.findIndex(\n            (group) => group.userId === itemsInCart[key].customerId\n          );\n          const newItems = groupTemp[index].items.concat(itemsInCart[key]);\n          groupTemp[index] = {\n            ...groupTemp[index],\n            items: newItems,\n          };\n        } else {\n          groupTemp.push({\n            id: +key,\n            userId: itemsInCart[key].customerId,\n            userName: itemsInCart[key].customerName,\n            items: [itemsInCart[key]],\n          });\n          userId = itemsInCart[key].customerId;\n        }\n      }\n\n      return {\n        ...state,\n        groups: groupTemp,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;\n"]},"metadata":{},"sourceType":"module"}