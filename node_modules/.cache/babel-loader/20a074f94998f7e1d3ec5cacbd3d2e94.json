{"ast":null,"code":"const BACKEND_DOMAIN = \"http://localhost:8080/api\";\nexport async function getCartData(cartId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/` + cartId + `?getShop=true`);\n  console.log(response);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  return data;\n}\nexport async function existCartCustomerWithShop(customerId, shopId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/exist/shop/customer`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      customerId: customerId,\n      shopId: shopId\n    })\n  });\n\n  if (!response.ok) {\n    throw new Error(\"Could not fetch quotes.\");\n  }\n\n  return response;\n}\nexport async function createCart(customerId, shopId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/Create`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      customerId: customerId,\n      shopId: shopId\n    })\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Delete shop is fail\");\n  }\n\n  return data;\n}\nexport async function submitItem(items, customerId, cartId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/submit`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      customerId: customerId,\n      items: items,\n      cartId: cartId\n    })\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Delete shop is fail\");\n  }\n\n  return data;\n}\nexport async function unSubmitItem(customerId, cartId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/unsubmit`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      customerId: customerId,\n      cartId: cartId\n    })\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Delete shop is fail\");\n  }\n\n  return data;\n}\nexport async function addItem(customerId, itemId, cartId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/add/item`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      customerId: customerId,\n      itemId: itemId,\n      cartId: cartId\n    })\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Delete shop is fail\");\n  }\n\n  return data;\n}\nexport async function removeItem(customerId, itemId, cartId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/remove/item`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      customerId: customerId,\n      itemId: itemId,\n      cartId: cartId\n    })\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Delete shop is fail\");\n  }\n\n  return data;\n}","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/lib/api_cart.js"],"names":["BACKEND_DOMAIN","getCartData","cartId","response","fetch","console","log","data","json","ok","Error","message","existCartCustomerWithShop","customerId","shopId","method","headers","body","JSON","stringify","createCart","submitItem","items","unSubmitItem","addItem","itemId","removeItem"],"mappings":"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","sourcesContent":["const BACKEND_DOMAIN = \"http://localhost:8080/api\"\n\nexport async function getCartData(cartId) {\n  const response = await fetch(\n    `${BACKEND_DOMAIN}/Cart/` + cartId + `?getShop=true`\n  )\n  console.log(response)\n  const data = await response.json()\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\")\n  }\n\n  return data\n}\n\nexport async function existCartCustomerWithShop(customerId, shopId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/exist/shop/customer`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      customerId: customerId,\n      shopId: shopId,\n    }),\n  })\n\n  if (!response.ok) {\n    throw new Error(\"Could not fetch quotes.\")\n  }\n\n  return response\n}\n\nexport async function createCart(customerId, shopId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/Create`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      customerId: customerId,\n      shopId: shopId,\n    }),\n  })\n\n  const data = await response.json()\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Delete shop is fail\")\n  }\n\n  return data\n}\n\nexport async function submitItem(items, customerId, cartId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/submit`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      customerId: customerId,\n      items: items,\n      cartId: cartId,\n    }),\n  })\n  const data = await response.json()\n  if (!response.ok) {\n    throw new Error(data.message || \"Delete shop is fail\")\n  }\n\n  return data\n}\n\nexport async function unSubmitItem(customerId, cartId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/unsubmit`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      customerId: customerId,\n      cartId: cartId,\n    }),\n  })\n  const data = await response.json()\n  if (!response.ok) {\n    throw new Error(data.message || \"Delete shop is fail\")\n  }\n\n  return data\n}\n\nexport async function addItem(customerId, itemId, cartId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/add/item`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      customerId: customerId,\n      itemId: itemId,\n      cartId: cartId,\n    }),\n  })\n  const data = await response.json()\n  if (!response.ok) {\n    throw new Error(data.message || \"Delete shop is fail\")\n  }\n\n  return data\n}\n\nexport async function removeItem(customerId, itemId, cartId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/remove/item`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      customerId: customerId,\n      itemId: itemId,\n      cartId: cartId,\n    }),\n  })\n\n  const data = await response.json()\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Delete shop is fail\")\n  }\n\n  return data\n}\n"]},"metadata":{},"sourceType":"module"}