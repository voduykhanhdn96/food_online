{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/components/CartItemGroup.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from \"react-redux\";\nimport { Container, Grid, Header, Input, Segment } from \"semantic-ui-react\";\nimport { submitItemOfCustomer, unSubmitItemOfCustomer } from \"../store/actions/shop-action\";\nimport CartItem from \"./CartItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst CartItemGroup = ({\n  group,\n  permission,\n  removeItem,\n  cartId\n}) => {\n  _s();\n\n  const {\n    userName,\n    userId,\n    items\n  } = group;\n  const dispatch = useDispatch();\n\n  const onChangeStatusFood = e => {\n    if (e.target.checked) {\n      // Submit\n      dispatch(submitItemOfCustomer(items, userId, cartId));\n    } else {\n      dispatch(unSubmitItemOfCustomer(userId, cartId));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ui toggle checkbox\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onChange: onChangeStatusFood,\n        disabled: !permission,\n        checked: items[0].readyToOrder,\n        type: \"checkbox\",\n        name: \"public\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"COMPLETE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Segment, {\n      raised: true,\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        size: \"small\",\n        children: userName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          children: items && items.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n            removeItem: removeItem,\n            item: item,\n            permission: permission\n          }, item.itemId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(CartItemGroup, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CartItemGroup;\nexport default CartItemGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartItemGroup\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/components/CartItemGroup.jsx"],"names":["useDispatch","Container","Grid","Header","Input","Segment","submitItemOfCustomer","unSubmitItemOfCustomer","CartItem","CartItemGroup","group","permission","removeItem","cartId","userName","userId","items","dispatch","onChangeStatusFood","e","target","checked","readyToOrder","map","item","itemId"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,KAAlC,EAAyCC,OAAzC,QAAwD,mBAAxD;AACA,SACEC,oBADF,EAEEC,sBAFF,QAGO,8BAHP;AAIA,OAAOC,QAAP,MAAqB,YAArB;;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA,UAAT;AAAqBC,EAAAA,UAArB;AAAiCC,EAAAA;AAAjC,CAAD,KAA+C;AAAA;;AACnE,QAAM;AAAEC,IAAAA,QAAF;AAAYC,IAAAA,MAAZ;AAAoBC,IAAAA;AAApB,MAA8BN,KAApC;AACA,QAAMO,QAAQ,GAAGjB,WAAW,EAA5B;;AAEA,QAAMkB,kBAAkB,GAAGC,CAAC,IAAI;AAC9B,QAAIA,CAAC,CAACC,MAAF,CAASC,OAAb,EAAsB;AACpB;AACAJ,MAAAA,QAAQ,CAACX,oBAAoB,CAACU,KAAD,EAAQD,MAAR,EAAgBF,MAAhB,CAArB,CAAR;AACD,KAHD,MAGO;AACLI,MAAAA,QAAQ,CAACV,sBAAsB,CAACQ,MAAD,EAASF,MAAT,CAAvB,CAAR;AACD;AACF,GAPD;;AASA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,oBAAf;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,QAAQ,EAAEK,kBADZ;AAEE,QAAA,QAAQ,EAAE,CAACP,UAFb;AAGE,QAAA,OAAO,EAAEK,KAAK,CAAC,CAAD,CAAL,CAASM,YAHpB;AAIE,QAAA,IAAI,EAAC,UAJP;AAKE,QAAA,IAAI,EAAC;AALP;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,OAAD;AAAS,MAAA,MAAM,MAAf;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAE,OAAd;AAAA,kBAAwBR;AAAxB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,SAAD;AAAA,+BACE,QAAC,IAAD;AAAA,oBACGE,KAAK,IACJA,KAAK,CAACO,GAAN,CAAUC,IAAI,iBACZ,QAAC,QAAD;AACE,YAAA,UAAU,EAAEZ,UADd;AAGE,YAAA,IAAI,EAAEY,IAHR;AAIE,YAAA,UAAU,EAAEb;AAJd,aAEOa,IAAI,CAACC,MAFZ;AAAA;AAAA;AAAA;AAAA,kBADF;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA,kBADF;AA+BD,CA5CD;;GAAMhB,a;UAEaT,W;;;KAFbS,a;AA8CN,eAAeA,aAAf","sourcesContent":["import { useDispatch } from \"react-redux\"\nimport { Container, Grid, Header, Input, Segment } from \"semantic-ui-react\"\nimport {\n  submitItemOfCustomer,\n  unSubmitItemOfCustomer,\n} from \"../store/actions/shop-action\"\nimport CartItem from \"./CartItem\"\n\nconst CartItemGroup = ({ group, permission, removeItem, cartId }) => {\n  const { userName, userId, items } = group\n  const dispatch = useDispatch()\n\n  const onChangeStatusFood = e => {\n    if (e.target.checked) {\n      // Submit\n      dispatch(submitItemOfCustomer(items, userId, cartId))\n    } else {\n      dispatch(unSubmitItemOfCustomer(userId, cartId))\n    }\n  }\n\n  return (\n    <>\n      <div className=\"ui toggle checkbox\">\n        <Input\n          onChange={onChangeStatusFood}\n          disabled={!permission}\n          checked={items[0].readyToOrder}\n          type=\"checkbox\"\n          name=\"public\"\n        />\n        <label>COMPLETE</label>\n      </div>\n\n      <Segment raised>\n        <Header size={\"small\"}>{userName}</Header>\n        <Container>\n          <Grid>\n            {items &&\n              items.map(item => (\n                <CartItem\n                  removeItem={removeItem}\n                  key={item.itemId}\n                  item={item}\n                  permission={permission}\n                ></CartItem>\n              ))}\n          </Grid>\n        </Container>\n      </Segment>\n    </>\n  )\n}\n\nexport default CartItemGroup\n"]},"metadata":{},"sourceType":"module"}