{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/ViewOrders/OrderDetailModal.jsx\",\n    _s = $RefreshSig$();\n\nimport { forwardRef, useImperativeHandle, useMemo, useState } from \"react\";\nimport { Button, Grid, Modal } from \"semantic-ui-react\";\nimport dayjs from \"dayjs\";\nimport { AgGridReact } from \"ag-grid-react/lib/agGridReact\";\nimport OrderInforField from \"./../../components/OrderInforField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  key: 1,\n  text: \"Confirmed\",\n  value: \"Confirmed\"\n}, {\n  key: 2,\n  text: \"Sent To Kitchen\",\n  value: \"Sent To Kitchen\"\n}, {\n  key: 3,\n  text: \"Ready for Pickup\",\n  value: \"Ready for Pickup\"\n}, {\n  key: 4,\n  text: \"Ready for Delivery\",\n  value: \"Ready for Delivery\"\n}];\nconst OrderDetailModal = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [order, setOrder] = useState([]);\n  useImperativeHandle(ref, () => ({\n    open(id) {\n      setIsOpen(true);\n      const orderTemp = props.listOrder.filter(item => item.orderId === id).map(filteredItem => {\n        return filteredItem;\n      });\n      setOrder(orderTemp[0]);\n      console.log(order);\n    }\n\n  }));\n  const columnDefs = useMemo(() => [{\n    field: \"customerName\",\n    minWidth: 100\n  }, {\n    field: \"price\"\n  }, {\n    field: \"amount\"\n  }, {\n    field: \"price\"\n  }], []);\n  const defaultColDef = useMemo(() => ({\n    resizable: false,\n    sortable: true\n  }), []);\n  const {\n    orderId,\n    customerName,\n    customerPhoneNumber,\n    itemsInCart,\n    orderTime\n  } = order;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setIsOpen(false),\n    onOpen: () => setIsOpen(true),\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: `Order #${orderId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      image: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-info\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 2,\n              children: /*#__PURE__*/_jsxDEV(OrderInforField, {\n                title: \"Order No\",\n                label: orderId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 3,\n              children: /*#__PURE__*/_jsxDEV(OrderInforField, {\n                title: \"Order Time\",\n                label: dayjs(orderTime).format(\"MM/DD/YYYY HH:mm\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 2,\n              children: /*#__PURE__*/_jsxDEV(OrderInforField, {\n                title: \"Customer Name\",\n                label: customerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 2,\n              children: /*#__PURE__*/_jsxDEV(OrderInforField, {\n                title: \"Customer Phone\",\n                label: customerPhoneNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 3,\n              children: /*#__PURE__*/_jsxDEV(OrderInforField, {\n                title: \"Change Status\",\n                label: customerPhoneNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-items ag-theme-material\",\n          style: {\n            height: 240\n          },\n          children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n            reactUi: \"true\",\n            className: \"ag-theme-material\",\n            animateRows: \"true\",\n            columnDefs: columnDefs,\n            defaultColDef: defaultColDef,\n            enableRangeSelection: \"true\",\n            rowData: itemsInCart,\n            rowSelection: \"multiple\",\n            suppressRowClickSelection: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"black\",\n        onClick: () => setIsOpen(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Cancel Order\",\n        labelPosition: \"left\",\n        icon: \"close\",\n        onClick: () => setIsOpen(false),\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Complete Order\",\n        labelPosition: \"right\",\n        icon: \"checkmark\",\n        onClick: () => setIsOpen(false),\n        positive: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}, \"EcL7mQ3gbN0Y7RgTJowuIZdmQRY=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = OrderDetailModal;\nexport default OrderDetailModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderDetailModal$forwardRef\");\n$RefreshReg$(_c2, \"OrderDetailModal\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/ViewOrders/OrderDetailModal.jsx"],"names":["forwardRef","useImperativeHandle","useMemo","useState","Button","Grid","Modal","dayjs","AgGridReact","OrderInforField","options","key","text","value","OrderDetailModal","props","ref","isOpen","setIsOpen","order","setOrder","open","id","orderTemp","listOrder","filter","item","orderId","map","filteredItem","console","log","columnDefs","field","minWidth","defaultColDef","resizable","sortable","customerName","customerPhoneNumber","itemsInCart","orderTime","format","height"],"mappings":"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","sourcesContent":["import { forwardRef, useImperativeHandle, useMemo, useState } from \"react\"\nimport { Button, Grid, Modal } from \"semantic-ui-react\"\nimport dayjs from \"dayjs\"\nimport { AgGridReact } from \"ag-grid-react/lib/agGridReact\"\nimport OrderInforField from \"./../../components/OrderInforField\"\nconst options = [\n  { key: 1, text: \"Confirmed\", value: \"Confirmed\" },\n  { key: 2, text: \"Sent To Kitchen\", value: \"Sent To Kitchen\" },\n  { key: 3, text: \"Ready for Pickup\", value: \"Ready for Pickup\" },\n  { key: 4, text: \"Ready for Delivery\", value: \"Ready for Delivery\" },\n]\n\nconst OrderDetailModal = forwardRef((props, ref) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [order, setOrder] = useState([])\n\n  useImperativeHandle(ref, () => ({\n    open(id) {\n      setIsOpen(true)\n      const orderTemp = props.listOrder\n        .filter(item => item.orderId === id)\n        .map(filteredItem => {\n          return filteredItem\n        })\n      setOrder(orderTemp[0])\n      console.log(order)\n    },\n  }))\n\n  const columnDefs = useMemo(\n    () => [\n      { field: \"customerName\", minWidth: 100 },\n      { field: \"price\" },\n      { field: \"amount\" },\n      { field: \"price\" },\n    ],\n    []\n  )\n\n  const defaultColDef = useMemo(\n    () => ({\n      resizable: false,\n      sortable: true,\n    }),\n    []\n  )\n\n  const { orderId, customerName, customerPhoneNumber, itemsInCart, orderTime } =\n    order\n\n  return (\n    <Modal\n      onClose={() => setIsOpen(false)}\n      onOpen={() => setIsOpen(true)}\n      open={isOpen}\n    >\n      <Modal.Header>{`Order #${orderId}`}</Modal.Header>\n      <Modal.Content image>\n        <Modal.Description>\n          <div className=\"order-info\">\n            <Grid container>\n              <Grid.Column width={2}>\n                <OrderInforField\n                  title=\"Order No\"\n                  label={orderId}\n                ></OrderInforField>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <OrderInforField\n                  title=\"Order Time\"\n                  label={dayjs(orderTime).format(\"MM/DD/YYYY HH:mm\")}\n                ></OrderInforField>\n              </Grid.Column>\n              <Grid.Column width={2}>\n                <OrderInforField\n                  title=\"Customer Name\"\n                  label={customerName}\n                ></OrderInforField>\n              </Grid.Column>\n              <Grid.Column width={2}>\n                <OrderInforField\n                  title=\"Customer Phone\"\n                  label={customerPhoneNumber}\n                ></OrderInforField>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <OrderInforField\n                  title=\"Change Status\"\n                  label={customerPhoneNumber}\n                ></OrderInforField>\n              </Grid.Column>\n            </Grid>\n          </div>\n          <div\n            className=\"order-items ag-theme-material\"\n            style={{ height: 240 }}\n          >\n            <AgGridReact\n              reactUi=\"true\"\n              className=\"ag-theme-material\"\n              animateRows=\"true\"\n              columnDefs={columnDefs}\n              defaultColDef={defaultColDef}\n              enableRangeSelection=\"true\"\n              rowData={itemsInCart}\n              rowSelection=\"multiple\"\n              suppressRowClickSelection=\"true\"\n            />\n          </div>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"black\" onClick={() => setIsOpen(false)}>\n          Close\n        </Button>\n        <Button\n          content=\"Cancel Order\"\n          labelPosition=\"left\"\n          icon=\"close\"\n          onClick={() => setIsOpen(false)}\n          color=\"red\"\n        />\n        <Button\n          content=\"Complete Order\"\n          labelPosition=\"right\"\n          icon=\"checkmark\"\n          onClick={() => setIsOpen(false)}\n          positive\n        />\n      </Modal.Actions>\n    </Modal>\n  )\n})\n\nexport default OrderDetailModal\n"]},"metadata":{},"sourceType":"module"}