{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport MenuItemList from \"./../components/MenuItemList\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport Cart from \"../components/Cart\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkExistCartCustomerWithShop, addItemToCart, removeItemFromCart, initialCartData } from \"../store/actions/shop-action\";\nimport { useState } from \"react\";\nimport useToast from \"../hooks/useToast\";\nimport { useLocation } from \"react-router-dom\";\nimport Load from \"../components/Loader\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Store = () => {\n  _s();\n\n  const param = useParams();\n  const [isClick, setIsClick] = useState(false);\n  const [isInit, setIsInit] = useState(true);\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const shop = useSelector(state => state.shop.cart);\n  const notification = useSelector(state => state.notification);\n\n  const addToCart = id => {\n    dispatch(addItemToCart(auth.customerId, id, shop.cartId));\n    setIsClick(true);\n  };\n\n  const removeItem = id => {\n    dispatch(removeItemFromCart(auth.customerId, id, shop.cartId));\n    setIsClick(true);\n  };\n\n  const isChange = () => {\n    setIsClick(true);\n  };\n\n  useEffect(() => {\n    if (isClick) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Food is added or removed into cart\");\n        setIsClick(false);\n      }\n\n      if (notification.status === \"completed\" && notification.error) {\n        toastError(notification.error);\n        setIsClick(false);\n      }\n    }\n  }, [notification, isClick, toastSuccess, toastError]);\n  useEffect(() => {\n    if (isInit) {\n      if (location.pathname.includes(\"store\")) {\n        dispatch(checkExistCartCustomerWithShop(auth.customerId, param.shopId));\n      }\n\n      if (location.pathname.includes(\"cart\")) {\n        dispatch(initialCartData(param.cartId));\n      }\n\n      setIsInit(false);\n    }\n  }, [dispatch, auth.customerId, param, location, isInit]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(Store, \"Eod5jjNDss6XnjVy91tFWHOBz/U=\", false, function () {\n  return [useParams, useToast, useLocation, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Store;\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/Store.jsx"],"names":["useParams","MenuItemList","Grid","Header","Cart","useEffect","useDispatch","useSelector","checkExistCartCustomerWithShop","addItemToCart","removeItemFromCart","initialCartData","useState","useToast","useLocation","Load","Store","param","isClick","setIsClick","isInit","setIsInit","toastSuccess","toastError","location","dispatch","auth","state","shop","cart","notification","addToCart","id","customerId","cartId","removeItem","isChange","status","error","pathname","includes","shopId"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router\"\nimport MenuItemList from \"./../components/MenuItemList\"\nimport { Grid, Header } from \"semantic-ui-react\"\nimport Cart from \"../components/Cart\"\nimport { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  checkExistCartCustomerWithShop,\n  addItemToCart,\n  removeItemFromCart,\n  initialCartData,\n} from \"../store/actions/shop-action\"\nimport { useState } from \"react\"\nimport useToast from \"../hooks/useToast\"\nimport { useLocation } from \"react-router-dom\"\nimport Load from \"../components/Loader\"\n\nconst Store = () => {\n  const param = useParams()\n  const [isClick, setIsClick] = useState(false)\n  const [isInit, setIsInit] = useState(true)\n  const { toastSuccess, toastError } = useToast()\n  const location = useLocation()\n  const dispatch = useDispatch()\n\n  const auth = useSelector(state => state.auth)\n  const shop = useSelector(state => state.shop.cart)\n  const notification = useSelector(state => state.notification)\n\n  const addToCart = id => {\n    dispatch(addItemToCart(auth.customerId, id, shop.cartId))\n    setIsClick(true)\n  }\n\n  const removeItem = id => {\n    dispatch(removeItemFromCart(auth.customerId, id, shop.cartId))\n    setIsClick(true)\n  }\n\n  const isChange = () => {\n    setIsClick(true)\n  }\n\n  useEffect(() => {\n    if (isClick) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Food is added or removed into cart\")\n        setIsClick(false)\n      }\n      if (notification.status === \"completed\" && notification.error) {\n        toastError(notification.error)\n        setIsClick(false)\n      }\n    }\n  }, [notification, isClick, toastSuccess, toastError])\n\n  useEffect(() => {\n    if (isInit) {\n      if (location.pathname.includes(\"store\")) {\n        dispatch(checkExistCartCustomerWithShop(auth.customerId, param.shopId))\n      }\n      if (location.pathname.includes(\"cart\")) {\n        dispatch(initialCartData(param.cartId))\n      }\n      setIsInit(false)\n    }\n  }, [dispatch, auth.customerId, param, location, isInit])\n\n  return (\n    <>\n      {/* {notification.status === \"pending\" && <Load />} */}\n      {/* {(isClick || notification.status !== \"pending\") && shop.shop && (\n        <>\n          <Header size=\"medium\">Shop {shop.shop.name}</Header>\n          <Grid>\n            <Grid.Column width={10}>\n              {shop.shop.items && (\n                <MenuItemList\n                  items={shop.shop.items.filter(\n                    item => item.isActive !== false\n                  )}\n                  addToCart={addToCart}\n                ></MenuItemList>\n              )}\n              {shop.shop.items.length === 0 && <h1>Don't have any items</h1>}\n            </Grid.Column>\n\n            <Grid.Column width={6}>\n              <Cart\n                cart={shop}\n                removeItem={removeItem}\n                isChange={isChange}\n              ></Cart>\n            </Grid.Column>\n          </Grid>\n        </>\n      )} */}\n    </>\n  )\n}\n\nexport default Store\n"]},"metadata":{},"sourceType":"module"}