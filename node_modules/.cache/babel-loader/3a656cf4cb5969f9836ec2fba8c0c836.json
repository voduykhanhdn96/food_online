{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/SignUp.jsx\",\n    _s = $RefreshSig$();\n\nimport { useHistory } from \"react-router\";\nimport { useState, useRef, useEffect } from \"react\";\nimport useToast from \"./../hooks/useToast\";\nimport { Button, Image, Form, Grid, Segment, Container, Divider, Label, Icon } from \"semantic-ui-react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { registerShop } from \"../store/actions/admin-action\";\nimport { registerCustomer } from \"../store/actions/shop-action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const notification = useSelector(state => state.notification);\n  const {\n    toastSuccess,\n    toastInfo\n  } = useToast();\n  const refName = useRef();\n  const refPhoneNumber = useRef();\n  const [isClickReg, setIsClickReg] = useState(false);\n  const [isShop, setIsShop] = useState(true);\n\n  const signIn = () => {\n    history.push(\"/sign-in\");\n  };\n\n  const toggleView = () => {\n    setIsShop(!isShop);\n  };\n\n  const submit = () => {\n    setIsClickReg(true); // Validate\n    // submit\n\n    var formData = new FormData();\n    formData.append(\"Name\", refName.current.value);\n    formData.append(\"PhoneNumber\", refPhoneNumber.current.value);\n\n    if (isShop) {\n      dispatch(registerShop(formData));\n    } else {\n      dispatch(registerCustomer(formData));\n    }\n  };\n\n  useEffect(() => {\n    if (isClickReg) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Register is success !\");\n\n        if (isShop) {\n          history.push(\"/sign-in\");\n        } else {\n          history.push(\"/\");\n        }\n      }\n\n      if (notification.status === \"completed\" && notification.error) {\n        toastInfo(notification.error);\n        setIsClickReg(false);\n      }\n    }\n  }, [history, notification, isShop, toastInfo, toastSuccess, isClickReg]);\n  const label = isShop ? \"Register as a customer?\" : \"Register as a store owner?\";\n  const labelName = isShop ? \"Shop Number\" : \"Customer Name\";\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"auth-form\",\n    children: [/*#__PURE__*/_jsxDEV(Image, {\n      src: \"/logo/logo64.png\",\n      centered: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      columns: \"equal\",\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 6,\n        children: /*#__PURE__*/_jsxDEV(Segment, {\n          raised: true,\n          children: [/*#__PURE__*/_jsxDEV(Label, {\n            as: \"a\",\n            style: {\n              width: \"100%\"\n            },\n            onClick: toggleView,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"question circle\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), \" \", label]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: labelName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: refName,\n                placeholder: labelName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                ref: refPhoneNumber,\n                placeholder: \"Phone Number\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              color: \"green\",\n              fluid: true,\n              onClick: submit,\n              children: \"Register\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Label, {\n            as: \"a\",\n            basic: true,\n            style: {\n              width: \"100%\"\n            },\n            color: \"grey\",\n            onClick: signIn,\n            children: [/*#__PURE__*/_jsxDEV(Icon, {\n              name: \"user\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this), \" Already a member. Sign In\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"6xM3EA+cPZU6VlRG+K8bmYczUGs=\", false, function () {\n  return [useHistory, useDispatch, useSelector, useToast];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/SignUp.jsx"],"names":["useHistory","useState","useRef","useEffect","useToast","Button","Image","Form","Grid","Segment","Container","Divider","Label","Icon","useDispatch","useSelector","registerShop","registerCustomer","Login","history","dispatch","notification","state","toastSuccess","toastInfo","refName","refPhoneNumber","isClickReg","setIsClickReg","isShop","setIsShop","signIn","push","toggleView","submit","formData","FormData","append","current","value","status","error","label","labelName","width"],"mappings":"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","sourcesContent":["import { useHistory } from \"react-router\"\nimport { useState, useRef, useEffect } from \"react\"\nimport useToast from \"./../hooks/useToast\"\nimport {\n  Button,\n  Image,\n  Form,\n  Grid,\n  Segment,\n  Container,\n  Divider,\n  Label,\n  Icon,\n} from \"semantic-ui-react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { registerShop } from \"../store/actions/admin-action\"\nimport { registerCustomer } from \"../store/actions/shop-action\"\n\nconst Login = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const notification = useSelector(state => state.notification)\n  \n  const { toastSuccess, toastInfo } = useToast()\n\n  const refName = useRef()\n  const refPhoneNumber = useRef()\n\n  const [isClickReg, setIsClickReg] = useState(false)\n  const [isShop, setIsShop] = useState(true)\n\n  const signIn = () => {\n    history.push(\"/sign-in\")\n  }\n\n  const toggleView = () => {\n    setIsShop(!isShop)\n  }\n\n  const submit = () => {\n    setIsClickReg(true)\n    // Validate\n\n    // submit\n    var formData = new FormData()\n    formData.append(\"Name\", refName.current.value)\n    formData.append(\"PhoneNumber\", refPhoneNumber.current.value)\n    if (isShop) {\n      dispatch(registerShop(formData))\n    } else {\n      dispatch(registerCustomer(formData))\n    }\n  }\n\n  useEffect(() => {\n    if (isClickReg) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Register is success !\")\n        if (isShop) {\n          history.push(\"/sign-in\")\n        } else {\n          history.push(\"/\")\n        }\n      }\n      if (notification.status === \"completed\" && notification.error) {\n        toastInfo(notification.error)\n        setIsClickReg(false)\n      }\n    }\n  }, [history, notification, isShop, toastInfo, toastSuccess, isClickReg])\n\n  const label = isShop\n    ? \"Register as a customer?\"\n    : \"Register as a store owner?\"\n  const labelName = isShop ? \"Shop Number\" : \"Customer Name\"\n\n  return (\n    <Container className=\"auth-form\">\n      <Image src=\"/logo/logo64.png\" centered />\n      <Grid columns=\"equal\">\n        <Grid.Column></Grid.Column>\n        <Grid.Column width={6}>\n          <Segment raised>\n            <Label as=\"a\" style={{ width: \"100%\" }} onClick={toggleView}>\n              <Icon name=\"question circle\" /> {label}\n            </Label>\n            <Divider />\n\n            <Form>\n              <Form.Field>\n                <label>{labelName}</label>\n                <input ref={refName} placeholder={labelName} />\n              </Form.Field>\n              <Form.Field>\n                <label>Phone Number</label>\n                <input ref={refPhoneNumber} placeholder=\"Phone Number\" />\n              </Form.Field>\n              <Button type=\"submit\" color=\"green\" fluid onClick={submit}>\n                Register\n              </Button>\n            </Form>\n\n            <Divider />\n            <Label\n              as=\"a\"\n              basic\n              style={{ width: \"100%\" }}\n              color=\"grey\"\n              onClick={signIn}\n            >\n              <Icon name=\"user\" /> Already a member. Sign In\n            </Label>\n          </Segment>\n        </Grid.Column>\n        <Grid.Column></Grid.Column>\n      </Grid>\n    </Container>\n  )\n}\n\nexport default Login\n"]},"metadata":{},"sourceType":"module"}