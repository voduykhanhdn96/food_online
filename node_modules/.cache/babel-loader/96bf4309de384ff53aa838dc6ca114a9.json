{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/ViewOrders/OrderDetailModal.jsx\",\n    _s = $RefreshSig$();\n\nimport { forwardRef, useImperativeHandle, useMemo, useState } from \"react\";\nimport { generateItems, generateOrders } from \"../../helpers/fake-data-helper\";\nimport { Button, Grid, Modal } from \"semantic-ui-react\";\nimport dayjs from \"dayjs\";\nimport { AgGridReact } from \"ag-grid-react/lib/agGridReact\";\nimport OrderInforField from \"./../../components/OrderInforField\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst OrderDetailModal = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [order] = useState(generateOrders());\n  useImperativeHandle(ref, () => ({\n    open(id) {\n      setIsOpen(true); // const order = props.orderList\n      //   .filter(item => item.itemId === id)\n      //   .map(filteredItem => {\n      //     return filteredItem\n      //   })\n\n      console.log(props.listOrder);\n    }\n\n  }));\n  const columnDefs = useMemo(() => [{\n    field: \"name\",\n    minWidth: 100\n  }, {\n    field: \"price\"\n  }, {\n    field: \"quantity\"\n  }, {\n    field: \"total\"\n  }, {\n    field: \"note\"\n  }], []);\n  const defaultColDef = useMemo(() => ({\n    resizable: false,\n    sortable: true\n  }), []);\n  const [rowData] = useState(generateItems());\n  const {\n    id,\n    orderNumber,\n    customerName,\n    customerPhone,\n    orderTime\n  } = order;\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setIsOpen(false),\n    onOpen: () => setIsOpen(true),\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: `Order #${id}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      image: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-info\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 3,\n              children: /*#__PURE__*/_jsxDEV(OrderInforField, {\n                title: \"Order No\",\n                label: orderNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 3,\n              children: /*#__PURE__*/_jsxDEV(OrderInforField, {\n                title: \"Order Time\",\n                label: dayjs(orderTime).format(\"MM/DD/YYYY HH:mm\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 3,\n              children: /*#__PURE__*/_jsxDEV(OrderInforField, {\n                title: \"Customer Name\",\n                label: customerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 3,\n              children: /*#__PURE__*/_jsxDEV(OrderInforField, {\n                title: \"Customer Phone\",\n                label: customerPhone\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-items ag-theme-material\",\n          style: {\n            height: 240\n          },\n          children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n            reactUi: \"true\",\n            className: \"ag-theme-material\",\n            animateRows: \"true\",\n            columnDefs: columnDefs,\n            defaultColDef: defaultColDef,\n            enableRangeSelection: \"true\",\n            rowData: rowData,\n            rowSelection: \"multiple\",\n            suppressRowClickSelection: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"black\",\n        onClick: () => setIsOpen(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Cancel Order\",\n        labelPosition: \"left\",\n        icon: \"close\",\n        onClick: () => setIsOpen(false),\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Complete Order\",\n        labelPosition: \"right\",\n        icon: \"checkmark\",\n        onClick: () => setIsOpen(false),\n        positive: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}, \"M2sCcnQxjhI99RdgIw7/kjawCl0=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = OrderDetailModal;\nexport default OrderDetailModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderDetailModal$forwardRef\");\n$RefreshReg$(_c2, \"OrderDetailModal\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/ViewOrders/OrderDetailModal.jsx"],"names":["forwardRef","useImperativeHandle","useMemo","useState","generateItems","generateOrders","Button","Grid","Modal","dayjs","AgGridReact","OrderInforField","OrderDetailModal","props","ref","isOpen","setIsOpen","order","open","id","console","log","listOrder","columnDefs","field","minWidth","defaultColDef","resizable","sortable","rowData","orderNumber","customerName","customerPhone","orderTime","format","height"],"mappings":"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","sourcesContent":["import { forwardRef, useImperativeHandle, useMemo, useState } from \"react\"\nimport { generateItems, generateOrders } from \"../../helpers/fake-data-helper\"\nimport { Button, Grid, Modal } from \"semantic-ui-react\"\nimport dayjs from \"dayjs\"\nimport { AgGridReact } from \"ag-grid-react/lib/agGridReact\"\nimport OrderInforField from \"./../../components/OrderInforField\"\n\nconst OrderDetailModal = forwardRef((props, ref) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [order] = useState(generateOrders())\n\n  useImperativeHandle(ref, () => ({\n    open(id) {\n      setIsOpen(true)\n      // const order = props.orderList\n      //   .filter(item => item.itemId === id)\n      //   .map(filteredItem => {\n      //     return filteredItem\n      //   })\n      console.log(props.listOrder)\n    },\n  }))\n\n  const columnDefs = useMemo(\n    () => [\n      { field: \"name\", minWidth: 100 },\n      { field: \"price\" },\n      { field: \"quantity\" },\n      { field: \"total\" },\n      { field: \"note\" },\n    ],\n    []\n  )\n\n  const defaultColDef = useMemo(\n    () => ({\n      resizable: false,\n      sortable: true,\n    }),\n    []\n  )\n\n  const [rowData] = useState(generateItems())\n\n  const { id, orderNumber, customerName, customerPhone, orderTime } = order\n\n  return (\n    <Modal\n      onClose={() => setIsOpen(false)}\n      onOpen={() => setIsOpen(true)}\n      open={isOpen}\n    >\n      <Modal.Header>{`Order #${id}`}</Modal.Header>\n      <Modal.Content image>\n        <Modal.Description>\n          <div className=\"order-info\">\n            <Grid container>\n              <Grid.Column width={3}>\n                <OrderInforField\n                  title=\"Order No\"\n                  label={orderNumber}\n                ></OrderInforField>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <OrderInforField\n                  title=\"Order Time\"\n                  label={dayjs(orderTime).format(\"MM/DD/YYYY HH:mm\")}\n                ></OrderInforField>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <OrderInforField\n                  title=\"Customer Name\"\n                  label={customerName}\n                ></OrderInforField>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <OrderInforField\n                  title=\"Customer Phone\"\n                  label={customerPhone}\n                ></OrderInforField>\n              </Grid.Column>\n            </Grid>\n          </div>\n          <div\n            className=\"order-items ag-theme-material\"\n            style={{ height: 240 }}\n          >\n            <AgGridReact\n              reactUi=\"true\"\n              className=\"ag-theme-material\"\n              animateRows=\"true\"\n              columnDefs={columnDefs}\n              defaultColDef={defaultColDef}\n              enableRangeSelection=\"true\"\n              rowData={rowData}\n              rowSelection=\"multiple\"\n              suppressRowClickSelection=\"true\"\n            />\n          </div>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"black\" onClick={() => setIsOpen(false)}>\n          Close\n        </Button>\n        <Button\n          content=\"Cancel Order\"\n          labelPosition=\"left\"\n          icon=\"close\"\n          onClick={() => setIsOpen(false)}\n          color=\"red\"\n        />\n        <Button\n          content=\"Complete Order\"\n          labelPosition=\"right\"\n          icon=\"checkmark\"\n          onClick={() => setIsOpen(false)}\n          positive\n        />\n      </Modal.Actions>\n    </Modal>\n  )\n})\n\nexport default OrderDetailModal\n"]},"metadata":{},"sourceType":"module"}