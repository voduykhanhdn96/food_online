{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/ViewOrders/OrderDetailModal.jsx\",\n    _s = $RefreshSig$();\n\nimport { forwardRef, useImperativeHandle, useMemo, useState } from \"react\";\nimport { Button, Grid, Modal, Dropdown } from \"semantic-ui-react\";\nimport dayjs from \"dayjs\";\nimport { AgGridReact } from \"ag-grid-react/lib/agGridReact\";\nimport OrderInforField from \"./../../components/OrderInforField\";\nimport { useDispatch } from \"react-redux\";\nimport { changeStatusOrder } from \"../../store/actions/admin-action\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = [{\n  key: 1,\n  text: \"Confirmed\",\n  value: \"Confirmed\"\n}, {\n  key: 2,\n  text: \"Sent To Kitchen\",\n  value: \"Sent To Kitchen\"\n}, {\n  key: 3,\n  text: \"Ready for Pickup\",\n  value: \"Ready for Pickup\"\n}, {\n  key: 4,\n  text: \"Ready for Delivery\",\n  value: \"Ready for Delivery\"\n}];\nconst OrderDetailModal = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [order, setOrder] = useState([]);\n  const history = useHistory();\n  const dispatch = useDispatch();\n  useImperativeHandle(ref, () => ({\n    open(id) {\n      setIsOpen(true);\n      const orderTemp = props.listOrder.filter(item => item.orderId === id).map(filteredItem => {\n        return filteredItem;\n      });\n      setOrder(orderTemp[0]);\n    }\n\n  }));\n  const columnDefs = useMemo(() => [{\n    field: \"customerName\",\n    minWidth: 100\n  }, {\n    field: \"price\"\n  }, {\n    field: \"amount\"\n  }, {\n    field: \"price\"\n  }], []);\n  const defaultColDef = useMemo(() => ({\n    resizable: false,\n    sortable: true\n  }), []);\n  const {\n    orderId,\n    status,\n    customerId,\n    customerName,\n    customerPhoneNumber,\n    itemsInCart,\n    orderTime,\n    shopId\n  } = order;\n\n  const changeStatus = (e, data) => {\n    dispatch(changeStatusOrder(orderId, data.value, customerId, shopId));\n    history.push(\"/order/\" + orderId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    onClose: () => setIsOpen(false),\n    onOpen: () => setIsOpen(true),\n    open: isOpen,\n    children: [/*#__PURE__*/_jsxDEV(Modal.Header, {\n      children: `Order #${orderId}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      image: true,\n      children: /*#__PURE__*/_jsxDEV(Modal.Description, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-info\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 2,\n              children: /*#__PURE__*/_jsxDEV(OrderInforField, {\n                title: \"Order No\",\n                label: orderId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 3,\n              children: /*#__PURE__*/_jsxDEV(OrderInforField, {\n                title: \"Order Time\",\n                label: dayjs(orderTime).format(\"MM/DD/YYYY HH:mm\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 2,\n              children: /*#__PURE__*/_jsxDEV(OrderInforField, {\n                title: \"Customer Name\",\n                label: customerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 2,\n              children: /*#__PURE__*/_jsxDEV(OrderInforField, {\n                title: \"Customer Phone\",\n                label: customerPhoneNumber\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 3,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"info-field\",\n                children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n                  children: \"Change Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Dropdown, {\n                  search: true,\n                  selection: true,\n                  defaultValue: status,\n                  wrapSelection: false,\n                  onChange: changeStatus,\n                  options: options,\n                  placeholder: \"Choose an option\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"order-items ag-theme-material\",\n          style: {\n            height: 240\n          },\n          children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n            reactUi: \"true\",\n            className: \"ag-theme-material\",\n            animateRows: \"true\",\n            columnDefs: columnDefs,\n            defaultColDef: defaultColDef,\n            enableRangeSelection: \"true\",\n            rowData: itemsInCart,\n            rowSelection: \"multiple\",\n            suppressRowClickSelection: \"true\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"black\",\n        onClick: () => setIsOpen(false),\n        children: \"Close\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Cancel Order\",\n        labelPosition: \"left\",\n        icon: \"close\",\n        onClick: () => setIsOpen(false),\n        color: \"red\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        content: \"Complete Order\",\n        labelPosition: \"right\",\n        icon: \"checkmark\",\n        onClick: () => setIsOpen(false),\n        positive: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}, \"Kl1qldvZ6UNVMdT+ywaJVCwFAJo=\", false, function () {\n  return [useHistory, useDispatch, useImperativeHandle];\n}));\n_c2 = OrderDetailModal;\nexport default OrderDetailModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"OrderDetailModal$forwardRef\");\n$RefreshReg$(_c2, \"OrderDetailModal\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/ViewOrders/OrderDetailModal.jsx"],"names":["forwardRef","useImperativeHandle","useMemo","useState","Button","Grid","Modal","Dropdown","dayjs","AgGridReact","OrderInforField","useDispatch","changeStatusOrder","useHistory","options","key","text","value","OrderDetailModal","props","ref","isOpen","setIsOpen","order","setOrder","history","dispatch","open","id","orderTemp","listOrder","filter","item","orderId","map","filteredItem","columnDefs","field","minWidth","defaultColDef","resizable","sortable","status","customerId","customerName","customerPhoneNumber","itemsInCart","orderTime","shopId","changeStatus","e","data","push","format","height"],"mappings":";;;AAAA,SAASA,UAAT,EAAqBC,mBAArB,EAA0CC,OAA1C,EAAmDC,QAAnD,QAAmE,OAAnE;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,QAA9B,QAA8C,mBAA9C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,+BAA5B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,iBAAT,QAAkC,kCAAlC;AACA,SAASC,UAAT,QAA2B,kBAA3B;;AACA,MAAMC,OAAO,GAAG,CACd;AAAEC,EAAAA,GAAG,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE,WAAhB;AAA6BC,EAAAA,KAAK,EAAE;AAApC,CADc,EAEd;AAAEF,EAAAA,GAAG,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE,iBAAhB;AAAmCC,EAAAA,KAAK,EAAE;AAA1C,CAFc,EAGd;AAAEF,EAAAA,GAAG,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE,kBAAhB;AAAoCC,EAAAA,KAAK,EAAE;AAA3C,CAHc,EAId;AAAEF,EAAAA,GAAG,EAAE,CAAP;AAAUC,EAAAA,IAAI,EAAE,oBAAhB;AAAsCC,EAAAA,KAAK,EAAE;AAA7C,CAJc,CAAhB;AAOA,MAAMC,gBAAgB,gBAAGlB,UAAU,SAAC,CAACmB,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AAClD,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACoB,KAAD,EAAQC,QAAR,IAAoBrB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMsB,OAAO,GAAGZ,UAAU,EAA1B;AACA,QAAMa,QAAQ,GAAGf,WAAW,EAA5B;AAEAV,EAAAA,mBAAmB,CAACmB,GAAD,EAAM,OAAO;AAC9BO,IAAAA,IAAI,CAACC,EAAD,EAAK;AACPN,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,YAAMO,SAAS,GAAGV,KAAK,CAACW,SAAN,CACfC,MADe,CACRC,IAAI,IAAIA,IAAI,CAACC,OAAL,KAAiBL,EADjB,EAEfM,GAFe,CAEXC,YAAY,IAAI;AACnB,eAAOA,YAAP;AACD,OAJe,CAAlB;AAKAX,MAAAA,QAAQ,CAACK,SAAS,CAAC,CAAD,CAAV,CAAR;AACD;;AAT6B,GAAP,CAAN,CAAnB;AAYA,QAAMO,UAAU,GAAGlC,OAAO,CACxB,MAAM,CACJ;AAAEmC,IAAAA,KAAK,EAAE,cAAT;AAAyBC,IAAAA,QAAQ,EAAE;AAAnC,GADI,EAEJ;AAAED,IAAAA,KAAK,EAAE;AAAT,GAFI,EAGJ;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAHI,EAIJ;AAAEA,IAAAA,KAAK,EAAE;AAAT,GAJI,CADkB,EAOxB,EAPwB,CAA1B;AAUA,QAAME,aAAa,GAAGrC,OAAO,CAC3B,OAAO;AACLsC,IAAAA,SAAS,EAAE,KADN;AAELC,IAAAA,QAAQ,EAAE;AAFL,GAAP,CAD2B,EAK3B,EAL2B,CAA7B;AAQA,QAAM;AACJR,IAAAA,OADI;AAEJS,IAAAA,MAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,mBALI;AAMJC,IAAAA,WANI;AAOJC,IAAAA,SAPI;AAQJC,IAAAA;AARI,MASFzB,KATJ;;AAWA,QAAM0B,YAAY,GAAG,CAACC,CAAD,EAAIC,IAAJ,KAAa;AAChCzB,IAAAA,QAAQ,CAACd,iBAAiB,CAACqB,OAAD,EAAUkB,IAAI,CAAClC,KAAf,EAAsB0B,UAAtB,EAAkCK,MAAlC,CAAlB,CAAR;AACAvB,IAAAA,OAAO,CAAC2B,IAAR,CAAa,YAAYnB,OAAzB;AACD,GAHD;;AAKA,sBACE,QAAC,KAAD;AACE,IAAA,OAAO,EAAE,MAAMX,SAAS,CAAC,KAAD,CAD1B;AAEE,IAAA,MAAM,EAAE,MAAMA,SAAS,CAAC,IAAD,CAFzB;AAGE,IAAA,IAAI,EAAED,MAHR;AAAA,4BAKE,QAAC,KAAD,CAAO,MAAP;AAAA,gBAAgB,UAASY,OAAQ;AAAjC;AAAA;AAAA;AAAA;AAAA,YALF,eAME,QAAC,KAAD,CAAO,OAAP;AAAe,MAAA,KAAK,MAApB;AAAA,6BACE,QAAC,KAAD,CAAO,WAAP;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,YAAf;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAA,oCACE,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,KAAK,EAAE,CAApB;AAAA,qCACE,QAAC,eAAD;AACE,gBAAA,KAAK,EAAC,UADR;AAEE,gBAAA,KAAK,EAAEA;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAOE,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,KAAK,EAAE,CAApB;AAAA,qCACE,QAAC,eAAD;AACE,gBAAA,KAAK,EAAC,YADR;AAEE,gBAAA,KAAK,EAAEzB,KAAK,CAACuC,SAAD,CAAL,CAAiBM,MAAjB,CAAwB,kBAAxB;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAPF,eAaE,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,KAAK,EAAE,CAApB;AAAA,qCACE,QAAC,eAAD;AACE,gBAAA,KAAK,EAAC,eADR;AAEE,gBAAA,KAAK,EAAET;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAbF,eAmBE,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,KAAK,EAAE,CAApB;AAAA,qCACE,QAAC,eAAD;AACE,gBAAA,KAAK,EAAC,gBADR;AAEE,gBAAA,KAAK,EAAEC;AAFT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAnBF,eAyBE,QAAC,IAAD,CAAM,MAAN;AAAa,cAAA,KAAK,EAAE,CAApB;AAAA,qCACE;AAAK,gBAAA,SAAS,EAAC,YAAf;AAAA,wCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,QAAD;AACE,kBAAA,MAAM,MADR;AAEE,kBAAA,SAAS,MAFX;AAGE,kBAAA,YAAY,EAAEH,MAHhB;AAIE,kBAAA,aAAa,EAAE,KAJjB;AAKE,kBAAA,QAAQ,EAAEO,YALZ;AAME,kBAAA,OAAO,EAAEnC,OANX;AAOE,kBAAA,WAAW,EAAC;AAPd;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eA2CE;AACE,UAAA,SAAS,EAAC,+BADZ;AAEE,UAAA,KAAK,EAAE;AAAEwC,YAAAA,MAAM,EAAE;AAAV,WAFT;AAAA,iCAIE,QAAC,WAAD;AACE,YAAA,OAAO,EAAC,MADV;AAEE,YAAA,SAAS,EAAC,mBAFZ;AAGE,YAAA,WAAW,EAAC,MAHd;AAIE,YAAA,UAAU,EAAElB,UAJd;AAKE,YAAA,aAAa,EAAEG,aALjB;AAME,YAAA,oBAAoB,EAAC,MANvB;AAOE,YAAA,OAAO,EAAEO,WAPX;AAQE,YAAA,YAAY,EAAC,UARf;AASE,YAAA,yBAAyB,EAAC;AAT5B;AAAA;AAAA;AAAA;AAAA;AAJF;AAAA;AAAA;AAAA;AAAA,gBA3CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANF,eAoEE,QAAC,KAAD,CAAO,OAAP;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAsB,QAAA,OAAO,EAAE,MAAMxB,SAAS,CAAC,KAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,cADV;AAEE,QAAA,aAAa,EAAC,MAFhB;AAGE,QAAA,IAAI,EAAC,OAHP;AAIE,QAAA,OAAO,EAAE,MAAMA,SAAS,CAAC,KAAD,CAJ1B;AAKE,QAAA,KAAK,EAAC;AALR;AAAA;AAAA;AAAA;AAAA,cAJF,eAWE,QAAC,MAAD;AACE,QAAA,OAAO,EAAC,gBADV;AAEE,QAAA,aAAa,EAAC,OAFhB;AAGE,QAAA,IAAI,EAAC,WAHP;AAIE,QAAA,OAAO,EAAE,MAAMA,SAAS,CAAC,KAAD,CAJ1B;AAKE,QAAA,QAAQ;AALV;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YApEF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0FD,CA9IkC;AAAA,UAGjBT,UAHiB,EAIhBF,WAJgB,EAMjCV,mBANiC;AAAA,GAAnC;MAAMiB,gB;AAgJN,eAAeA,gBAAf","sourcesContent":["import { forwardRef, useImperativeHandle, useMemo, useState } from \"react\"\nimport { Button, Grid, Modal, Dropdown } from \"semantic-ui-react\"\nimport dayjs from \"dayjs\"\nimport { AgGridReact } from \"ag-grid-react/lib/agGridReact\"\nimport OrderInforField from \"./../../components/OrderInforField\"\nimport { useDispatch } from \"react-redux\"\nimport { changeStatusOrder } from \"../../store/actions/admin-action\"\nimport { useHistory } from \"react-router-dom\"\nconst options = [\n  { key: 1, text: \"Confirmed\", value: \"Confirmed\" },\n  { key: 2, text: \"Sent To Kitchen\", value: \"Sent To Kitchen\" },\n  { key: 3, text: \"Ready for Pickup\", value: \"Ready for Pickup\" },\n  { key: 4, text: \"Ready for Delivery\", value: \"Ready for Delivery\" },\n]\n\nconst OrderDetailModal = forwardRef((props, ref) => {\n  const [isOpen, setIsOpen] = useState(false)\n  const [order, setOrder] = useState([])\n  const history = useHistory()\n  const dispatch = useDispatch()\n\n  useImperativeHandle(ref, () => ({\n    open(id) {\n      setIsOpen(true)\n      const orderTemp = props.listOrder\n        .filter(item => item.orderId === id)\n        .map(filteredItem => {\n          return filteredItem\n        })\n      setOrder(orderTemp[0])\n    },\n  }))\n\n  const columnDefs = useMemo(\n    () => [\n      { field: \"customerName\", minWidth: 100 },\n      { field: \"price\" },\n      { field: \"amount\" },\n      { field: \"price\" },\n    ],\n    []\n  )\n\n  const defaultColDef = useMemo(\n    () => ({\n      resizable: false,\n      sortable: true,\n    }),\n    []\n  )\n\n  const {\n    orderId,\n    status,\n    customerId,\n    customerName,\n    customerPhoneNumber,\n    itemsInCart,\n    orderTime,\n    shopId,\n  } = order\n\n  const changeStatus = (e, data) => {\n    dispatch(changeStatusOrder(orderId, data.value, customerId, shopId))\n    history.push(\"/order/\" + orderId)\n  }\n\n  return (\n    <Modal\n      onClose={() => setIsOpen(false)}\n      onOpen={() => setIsOpen(true)}\n      open={isOpen}\n    >\n      <Modal.Header>{`Order #${orderId}`}</Modal.Header>\n      <Modal.Content image>\n        <Modal.Description>\n          <div className=\"order-info\">\n            <Grid container>\n              <Grid.Column width={2}>\n                <OrderInforField\n                  title=\"Order No\"\n                  label={orderId}\n                ></OrderInforField>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <OrderInforField\n                  title=\"Order Time\"\n                  label={dayjs(orderTime).format(\"MM/DD/YYYY HH:mm\")}\n                ></OrderInforField>\n              </Grid.Column>\n              <Grid.Column width={2}>\n                <OrderInforField\n                  title=\"Customer Name\"\n                  label={customerName}\n                ></OrderInforField>\n              </Grid.Column>\n              <Grid.Column width={2}>\n                <OrderInforField\n                  title=\"Customer Phone\"\n                  label={customerPhoneNumber}\n                ></OrderInforField>\n              </Grid.Column>\n              <Grid.Column width={3}>\n                <div className=\"info-field\">\n                  <h5>Change Status</h5>\n                  <Dropdown\n                    search\n                    selection\n                    defaultValue={status}\n                    wrapSelection={false}\n                    onChange={changeStatus}\n                    options={options}\n                    placeholder=\"Choose an option\"\n                  />\n                </div>\n              </Grid.Column>\n            </Grid>\n          </div>\n          <div\n            className=\"order-items ag-theme-material\"\n            style={{ height: 240 }}\n          >\n            <AgGridReact\n              reactUi=\"true\"\n              className=\"ag-theme-material\"\n              animateRows=\"true\"\n              columnDefs={columnDefs}\n              defaultColDef={defaultColDef}\n              enableRangeSelection=\"true\"\n              rowData={itemsInCart}\n              rowSelection=\"multiple\"\n              suppressRowClickSelection=\"true\"\n            />\n          </div>\n        </Modal.Description>\n      </Modal.Content>\n      <Modal.Actions>\n        <Button color=\"black\" onClick={() => setIsOpen(false)}>\n          Close\n        </Button>\n        <Button\n          content=\"Cancel Order\"\n          labelPosition=\"left\"\n          icon=\"close\"\n          onClick={() => setIsOpen(false)}\n          color=\"red\"\n        />\n        <Button\n          content=\"Complete Order\"\n          labelPosition=\"right\"\n          icon=\"checkmark\"\n          onClick={() => setIsOpen(false)}\n          positive\n        />\n      </Modal.Actions>\n    </Modal>\n  )\n})\n\nexport default OrderDetailModal\n"]},"metadata":{},"sourceType":"module"}