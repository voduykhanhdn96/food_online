{"ast":null,"code":"import { loginShop } from \"../../lib/api_shop\";\nimport { loginCustomer } from \"../../lib/api_customer\";\nexport const loginAction = (phoneNumber, typeLogin) => {\n  return async dispatch => {\n    try {\n      let session;\n\n      if (typeLogin === \"SHOP\") {\n        session = await loginShop(phoneNumber);\n      } else {\n        session = await loginCustomer(phoneNumber);\n      }\n\n      dispatch({\n        type: \"ADD_TO_SESSION_SHOP\",\n        payload: {\n          shopId: session.shopId,\n          customerId: session.customerId,\n          phoneNumber: session.phoneNumber\n        }\n      });\n      dispatch({\n        type: \"SUCCESS\"\n      });\n    } catch (error) {\n      dispatch({\n        type: \"ERROR\",\n        payload: {\n          errorMessage: error.message\n        }\n      });\n      dispatch({\n        type: \"CLEAR_SESSION_SHOP\"\n      });\n    }\n\n    dispatch({\n      type: \"CLEAR_STATUS\"\n    });\n  };\n};\nexport const logoutAction = () => {\n  return dispatch => {\n    dispatch({\n      type: \"CLEAR_SESSION_SHOP\"\n    });\n  };\n};","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/food_online/src/app/store/actions/auth-action.js"],"names":["loginShop","loginCustomer","loginAction","phoneNumber","typeLogin","dispatch","session","type","payload","shopId","customerId","error","errorMessage","message","logoutAction"],"mappings":"AAAA,SAASA,SAAT,QAA0B,oBAA1B;AACA,SAASC,aAAT,QAA8B,wBAA9B;AAEA,OAAO,MAAMC,WAAW,GAAG,CAACC,WAAD,EAAcC,SAAd,KAA4B;AACrD,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,UAAIC,OAAJ;;AACA,UAAIF,SAAS,KAAK,MAAlB,EAA0B;AACxBE,QAAAA,OAAO,GAAG,MAAMN,SAAS,CAACG,WAAD,CAAzB;AACD,OAFD,MAEO;AACLG,QAAAA,OAAO,GAAG,MAAML,aAAa,CAACE,WAAD,CAA7B;AACD;;AACDE,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,qBADC;AAEPC,QAAAA,OAAO,EAAE;AACPC,UAAAA,MAAM,EAAEH,OAAO,CAACG,MADT;AAEPC,UAAAA,UAAU,EAAEJ,OAAO,CAACI,UAFb;AAGPP,UAAAA,WAAW,EAAEG,OAAO,CAACH;AAHd;AAFF,OAAD,CAAR;AAQAE,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD,KAhBD,CAgBE,OAAOI,KAAP,EAAc;AACdN,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAE,OADC;AAEPC,QAAAA,OAAO,EAAE;AAAEI,UAAAA,YAAY,EAAED,KAAK,CAACE;AAAtB;AAFF,OAAD,CAAR;AAIAR,MAAAA,QAAQ,CAAC;AAAEE,QAAAA,IAAI,EAAE;AAAR,OAAD,CAAR;AACD;;AACDF,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAzBD;AA0BD,CA3BM;AA6BP,OAAO,MAAMO,YAAY,GAAG,MAAM;AAChC,SAAOT,QAAQ,IAAI;AACjBA,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAFD;AAGD,CAJM","sourcesContent":["import { loginShop } from \"../../lib/api_shop\"\nimport { loginCustomer } from \"../../lib/api_customer\"\n\nexport const loginAction = (phoneNumber, typeLogin) => {\n  return async dispatch => {\n    try {\n      let session\n      if (typeLogin === \"SHOP\") {\n        session = await loginShop(phoneNumber)\n      } else {\n        session = await loginCustomer(phoneNumber)\n      }\n      dispatch({\n        type: \"ADD_TO_SESSION_SHOP\",\n        payload: {\n          shopId: session.shopId,\n          customerId: session.customerId,\n          phoneNumber: session.phoneNumber,\n        },\n      })\n      dispatch({ type: \"SUCCESS\" })\n    } catch (error) {\n      dispatch({\n        type: \"ERROR\",\n        payload: { errorMessage: error.message },\n      })\n      dispatch({ type: \"CLEAR_SESSION_SHOP\" })\n    }\n    dispatch({ type: \"CLEAR_STATUS\" })\n  }\n}\n\nexport const logoutAction = () => {\n  return dispatch => {\n    dispatch({ type: \"CLEAR_SESSION_SHOP\" })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}