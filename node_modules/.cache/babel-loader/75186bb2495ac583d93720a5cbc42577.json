{"ast":null,"code":"// ag-grid-react v26.1.0\n\"use strict\";\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar react_1 = __importStar(require(\"react\"));\n\nvar utils_1 = require(\"../utils\");\n\nvar beansContext_1 = require(\"../beansContext\");\n\nvar agGridReactFire_1 = require(\"../agGridReactFire\");\n\nvar DetailCellRenderer = function (props, ref) {\n  var _a = react_1.useContext(beansContext_1.BeansContext),\n      ctrlsFactory = _a.ctrlsFactory,\n      context = _a.context,\n      gridOptionsWrapper = _a.gridOptionsWrapper,\n      resizeObserverService = _a.resizeObserverService,\n      clientSideRowModel = _a.clientSideRowModel,\n      serverSideRowModel = _a.serverSideRowModel;\n\n  var _b = react_1.useState(new utils_1.CssClasses()),\n      cssClasses = _b[0],\n      setCssClasses = _b[1];\n\n  var _c = react_1.useState(new utils_1.CssClasses()),\n      gridCssClasses = _c[0],\n      setGridCssClasses = _c[1];\n\n  var _d = react_1.useState(),\n      detailGridOptions = _d[0],\n      setDetailGridOptions = _d[1];\n\n  var _e = react_1.useState(),\n      detailRowData = _e[0],\n      setDetailRowData = _e[1];\n\n  var ctrlRef = react_1.useRef();\n  var eGuiRef = react_1.useRef(null);\n  var topClassName = react_1.useMemo(function () {\n    return cssClasses.toString() + ' ag-details-row';\n  }, [cssClasses]);\n  var gridClassName = react_1.useMemo(function () {\n    return gridCssClasses.toString() + ' ag-details-grid';\n  }, [gridCssClasses]);\n\n  if (ref) {\n    react_1.useImperativeHandle(ref, function () {\n      return {\n        refresh: function () {\n          return ctrlRef.current.refresh();\n        }\n      };\n    });\n  }\n\n  react_1.useEffect(function () {\n    if (props.template) {\n      console.warn('AG Grid: detailCellRendererParams.template is not supported by React UI - this only works with frameworks that work against String templates. To change the template, please provide your own React Detail Cell Renderer.');\n    }\n  }, []);\n  react_1.useEffect(function () {\n    var compProxy = {\n      addOrRemoveCssClass: function (name, on) {\n        return setCssClasses(function (prev) {\n          return prev.setClass(name, on);\n        });\n      },\n      addOrRemoveDetailGridCssClass: function (name, on) {\n        return setGridCssClasses(function (prev) {\n          return prev.setClass(name, on);\n        });\n      },\n      setDetailGrid: function (gridOptions) {\n        return setDetailGridOptions(gridOptions);\n      },\n      setRowData: function (rowData) {\n        return setDetailRowData(rowData);\n      }\n    };\n    var ctrl = ctrlsFactory.getInstance('detailCellRenderer');\n\n    if (!ctrl) {\n      return;\n    } // should never happen, means master/detail module not loaded\n\n\n    context.createBean(ctrl);\n    ctrl.init(compProxy, props);\n    ctrlRef.current = ctrl;\n    var resizeObserverDestroyFunc;\n\n    if (gridOptionsWrapper.isDetailRowAutoHeight()) {\n      var checkRowSizeFunc = function () {\n        var clientHeight = eGuiRef.current.clientHeight; // if the UI is not ready, the height can be 0, which we ignore, as otherwise a flicker will occur\n        // as UI goes from the default height, to 0, then to the real height as UI becomes ready. this means\n        // it's not possible for have 0 as auto-height, however this is an improbable use case, as even an\n        // empty detail grid would still have some styling around it giving at least a few pixels.\n\n        if (clientHeight != null && clientHeight > 0) {\n          // we do the update in a timeout, to make sure we are not calling from inside the grid\n          // doing another update\n          var updateRowHeightFunc = function () {\n            props.node.setRowHeight(clientHeight);\n\n            if (clientSideRowModel) {\n              clientSideRowModel.onRowHeightChanged();\n            } else if (serverSideRowModel) {\n              serverSideRowModel.onRowHeightChanged();\n            }\n          };\n\n          setTimeout(updateRowHeightFunc, 0);\n        }\n      };\n\n      resizeObserverDestroyFunc = resizeObserverService.observeResize(eGuiRef.current, checkRowSizeFunc);\n      checkRowSizeFunc();\n    }\n\n    return function () {\n      context.destroyBean(ctrl);\n    };\n  }, []);\n  var setGridApi = react_1.useCallback(function (api, columnApi) {\n    ctrlRef.current.registerDetailWithMaster(api, columnApi);\n  }, []);\n  return react_1.default.createElement(\"div\", {\n    className: topClassName,\n    ref: eGuiRef\n  }, detailGridOptions && react_1.default.createElement(agGridReactFire_1.AgGridReactFire, __assign({\n    className: gridClassName\n  }, detailGridOptions, {\n    rowData: detailRowData,\n    setGridApi: setGridApi\n  })));\n};\n\nexports.default = react_1.forwardRef(DetailCellRenderer);","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/node_modules/ag-grid-react/lib/next/cellRenderer/detailCellRenderer.js"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","__importStar","mod","__esModule","result","k","defineProperty","exports","value","react_1","require","utils_1","beansContext_1","agGridReactFire_1","DetailCellRenderer","props","ref","_a","useContext","BeansContext","ctrlsFactory","context","gridOptionsWrapper","resizeObserverService","clientSideRowModel","serverSideRowModel","_b","useState","CssClasses","cssClasses","setCssClasses","_c","gridCssClasses","setGridCssClasses","_d","detailGridOptions","setDetailGridOptions","_e","detailRowData","setDetailRowData","ctrlRef","useRef","eGuiRef","topClassName","useMemo","toString","gridClassName","useImperativeHandle","refresh","current","useEffect","template","console","warn","compProxy","addOrRemoveCssClass","name","on","prev","setClass","addOrRemoveDetailGridCssClass","setDetailGrid","gridOptions","setRowData","rowData","ctrl","getInstance","createBean","init","resizeObserverDestroyFunc","isDetailRowAutoHeight","checkRowSizeFunc","clientHeight","updateRowHeightFunc","node","setRowHeight","onRowHeightChanged","setTimeout","observeResize","destroyBean","setGridApi","useCallback","api","columnApi","registerDetailWithMaster","default","createElement","className","AgGridReactFire","forwardRef"],"mappings":"AAAA;AACA;;AACA,IAAIA,QAAQ,GAAI,QAAQ,KAAKA,QAAd,IAA2B,YAAY;AAClDA,EAAAA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAASC,CAAT,EAAY;AACpC,SAAK,IAAIC,CAAJ,EAAOC,CAAC,GAAG,CAAX,EAAcC,CAAC,GAAGC,SAAS,CAACC,MAAjC,EAAyCH,CAAC,GAAGC,CAA7C,EAAgDD,CAAC,EAAjD,EAAqD;AACjDD,MAAAA,CAAC,GAAGG,SAAS,CAACF,CAAD,CAAb;;AACA,WAAK,IAAII,CAAT,IAAcL,CAAd,EAAiB,IAAIH,MAAM,CAACS,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCR,CAArC,EAAwCK,CAAxC,CAAJ,EACbN,CAAC,CAACM,CAAD,CAAD,GAAOL,CAAC,CAACK,CAAD,CAAR;AACP;;AACD,WAAON,CAAP;AACH,GAPD;;AAQA,SAAOH,QAAQ,CAACa,KAAT,CAAe,IAAf,EAAqBN,SAArB,CAAP;AACH,CAVD;;AAWA,IAAIO,YAAY,GAAI,QAAQ,KAAKA,YAAd,IAA+B,UAAUC,GAAV,EAAe;AAC7D,MAAIA,GAAG,IAAIA,GAAG,CAACC,UAAf,EAA2B,OAAOD,GAAP;AAC3B,MAAIE,MAAM,GAAG,EAAb;AACA,MAAIF,GAAG,IAAI,IAAX,EAAiB,KAAK,IAAIG,CAAT,IAAcH,GAAd,EAAmB,IAAId,MAAM,CAACU,cAAP,CAAsBC,IAAtB,CAA2BG,GAA3B,EAAgCG,CAAhC,CAAJ,EAAwCD,MAAM,CAACC,CAAD,CAAN,GAAYH,GAAG,CAACG,CAAD,CAAf;AAC5ED,EAAAA,MAAM,CAAC,SAAD,CAAN,GAAoBF,GAApB;AACA,SAAOE,MAAP;AACH,CAND;;AAOAhB,MAAM,CAACkB,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAIC,OAAO,GAAGR,YAAY,CAACS,OAAO,CAAC,OAAD,CAAR,CAA1B;;AACA,IAAIC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAArB;;AACA,IAAIE,cAAc,GAAGF,OAAO,CAAC,iBAAD,CAA5B;;AACA,IAAIG,iBAAiB,GAAGH,OAAO,CAAC,oBAAD,CAA/B;;AACA,IAAII,kBAAkB,GAAG,UAAUC,KAAV,EAAiBC,GAAjB,EAAsB;AAC3C,MAAIC,EAAE,GAAGR,OAAO,CAACS,UAAR,CAAmBN,cAAc,CAACO,YAAlC,CAAT;AAAA,MAA0DC,YAAY,GAAGH,EAAE,CAACG,YAA5E;AAAA,MAA0FC,OAAO,GAAGJ,EAAE,CAACI,OAAvG;AAAA,MAAgHC,kBAAkB,GAAGL,EAAE,CAACK,kBAAxI;AAAA,MAA4JC,qBAAqB,GAAGN,EAAE,CAACM,qBAAvL;AAAA,MAA8MC,kBAAkB,GAAGP,EAAE,CAACO,kBAAtO;AAAA,MAA0PC,kBAAkB,GAAGR,EAAE,CAACQ,kBAAlR;;AACA,MAAIC,EAAE,GAAGjB,OAAO,CAACkB,QAAR,CAAiB,IAAIhB,OAAO,CAACiB,UAAZ,EAAjB,CAAT;AAAA,MAAqDC,UAAU,GAAGH,EAAE,CAAC,CAAD,CAApE;AAAA,MAAyEI,aAAa,GAAGJ,EAAE,CAAC,CAAD,CAA3F;;AACA,MAAIK,EAAE,GAAGtB,OAAO,CAACkB,QAAR,CAAiB,IAAIhB,OAAO,CAACiB,UAAZ,EAAjB,CAAT;AAAA,MAAqDI,cAAc,GAAGD,EAAE,CAAC,CAAD,CAAxE;AAAA,MAA6EE,iBAAiB,GAAGF,EAAE,CAAC,CAAD,CAAnG;;AACA,MAAIG,EAAE,GAAGzB,OAAO,CAACkB,QAAR,EAAT;AAAA,MAA6BQ,iBAAiB,GAAGD,EAAE,CAAC,CAAD,CAAnD;AAAA,MAAwDE,oBAAoB,GAAGF,EAAE,CAAC,CAAD,CAAjF;;AACA,MAAIG,EAAE,GAAG5B,OAAO,CAACkB,QAAR,EAAT;AAAA,MAA6BW,aAAa,GAAGD,EAAE,CAAC,CAAD,CAA/C;AAAA,MAAoDE,gBAAgB,GAAGF,EAAE,CAAC,CAAD,CAAzE;;AACA,MAAIG,OAAO,GAAG/B,OAAO,CAACgC,MAAR,EAAd;AACA,MAAIC,OAAO,GAAGjC,OAAO,CAACgC,MAAR,CAAe,IAAf,CAAd;AACA,MAAIE,YAAY,GAAGlC,OAAO,CAACmC,OAAR,CAAgB,YAAY;AAAE,WAAOf,UAAU,CAACgB,QAAX,KAAwB,iBAA/B;AAAmD,GAAjF,EAAmF,CAAChB,UAAD,CAAnF,CAAnB;AACA,MAAIiB,aAAa,GAAGrC,OAAO,CAACmC,OAAR,CAAgB,YAAY;AAAE,WAAOZ,cAAc,CAACa,QAAf,KAA4B,kBAAnC;AAAwD,GAAtF,EAAwF,CAACb,cAAD,CAAxF,CAApB;;AACA,MAAIhB,GAAJ,EAAS;AACLP,IAAAA,OAAO,CAACsC,mBAAR,CAA4B/B,GAA5B,EAAiC,YAAY;AAAE,aAAQ;AACnDgC,QAAAA,OAAO,EAAE,YAAY;AAAE,iBAAOR,OAAO,CAACS,OAAR,CAAgBD,OAAhB,EAAP;AAAmC;AADP,OAAR;AAE1C,KAFL;AAGH;;AACDvC,EAAAA,OAAO,CAACyC,SAAR,CAAkB,YAAY;AAC1B,QAAInC,KAAK,CAACoC,QAAV,EAAoB;AAChBC,MAAAA,OAAO,CAACC,IAAR,CAAa,2NAAb;AACH;AACJ,GAJD,EAIG,EAJH;AAKA5C,EAAAA,OAAO,CAACyC,SAAR,CAAkB,YAAY;AAC1B,QAAII,SAAS,GAAG;AACZC,MAAAA,mBAAmB,EAAE,UAAUC,IAAV,EAAgBC,EAAhB,EAAoB;AAAE,eAAO3B,aAAa,CAAC,UAAU4B,IAAV,EAAgB;AAAE,iBAAOA,IAAI,CAACC,QAAL,CAAcH,IAAd,EAAoBC,EAApB,CAAP;AAAiC,SAApD,CAApB;AAA4E,OAD3G;AAEZG,MAAAA,6BAA6B,EAAE,UAAUJ,IAAV,EAAgBC,EAAhB,EAAoB;AAAE,eAAOxB,iBAAiB,CAAC,UAAUyB,IAAV,EAAgB;AAAE,iBAAOA,IAAI,CAACC,QAAL,CAAcH,IAAd,EAAoBC,EAApB,CAAP;AAAiC,SAApD,CAAxB;AAAgF,OAFzH;AAGZI,MAAAA,aAAa,EAAE,UAAUC,WAAV,EAAuB;AAAE,eAAO1B,oBAAoB,CAAC0B,WAAD,CAA3B;AAA2C,OAHvE;AAIZC,MAAAA,UAAU,EAAE,UAAUC,OAAV,EAAmB;AAAE,eAAOzB,gBAAgB,CAACyB,OAAD,CAAvB;AAAmC;AAJxD,KAAhB;AAMA,QAAIC,IAAI,GAAG7C,YAAY,CAAC8C,WAAb,CAAyB,oBAAzB,CAAX;;AACA,QAAI,CAACD,IAAL,EAAW;AACP;AACH,KAVyB,CAUxB;;;AACF5C,IAAAA,OAAO,CAAC8C,UAAR,CAAmBF,IAAnB;AACAA,IAAAA,IAAI,CAACG,IAAL,CAAUd,SAAV,EAAqBvC,KAArB;AACAyB,IAAAA,OAAO,CAACS,OAAR,GAAkBgB,IAAlB;AACA,QAAII,yBAAJ;;AACA,QAAI/C,kBAAkB,CAACgD,qBAAnB,EAAJ,EAAgD;AAC5C,UAAIC,gBAAgB,GAAG,YAAY;AAC/B,YAAIC,YAAY,GAAG9B,OAAO,CAACO,OAAR,CAAgBuB,YAAnC,CAD+B,CAE/B;AACA;AACA;AACA;;AACA,YAAIA,YAAY,IAAI,IAAhB,IAAwBA,YAAY,GAAG,CAA3C,EAA8C;AAC1C;AACA;AACA,cAAIC,mBAAmB,GAAG,YAAY;AAClC1D,YAAAA,KAAK,CAAC2D,IAAN,CAAWC,YAAX,CAAwBH,YAAxB;;AACA,gBAAIhD,kBAAJ,EAAwB;AACpBA,cAAAA,kBAAkB,CAACoD,kBAAnB;AACH,aAFD,MAGK,IAAInD,kBAAJ,EAAwB;AACzBA,cAAAA,kBAAkB,CAACmD,kBAAnB;AACH;AACJ,WARD;;AASAC,UAAAA,UAAU,CAACJ,mBAAD,EAAsB,CAAtB,CAAV;AACH;AACJ,OApBD;;AAqBAJ,MAAAA,yBAAyB,GAAG9C,qBAAqB,CAACuD,aAAtB,CAAoCpC,OAAO,CAACO,OAA5C,EAAqDsB,gBAArD,CAA5B;AACAA,MAAAA,gBAAgB;AACnB;;AACD,WAAO,YAAY;AACflD,MAAAA,OAAO,CAAC0D,WAAR,CAAoBd,IAApB;AACH,KAFD;AAGH,GA3CD,EA2CG,EA3CH;AA4CA,MAAIe,UAAU,GAAGvE,OAAO,CAACwE,WAAR,CAAoB,UAAUC,GAAV,EAAeC,SAAf,EAA0B;AAC3D3C,IAAAA,OAAO,CAACS,OAAR,CAAgBmC,wBAAhB,CAAyCF,GAAzC,EAA8CC,SAA9C;AACH,GAFgB,EAEd,EAFc,CAAjB;AAGA,SAAQ1E,OAAO,CAAC4E,OAAR,CAAgBC,aAAhB,CAA8B,KAA9B,EAAqC;AAAEC,IAAAA,SAAS,EAAE5C,YAAb;AAA2B3B,IAAAA,GAAG,EAAE0B;AAAhC,GAArC,EAAgFP,iBAAiB,IACrG1B,OAAO,CAAC4E,OAAR,CAAgBC,aAAhB,CAA8BzE,iBAAiB,CAAC2E,eAAhD,EAAiErG,QAAQ,CAAC;AAAEoG,IAAAA,SAAS,EAAEzC;AAAb,GAAD,EAA+BX,iBAA/B,EAAkD;AAAE6B,IAAAA,OAAO,EAAE1B,aAAX;AAA0B0C,IAAAA,UAAU,EAAEA;AAAtC,GAAlD,CAAzE,CADI,CAAR;AAEH,CArED;;AAsEAzE,OAAO,CAAC8E,OAAR,GAAkB5E,OAAO,CAACgF,UAAR,CAAmB3E,kBAAnB,CAAlB","sourcesContent":["// ag-grid-react v26.1.0\n\"use strict\";\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar react_1 = __importStar(require(\"react\"));\nvar utils_1 = require(\"../utils\");\nvar beansContext_1 = require(\"../beansContext\");\nvar agGridReactFire_1 = require(\"../agGridReactFire\");\nvar DetailCellRenderer = function (props, ref) {\n    var _a = react_1.useContext(beansContext_1.BeansContext), ctrlsFactory = _a.ctrlsFactory, context = _a.context, gridOptionsWrapper = _a.gridOptionsWrapper, resizeObserverService = _a.resizeObserverService, clientSideRowModel = _a.clientSideRowModel, serverSideRowModel = _a.serverSideRowModel;\n    var _b = react_1.useState(new utils_1.CssClasses()), cssClasses = _b[0], setCssClasses = _b[1];\n    var _c = react_1.useState(new utils_1.CssClasses()), gridCssClasses = _c[0], setGridCssClasses = _c[1];\n    var _d = react_1.useState(), detailGridOptions = _d[0], setDetailGridOptions = _d[1];\n    var _e = react_1.useState(), detailRowData = _e[0], setDetailRowData = _e[1];\n    var ctrlRef = react_1.useRef();\n    var eGuiRef = react_1.useRef(null);\n    var topClassName = react_1.useMemo(function () { return cssClasses.toString() + ' ag-details-row'; }, [cssClasses]);\n    var gridClassName = react_1.useMemo(function () { return gridCssClasses.toString() + ' ag-details-grid'; }, [gridCssClasses]);\n    if (ref) {\n        react_1.useImperativeHandle(ref, function () { return ({\n            refresh: function () { return ctrlRef.current.refresh(); }\n        }); });\n    }\n    react_1.useEffect(function () {\n        if (props.template) {\n            console.warn('AG Grid: detailCellRendererParams.template is not supported by React UI - this only works with frameworks that work against String templates. To change the template, please provide your own React Detail Cell Renderer.');\n        }\n    }, []);\n    react_1.useEffect(function () {\n        var compProxy = {\n            addOrRemoveCssClass: function (name, on) { return setCssClasses(function (prev) { return prev.setClass(name, on); }); },\n            addOrRemoveDetailGridCssClass: function (name, on) { return setGridCssClasses(function (prev) { return prev.setClass(name, on); }); },\n            setDetailGrid: function (gridOptions) { return setDetailGridOptions(gridOptions); },\n            setRowData: function (rowData) { return setDetailRowData(rowData); }\n        };\n        var ctrl = ctrlsFactory.getInstance('detailCellRenderer');\n        if (!ctrl) {\n            return;\n        } // should never happen, means master/detail module not loaded\n        context.createBean(ctrl);\n        ctrl.init(compProxy, props);\n        ctrlRef.current = ctrl;\n        var resizeObserverDestroyFunc;\n        if (gridOptionsWrapper.isDetailRowAutoHeight()) {\n            var checkRowSizeFunc = function () {\n                var clientHeight = eGuiRef.current.clientHeight;\n                // if the UI is not ready, the height can be 0, which we ignore, as otherwise a flicker will occur\n                // as UI goes from the default height, to 0, then to the real height as UI becomes ready. this means\n                // it's not possible for have 0 as auto-height, however this is an improbable use case, as even an\n                // empty detail grid would still have some styling around it giving at least a few pixels.\n                if (clientHeight != null && clientHeight > 0) {\n                    // we do the update in a timeout, to make sure we are not calling from inside the grid\n                    // doing another update\n                    var updateRowHeightFunc = function () {\n                        props.node.setRowHeight(clientHeight);\n                        if (clientSideRowModel) {\n                            clientSideRowModel.onRowHeightChanged();\n                        }\n                        else if (serverSideRowModel) {\n                            serverSideRowModel.onRowHeightChanged();\n                        }\n                    };\n                    setTimeout(updateRowHeightFunc, 0);\n                }\n            };\n            resizeObserverDestroyFunc = resizeObserverService.observeResize(eGuiRef.current, checkRowSizeFunc);\n            checkRowSizeFunc();\n        }\n        return function () {\n            context.destroyBean(ctrl);\n        };\n    }, []);\n    var setGridApi = react_1.useCallback(function (api, columnApi) {\n        ctrlRef.current.registerDetailWithMaster(api, columnApi);\n    }, []);\n    return (react_1.default.createElement(\"div\", { className: topClassName, ref: eGuiRef }, detailGridOptions &&\n        react_1.default.createElement(agGridReactFire_1.AgGridReactFire, __assign({ className: gridClassName }, detailGridOptions, { rowData: detailRowData, setGridApi: setGridApi }))));\n};\nexports.default = react_1.forwardRef(DetailCellRenderer);\n"]},"metadata":{},"sourceType":"script"}