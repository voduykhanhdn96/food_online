{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/components/Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Divider, Header, Label, List, Icon } from \"semantic-ui-react\";\nimport CartItemGroup from \"./CartItemGroup\";\nimport { formatCurrency } from \"./../helpers/number-helper\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport CheckOutModal from \"../pages/Checkout/CheckOutModal\";\nimport { useRef } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cart = ({\n  cart,\n  removeItem,\n  isChange\n}) => {\n  _s();\n\n  const modalRef = useRef(null);\n  const dispatch = useDispatch();\n  const userAuth = useSelector(state => state.auth);\n  const groups = useSelector(state => state.shop.groups);\n  const {\n    cartId,\n    itemsInCart,\n    totalPrice,\n    customerId\n  } = cart;\n\n  const checkout = () => {\n    modalRef.current.open();\n  };\n\n  useEffect(() => {\n    dispatch({\n      type: \"SETTING_GROUP\",\n      payload: {\n        itemsInCart: itemsInCart\n      }\n    });\n  }, [dispatch, itemsInCart]);\n\n  const share = () => {\n    navigator.clipboard.writeText(\"http://localhost:3000/cart/\" + cartId);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        size: \"large\",\n        onClick: share,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"share alternate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), `/cart/` + cartId]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      children: [\"Cart \", cartId, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      divided: true,\n      selection: true,\n      children: /*#__PURE__*/_jsxDEV(List.Item, {\n        className: \"total\",\n        children: [\"Total\", /*#__PURE__*/_jsxDEV(Label, {\n          horizontal: true,\n          style: {\n            float: \"right\"\n          },\n          children: formatCurrency(totalPrice || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      basic: true,\n      content: \"Submit\",\n      labelPosition: \"left\",\n      icon: \"thumbs up outline\",\n      color: \"green\",\n      onClick: checkout,\n      disabled: customerId !== userAuth.customerId || itemsInCart.length === 0,\n      style: {\n        marginTop: 15,\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), groups && groups.map(group => /*#__PURE__*/_jsxDEV(CartItemGroup, {\n      isChange: isChange,\n      removeItem: removeItem,\n      cartId: cartId,\n      group: group,\n      permission: group.userId === userAuth.customerId\n    }, group.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(CheckOutModal, {\n      cartId: cartId,\n      ref: modalRef,\n      groups: groups,\n      totalPrice: totalPrice\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Cart, \"wTM2ot1EPSax7M9Db/gUbpmS91Q=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/components/Cart.jsx"],"names":["Button","Divider","Header","Label","List","Icon","CartItemGroup","formatCurrency","useDispatch","useSelector","useEffect","CheckOutModal","useRef","Cart","cart","removeItem","isChange","modalRef","dispatch","userAuth","state","auth","groups","shop","cartId","itemsInCart","totalPrice","customerId","checkout","current","open","type","payload","share","navigator","clipboard","writeText","float","length","marginTop","width","map","group","userId","id"],"mappings":"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","sourcesContent":["import { Button, Divider, Header, Label, List, Icon } from \"semantic-ui-react\"\nimport CartItemGroup from \"./CartItemGroup\"\nimport { formatCurrency } from \"./../helpers/number-helper\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect } from \"react\"\nimport CheckOutModal from \"../pages/Checkout/CheckOutModal\"\nimport { useRef } from \"react\"\n\nconst Cart = ({ cart, removeItem, isChange }) => {\n  const modalRef = useRef(null)\n\n  const dispatch = useDispatch()\n  const userAuth = useSelector(state => state.auth)\n  const groups = useSelector(state => state.shop.groups)\n\n  const { cartId, itemsInCart, totalPrice, customerId } = cart\n\n  const checkout = () => {\n    modalRef.current.open()\n  }\n\n  useEffect(() => {\n    dispatch({ type: \"SETTING_GROUP\", payload: { itemsInCart: itemsInCart } })\n  }, [dispatch, itemsInCart])\n\n  const share = () => {\n    navigator.clipboard.writeText(\"http://localhost:3000/cart/\" + cartId)\n  }\n  return (\n    <>\n      <div className=\"info-field\">\n        <h5>Share</h5>\n        <Label size={\"large\"} onClick={share}>\n          <Icon name=\"share alternate\" />\n          {`/cart/` + cartId}\n        </Label>\n      </div>\n      <Header>Cart {cartId} </Header>\n      <List divided selection>\n        <List.Item className=\"total\">\n          Total\n          <Label horizontal style={{ float: \"right\" }}>\n            {formatCurrency(totalPrice || 0)}\n          </Label>\n        </List.Item>\n      </List>\n      <Button\n        basic\n        content=\"Submit\"\n        labelPosition=\"left\"\n        icon=\"thumbs up outline\"\n        color=\"green\"\n        onClick={checkout}\n        disabled={\n          customerId !== userAuth.customerId || itemsInCart.length === 0\n        }\n        style={{ marginTop: 15, width: \"100%\" }}\n      />\n      <Divider></Divider>\n      {groups &&\n        groups.map(group => (\n          <CartItemGroup\n            isChange={isChange}\n            removeItem={removeItem}\n            cartId={cartId}\n            key={group.id}\n            group={group}\n            permission={group.userId === userAuth.customerId}\n          ></CartItemGroup>\n        ))}\n\n      <CheckOutModal\n        cartId={cartId}\n        ref={modalRef}\n        groups={groups}\n        totalPrice={totalPrice}\n      ></CheckOutModal>\n    </>\n  )\n}\n\nexport default Cart\n"]},"metadata":{},"sourceType":"module"}