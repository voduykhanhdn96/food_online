{"ast":null,"code":"const BACKEND_DOMAIN = \"http://localhost:8080/api\";\nexport async function getCartData(cartId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/` + cartId + `?getShop=true`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  return data;\n}\nexport async function existCartCustomerWithShop(customerId, shopId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/exist/shop/customer`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      customerId: customerId,\n      shopId: shopId\n    })\n  });\n  console.log(!response.ok);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  return data;\n}\nexport async function createCart(customerId, shopId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/Create`, {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      customerId: customerId,\n      shopId: shopId\n    })\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Delete shop is fail\");\n  }\n\n  return data;\n} // submitCart = () => {\n//   fetch(\"https://localhost:5001/api/Cart/Submit\", {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify({\n//       items: [\n//         {\n//           amount: 2,\n//           itemId: this.state.itemId,\n//           isDeleted: false,\n//         },\n//       ],\n//       customerId: this.state.customerId,\n//       cartId: this.state.cartId,\n//     }),\n//   })\n//     .then(response => {\n//       return response.json()\n//     })\n//     .then(data => console.log(data))\n//     .catch(err => console.log(err))\n// }\n// unsubmitCart = () => {\n//   fetch(\"https://localhost:5001/api/Cart/Unsubmit\", {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify({\n//       customerId: this.state.customerId,\n//       cartId: this.state.cartId,\n//     }),\n//   })\n//     .then(response => {\n//       return response.json()\n//     })\n//     .then(data => console.log(data))\n//     .catch(err => console.log(err))\n// }","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/lib/api_cart.js"],"names":["BACKEND_DOMAIN","getCartData","cartId","response","fetch","data","json","ok","Error","message","existCartCustomerWithShop","customerId","shopId","method","headers","body","JSON","stringify","console","log","createCart"],"mappings":"AAAA,MAAMA,cAAc,GAAG,2BAAvB;AAEA,OAAO,eAAeC,WAAf,CAA2BC,MAA3B,EAAmC;AACxC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAEJ,cAAe,QAAlB,GAA4BE,MAA5B,GAAsC,eADZ,CAA5B;AAIA,QAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,MAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,yBAA1B,CAAN;AACD;;AAED,SAAOJ,IAAP;AACD;AAED,OAAO,eAAeK,yBAAf,CAAyCC,UAAzC,EAAqDC,MAArD,EAA6D;AAClE,QAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,cAAe,2BAAnB,EAA+C;AACzEa,IAAAA,MAAM,EAAE,MADiE;AAEzEC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFgE;AAGzEC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,MAAAA,UAAU,EAAEA,UADO;AAEnBC,MAAAA,MAAM,EAAEA;AAFW,KAAf;AAHmE,GAA/C,CAA5B;AAQAM,EAAAA,OAAO,CAACC,GAAR,CAAY,CAAChB,QAAQ,CAACI,EAAtB;AACA,QAAMF,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,MAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,yBAA1B,CAAN;AACD;;AAED,SAAOJ,IAAP;AACD;AAED,OAAO,eAAee,UAAf,CAA0BT,UAA1B,EAAsCC,MAAtC,EAA8C;AACnD,QAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,cAAe,cAAnB,EAAkC;AAC5Da,IAAAA,MAAM,EAAE,MADoD;AAE5DC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFmD;AAG5DC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACnBN,MAAAA,UAAU,EAAEA,UADO;AAEnBC,MAAAA,MAAM,EAAEA;AAFW,KAAf;AAHsD,GAAlC,CAA5B;AASA,QAAMP,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,MAAI,CAACH,QAAQ,CAACI,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,qBAA1B,CAAN;AACD;;AAED,SAAOJ,IAAP;AACD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["const BACKEND_DOMAIN = \"http://localhost:8080/api\"\n\nexport async function getCartData(cartId) {\n  const response = await fetch(\n    `${BACKEND_DOMAIN}/Cart/` + cartId + `?getShop=true`\n  )\n\n  const data = await response.json()\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\")\n  }\n\n  return data\n}\n\nexport async function existCartCustomerWithShop(customerId, shopId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/exist/shop/customer`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      customerId: customerId,\n      shopId: shopId,\n    }),\n  })\n  console.log(!response.ok)\n  const data = await response.json()\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\")\n  }\n\n  return data\n}\n\nexport async function createCart(customerId, shopId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Cart/Create`, {\n    method: \"POST\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      customerId: customerId,\n      shopId: shopId,\n    }),\n  })\n\n  const data = await response.json()\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Delete shop is fail\")\n  }\n\n  return data\n}\n\n// submitCart = () => {\n//   fetch(\"https://localhost:5001/api/Cart/Submit\", {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify({\n//       items: [\n//         {\n//           amount: 2,\n//           itemId: this.state.itemId,\n//           isDeleted: false,\n//         },\n//       ],\n//       customerId: this.state.customerId,\n//       cartId: this.state.cartId,\n//     }),\n//   })\n//     .then(response => {\n//       return response.json()\n//     })\n//     .then(data => console.log(data))\n//     .catch(err => console.log(err))\n// }\n\n// unsubmitCart = () => {\n//   fetch(\"https://localhost:5001/api/Cart/Unsubmit\", {\n//     method: \"POST\",\n//     headers: { \"Content-Type\": \"application/json\" },\n//     body: JSON.stringify({\n//       customerId: this.state.customerId,\n//       cartId: this.state.cartId,\n//     }),\n//   })\n//     .then(response => {\n//       return response.json()\n//     })\n//     .then(data => console.log(data))\n//     .catch(err => console.log(err))\n// }\n"]},"metadata":{},"sourceType":"module"}