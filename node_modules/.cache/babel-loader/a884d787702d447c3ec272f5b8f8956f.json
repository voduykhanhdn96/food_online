{"ast":null,"code":"// Initial state of shop\nconst initialStateShop = {\n  cart: [],\n  groups: [],\n  order: []\n};\n\nconst shopReducer = (state = initialStateShop, {\n  type,\n  payload\n}) => {\n  switch (type) {\n    case \"INITIAL_CART\":\n      return {\n        cart: payload.cart\n      };\n\n    case \"INITIAL_ORDER\":\n      return { ...state,\n        order: payload.order\n      };\n\n    case \"SETTING_GROUP\":\n      const itemsInCart = payload.itemsInCart;\n      let userId = null;\n      let groupTemp = [];\n\n      for (const key in itemsInCart) {// if (userId === itemsInCart[key].customerId) {\n        //   const index = groupTemp.findIndex(\n        //     group => group.userId === itemsInCart[key].customerId\n        //   )\n        //   groupTemp[index] = {\n        //     ...groupTemp[index],\n        //     items: groupTemp[index].items.concat(itemsInCart[key]),\n        //   }\n        // } else {\n        //   groupTemp.push({\n        //     id: +key,\n        //     userId: itemsInCart[key].customerId,\n        //     userName: itemsInCart[key].customerName,\n        //     items: [itemsInCart[key]],\n        //   })\n        //   userId = itemsInCart[key].customerId\n        // }\n      }\n\n      return { ...state,\n        groups: groupTemp\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default shopReducer;","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/food_online/src/app/store/reducers/shop-reducer.js"],"names":["initialStateShop","cart","groups","order","shopReducer","state","type","payload","itemsInCart","userId","groupTemp","key"],"mappings":"AAAA;AACA,MAAMA,gBAAgB,GAAG;AACvBC,EAAAA,IAAI,EAAE,EADiB;AAEvBC,EAAAA,MAAM,EAAE,EAFe;AAGvBC,EAAAA,KAAK,EAAE;AAHgB,CAAzB;;AAMA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,gBAAT,EAA2B;AAAEM,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA3B,KAAiD;AACnE,UAAQD,IAAR;AACE,SAAK,cAAL;AACE,aAAO;AAAEL,QAAAA,IAAI,EAAEM,OAAO,CAACN;AAAhB,OAAP;;AACF,SAAK,eAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELF,QAAAA,KAAK,EAAEI,OAAO,CAACJ;AAFV,OAAP;;AAIF,SAAK,eAAL;AACE,YAAMK,WAAW,GAAGD,OAAO,CAACC,WAA5B;AACA,UAAIC,MAAM,GAAG,IAAb;AACA,UAAIC,SAAS,GAAG,EAAhB;;AACA,WAAK,MAAMC,GAAX,IAAkBH,WAAlB,EAA+B,CAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;;AAED,aAAO,EACL,GAAGH,KADE;AAELH,QAAAA,MAAM,EAAEQ;AAFH,OAAP;;AAIF;AACE,aAAOL,KAAP;AArCJ;AAuCD,CAxCD;;AA0CA,eAAeD,WAAf","sourcesContent":["// Initial state of shop\nconst initialStateShop = {\n  cart: [],\n  groups: [],\n  order: [],\n}\n\nconst shopReducer = (state = initialStateShop, { type, payload }) => {\n  switch (type) {\n    case \"INITIAL_CART\":\n      return { cart: payload.cart }\n    case \"INITIAL_ORDER\":\n      return {\n        ...state,\n        order: payload.order,\n      }\n    case \"SETTING_GROUP\":\n      const itemsInCart = payload.itemsInCart\n      let userId = null\n      let groupTemp = []\n      for (const key in itemsInCart) {\n        // if (userId === itemsInCart[key].customerId) {\n        //   const index = groupTemp.findIndex(\n        //     group => group.userId === itemsInCart[key].customerId\n        //   )\n        //   groupTemp[index] = {\n        //     ...groupTemp[index],\n        //     items: groupTemp[index].items.concat(itemsInCart[key]),\n        //   }\n        // } else {\n        //   groupTemp.push({\n        //     id: +key,\n        //     userId: itemsInCart[key].customerId,\n        //     userName: itemsInCart[key].customerName,\n        //     items: [itemsInCart[key]],\n        //   })\n        //   userId = itemsInCart[key].customerId\n        // }\n      }\n\n      return {\n        ...state,\n        groups: groupTemp,\n      }\n    default:\n      return state\n  }\n}\n\nexport default shopReducer\n"]},"metadata":{},"sourceType":"module"}