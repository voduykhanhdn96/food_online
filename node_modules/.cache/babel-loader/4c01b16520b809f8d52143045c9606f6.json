{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/components/Cart.jsx\",\n    _s = $RefreshSig$();\n\nimport { Button, Divider, Header, Label, List } from \"semantic-ui-react\";\nimport CartItemGroup from \"./CartItemGroup\";\nimport { formatCurrency } from \"./../helpers/number-helper\";\nimport { useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Cart = ({\n  cart\n}) => {\n  _s();\n\n  const [groups, setGroups] = useState([]);\n  const userAuth = useSelector(state => state.auth);\n  const {\n    cartId,\n    itemsInCart,\n    totalPrice,\n    customerId\n  } = cart;\n  useEffect(() => {\n    let groupTemp = [];\n    let itemBook = {};\n\n    for (const key in itemsInCart) {\n      for (const idUser in groupTemp) {\n        console.log('czxc');\n\n        if (groupTemp[idUser].userId === itemsInCart[key].customerId) {}\n      } // console.log(itemsInCart[key])\n      // if (userId === itemsInCart[key].customerId) {\n      //   for(const id in groupTemp) {}\n      // } else {\n      //   groupTemp.push({\n      //     userId: itemsInCart[key].customerId,\n      //     userName: itemsInCart[key].customerName,\n      //     items: [itemsInCart[key]],\n      //   })\n      //   userId = itemsInCart[key].customerId\n      // }\n\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [\"Cart \", cartId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      divided: true,\n      selection: true,\n      children: /*#__PURE__*/_jsxDEV(List.Item, {\n        className: \"total\",\n        children: [\"Total\", /*#__PURE__*/_jsxDEV(Label, {\n          horizontal: true,\n          style: {\n            float: \"right\"\n          },\n          children: formatCurrency(totalPrice || 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      basic: true,\n      content: \"Submit\",\n      labelPosition: \"left\",\n      icon: \"thumbs up outline\",\n      color: \"green\",\n      disabled: customerId !== userAuth.customerId && itemsInCart.length === 0,\n      style: {\n        marginTop: 15,\n        width: \"100%\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), groups && groups.map(group => /*#__PURE__*/_jsxDEV(CartItemGroup, {\n      group: group\n    }, group.itemId, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n};\n\n_s(Cart, \"ULp1UVj72A/1scAEDLLZD4gdEzU=\", false, function () {\n  return [useSelector];\n});\n\n_c = Cart;\nexport default Cart;\n\nvar _c;\n\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/components/Cart.jsx"],"names":["Button","Divider","Header","Label","List","CartItemGroup","formatCurrency","useSelector","useEffect","useState","Cart","cart","groups","setGroups","userAuth","state","auth","cartId","itemsInCart","totalPrice","customerId","groupTemp","itemBook","key","idUser","console","log","userId","float","length","marginTop","width","map","group","itemId"],"mappings":";;;AAAA,SAASA,MAAT,EAAiBC,OAAjB,EAA0BC,MAA1B,EAAkCC,KAAlC,EAAyCC,IAAzC,QAAqD,mBAArD;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,SAASC,cAAT,QAA+B,4BAA/B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAAA;;AACzB,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAAC,EAAD,CAApC;AACA,QAAMK,QAAQ,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACC,IAAhB,CAA5B;AACA,QAAM;AAAEC,IAAAA,MAAF;AAAUC,IAAAA,WAAV;AAAuBC,IAAAA,UAAvB;AAAmCC,IAAAA;AAAnC,MAAkDT,IAAxD;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,SAAS,GAAG,EAAhB;AACA,QAAIC,QAAQ,GAAG,EAAf;;AACA,SAAK,MAAMC,GAAX,IAAkBL,WAAlB,EAA+B;AAC7B,WAAK,MAAMM,MAAX,IAAqBH,SAArB,EAAgC;AAC9BI,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;;AACA,YAAIL,SAAS,CAACG,MAAD,CAAT,CAAkBG,MAAlB,KAA6BT,WAAW,CAACK,GAAD,CAAX,CAAiBH,UAAlD,EAA8D,CAE7D;AACF,OAN4B,CAO7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACD;AACF,GAtBQ,CAAT;AAwBA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,0BAAcH,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAGE,QAAC,IAAD;AAAM,MAAA,OAAO,MAAb;AAAc,MAAA,SAAS,MAAvB;AAAA,6BACE,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,SAAS,EAAC,OAArB;AAAA,yCAEE,QAAC,KAAD;AAAO,UAAA,UAAU,MAAjB;AAAkB,UAAA,KAAK,EAAE;AAAEW,YAAAA,KAAK,EAAE;AAAT,WAAzB;AAAA,oBACGtB,cAAc,CAACa,UAAU,IAAI,CAAf;AADjB;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAWE,QAAC,MAAD;AACE,MAAA,KAAK,MADP;AAEE,MAAA,OAAO,EAAC,QAFV;AAGE,MAAA,aAAa,EAAC,MAHhB;AAIE,MAAA,IAAI,EAAC,mBAJP;AAKE,MAAA,KAAK,EAAC,OALR;AAME,MAAA,QAAQ,EACNC,UAAU,KAAKN,QAAQ,CAACM,UAAxB,IAAsCF,WAAW,CAACW,MAAZ,KAAuB,CAPjE;AASE,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE,EAAb;AAAiBC,QAAAA,KAAK,EAAE;AAAxB;AATT;AAAA;AAAA;AAAA;AAAA,YAXF,eAsBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAtBF,EAuBGnB,MAAM,IACLA,MAAM,CAACoB,GAAP,CAAWC,KAAK,iBACd,QAAC,aAAD;AAAkC,MAAA,KAAK,EAAEA;AAAzC,OAAoBA,KAAK,CAACC,MAA1B;AAAA;AAAA;AAAA;AAAA,YADF,CAxBJ;AAAA,kBADF;AA8BD,CA3DD;;GAAMxB,I;UAEaH,W;;;KAFbG,I;AA6DN,eAAeA,IAAf","sourcesContent":["import { Button, Divider, Header, Label, List } from \"semantic-ui-react\"\nimport CartItemGroup from \"./CartItemGroup\"\nimport { formatCurrency } from \"./../helpers/number-helper\"\nimport { useSelector } from \"react-redux\"\nimport { useEffect } from \"react\"\nimport { useState } from \"react\"\n\nconst Cart = ({ cart }) => {\n  const [groups, setGroups] = useState([])\n  const userAuth = useSelector(state => state.auth)\n  const { cartId, itemsInCart, totalPrice, customerId } = cart\n\n  useEffect(() => {\n    let groupTemp = []\n    let itemBook = {}\n    for (const key in itemsInCart) {\n      for (const idUser in groupTemp) {\n        console.log('czxc');\n        if (groupTemp[idUser].userId === itemsInCart[key].customerId) {\n\n        }\n      }\n      // console.log(itemsInCart[key])\n      // if (userId === itemsInCart[key].customerId) {\n      //   for(const id in groupTemp) {}\n      // } else {\n      //   groupTemp.push({\n      //     userId: itemsInCart[key].customerId,\n      //     userName: itemsInCart[key].customerName,\n      //     items: [itemsInCart[key]],\n      //   })\n      //   userId = itemsInCart[key].customerId\n      // }\n    }\n  })\n\n  return (\n    <>\n      <Header>Cart {cartId}</Header>\n\n      <List divided selection>\n        <List.Item className=\"total\">\n          Total\n          <Label horizontal style={{ float: \"right\" }}>\n            {formatCurrency(totalPrice || 0)}\n          </Label>\n        </List.Item>\n      </List>\n      <Button\n        basic\n        content=\"Submit\"\n        labelPosition=\"left\"\n        icon=\"thumbs up outline\"\n        color=\"green\"\n        disabled={\n          customerId !== userAuth.customerId && itemsInCart.length === 0\n        }\n        style={{ marginTop: 15, width: \"100%\" }}\n      />\n      <Divider></Divider>\n      {groups &&\n        groups.map(group => (\n          <CartItemGroup key={group.itemId} group={group}></CartItemGroup>\n        ))}\n    </>\n  )\n}\n\nexport default Cart\n"]},"metadata":{},"sourceType":"module"}