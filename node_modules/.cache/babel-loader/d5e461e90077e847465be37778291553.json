{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/food_online/src/app/pages/Store.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport MenuItemList from \"./../components/MenuItemList\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport Cart from \"../components/Cart\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkExistCartCustomerWithShop, addItemToCart, removeItemFromCart, initialCartData } from \"../store/actions/shop-action\";\nimport { useState } from \"react\";\nimport useToast from \"../hooks/useToast\";\nimport { useLocation } from \"react-router-dom\";\nimport Load from \"../components/Loader\";\nimport { LogLevel, HubConnectionBuilder } from \"@microsoft/signalr\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Store = () => {\n  _s();\n\n  const param = useParams();\n  const [isClick, setIsClick] = useState(false);\n  const [isInit, setIsInit] = useState(true);\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const auth = useSelector(state => state.auth);\n  const shop = useSelector(state => state.shop.cart);\n  const notification = useSelector(state => state.notification);\n\n  const addToCart = id => {\n    setIsClick(true);\n    dispatch(addItemToCart(auth.customerId, id, shop.cartId));\n  };\n\n  const startCons = useCallback(async () => {\n    const connection = new HubConnectionBuilder().withUrl(\"http://localhost:8080/hubs/cart?cart=\" + shop.cartId, {\n      withCredentials: false\n    }).configureLogging(LogLevel.Information).build();\n\n    try {\n      await connection.start();\n    } catch (e) {\n      console.log(e);\n    }\n\n    connection.on(\"AddItemToCart\", message => {\n      dispatch(initialCartData(message.cartId));\n    });\n    connection.on(\"RemoveItemFromCart\", message => {\n      dispatch(initialCartData(message.cartId));\n    });\n    connection.on(\"SubmitItems\", message => {\n      dispatch(initialCartData(message.cartId));\n    });\n    connection.on(\"UnSubmitItems\", message => {\n      dispatch(initialCartData(message.cartId));\n    });\n    connection.on(\"NewOrder\", message => {\n      history.push(\"/order/\" + message.orderId);\n    });\n  }, [dispatch, shop.cartId]);\n\n  const removeItem = id => {\n    setIsClick(true);\n    dispatch(removeItemFromCart(auth.customerId, id, shop.cartId));\n  };\n\n  const isChange = () => {\n    setIsClick(true);\n  };\n\n  useEffect(() => {\n    startCons();\n  }, [startCons]);\n  useEffect(() => {\n    if (isClick) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Food is added or removed into cart\");\n        setIsClick(false);\n      }\n\n      if (notification.status === \"completed\" && notification.error) {\n        toastError(notification.error);\n        setIsClick(false);\n      }\n    }\n  }, [notification, isClick, toastSuccess, toastError]);\n  useEffect(() => {\n    if (isInit) {\n      if (location.pathname.includes(\"store\")) {\n        dispatch(checkExistCartCustomerWithShop(auth.customerId, param.shopId));\n      }\n\n      if (location.pathname.includes(\"cart\")) {\n        dispatch(initialCartData(param.cartId));\n      }\n\n      setIsInit(false);\n    }\n  }, [dispatch, auth.customerId, param, location, isInit]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notification.status === \"pending\" && /*#__PURE__*/_jsxDEV(Load, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 45\n    }, this), (!isInit || isClick || notification.status !== \"pending\") && shop.shop && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        size: \"medium\",\n        children: [\"Shop \", shop.shop.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 10,\n          children: [shop.shop.items && /*#__PURE__*/_jsxDEV(MenuItemList, {\n            items: shop.shop.items.filter(item => item.isActive !== false),\n            addToCart: addToCart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), shop.shop.items.length === 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Don't have any items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 6,\n          children: /*#__PURE__*/_jsxDEV(Cart, {\n            cart: shop,\n            removeItem: removeItem,\n            isChange: isChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(Store, \"h5slWnZZhRPy/BOayUDEQyDBKWY=\", false, function () {\n  return [useParams, useToast, useLocation, useDispatch, useHistory, useSelector, useSelector, useSelector];\n});\n\n_c = Store;\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/food_online/src/app/pages/Store.jsx"],"names":["useParams","MenuItemList","Grid","Header","Cart","useEffect","useDispatch","useSelector","checkExistCartCustomerWithShop","addItemToCart","removeItemFromCart","initialCartData","useState","useToast","useLocation","Load","LogLevel","HubConnectionBuilder","useCallback","useHistory","Store","param","isClick","setIsClick","isInit","setIsInit","toastSuccess","toastError","location","dispatch","history","auth","state","shop","cart","notification","addToCart","id","customerId","cartId","startCons","connection","withUrl","withCredentials","configureLogging","Information","build","start","e","console","log","on","message","push","orderId","removeItem","isChange","status","error","pathname","includes","shopId","name","items","filter","item","isActive","length"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router\";\nimport MenuItemList from \"./../components/MenuItemList\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport Cart from \"../components/Cart\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  checkExistCartCustomerWithShop,\n  addItemToCart,\n  removeItemFromCart,\n  initialCartData,\n} from \"../store/actions/shop-action\";\nimport { useState } from \"react\";\nimport useToast from \"../hooks/useToast\";\nimport { useLocation } from \"react-router-dom\";\nimport Load from \"../components/Loader\";\nimport { LogLevel, HubConnectionBuilder } from \"@microsoft/signalr\";\nimport { useCallback } from \"react\";\nimport { useHistory } from \"react-router\";\n\nconst Store = () => {\n  const param = useParams();\n  const [isClick, setIsClick] = useState(false);\n  const [isInit, setIsInit] = useState(true);\n  const { toastSuccess, toastError } = useToast();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const history = useHistory();\n\n  const auth = useSelector((state) => state.auth);\n  const shop = useSelector((state) => state.shop.cart);\n  const notification = useSelector((state) => state.notification);\n\n  const addToCart = (id) => {\n    setIsClick(true);\n    dispatch(addItemToCart(auth.customerId, id, shop.cartId));\n  };\n\n  const startCons = useCallback(async () => {\n    const connection = new HubConnectionBuilder()\n      .withUrl(\"http://localhost:8080/hubs/cart?cart=\" + shop.cartId, {\n        withCredentials: false,\n      })\n      .configureLogging(LogLevel.Information)\n      .build();\n\n    try {\n      await connection.start();\n    } catch (e) {\n      console.log(e);\n    }\n\n    connection.on(\"AddItemToCart\", (message) => {\n      dispatch(initialCartData(message.cartId));\n    });\n    connection.on(\"RemoveItemFromCart\", (message) => {\n      dispatch(initialCartData(message.cartId));\n    });\n    connection.on(\"SubmitItems\", (message) => {\n      dispatch(initialCartData(message.cartId));\n    });\n    connection.on(\"UnSubmitItems\", (message) => {\n      dispatch(initialCartData(message.cartId));\n    });\n    connection.on(\"NewOrder\", (message) => {\n      history.push(\"/order/\" + message.orderId);\n    });\n  }, [dispatch, shop.cartId]);\n\n  const removeItem = (id) => {\n    setIsClick(true);\n    dispatch(removeItemFromCart(auth.customerId, id, shop.cartId));\n  };\n\n  const isChange = () => {\n    setIsClick(true);\n  };\n\n  useEffect(() => {\n    startCons();\n  }, [startCons]);\n\n  useEffect(() => {\n    if (isClick) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Food is added or removed into cart\");\n        setIsClick(false);\n      }\n      if (notification.status === \"completed\" && notification.error) {\n        toastError(notification.error);\n        setIsClick(false);\n      }\n    }\n  }, [notification, isClick, toastSuccess, toastError]);\n\n  useEffect(() => {\n    if (isInit) {\n      if (location.pathname.includes(\"store\")) {\n        dispatch(checkExistCartCustomerWithShop(auth.customerId, param.shopId));\n      }\n      if (location.pathname.includes(\"cart\")) {\n        dispatch(initialCartData(param.cartId));\n      }\n      setIsInit(false);\n    }\n  }, [dispatch, auth.customerId, param, location, isInit]);\n\n  return (\n    <>\n      {notification.status === \"pending\" && <Load />}\n      {(!isInit || isClick || notification.status !== \"pending\") && shop.shop && (\n        <>\n          <Header size=\"medium\">Shop {shop.shop.name}</Header>\n          <Grid>\n            <Grid.Column width={10}>\n              {shop.shop.items && (\n                <MenuItemList\n                  items={shop.shop.items.filter(\n                    (item) => item.isActive !== false\n                  )}\n                  addToCart={addToCart}\n                ></MenuItemList>\n              )}\n              {shop.shop.items.length === 0 && <h1>Don't have any items</h1>}\n            </Grid.Column>\n\n            <Grid.Column width={6}>\n              <Cart\n                cart={shop}\n                removeItem={removeItem}\n                isChange={isChange}\n              ></Cart>\n            </Grid.Column>\n          </Grid>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}