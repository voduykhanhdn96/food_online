{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst uuseToast = (initial = {\n  position: \"top-right\",\n  autoClose: 5000,\n  hideProgressBar: false,\n  closeOnClick: true,\n  pauseOnHover: true,\n  draggable: true,\n  progress: undefined\n}) => {\n  _s();\n\n  const [options] = useState(initial);\n\n  const toastSuccess = message => {\n    toast.success(message, { ...options\n    });\n  };\n\n  const toastError = message => {\n    toast.error(message, { ...options\n    });\n  };\n\n  const toastWarning = message => {\n    toast.warn(message, { ...options\n    });\n  };\n\n  const toastDefault = message => {\n    toast(message, { ...options\n    });\n  };\n\n  const toastInfo = message => {\n    toast.info(message, { ...options\n    });\n  };\n\n  return {\n    toastSuccess,\n    toastError,\n    toastWarning,\n    toastDefault,\n    toastInfo\n  };\n};\n\n_s(uuseToast, \"kvSgQChkIqANyu/Q+Au5+fQ59S0=\");\n\nexport default uuseToast;","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/hooks/useToast.jsx"],"names":["useState","toast","uuseToast","initial","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","options","toastSuccess","message","success","toastError","error","toastWarning","warn","toastDefault","toastInfo","info"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,KAAT,QAAsB,gBAAtB;;AAEA,MAAMC,SAAS,GAAG,CAChBC,OAAO,GAAG;AACRC,EAAAA,QAAQ,EAAE,WADF;AAERC,EAAAA,SAAS,EAAE,IAFH;AAGRC,EAAAA,eAAe,EAAE,KAHT;AAIRC,EAAAA,YAAY,EAAE,IAJN;AAKRC,EAAAA,YAAY,EAAE,IALN;AAMRC,EAAAA,SAAS,EAAE,IANH;AAORC,EAAAA,QAAQ,EAAEC;AAPF,CADM,KAUb;AAAA;;AACH,QAAM,CAACC,OAAD,IAAYZ,QAAQ,CAACG,OAAD,CAA1B;;AAEA,QAAMU,YAAY,GAAGC,OAAO,IAAI;AAC9Bb,IAAAA,KAAK,CAACc,OAAN,CAAcD,OAAd,EAAuB,EAAE,GAAGF;AAAL,KAAvB;AACD,GAFD;;AAIA,QAAMI,UAAU,GAAGF,OAAO,IAAI;AAC5Bb,IAAAA,KAAK,CAACgB,KAAN,CAAYH,OAAZ,EAAqB,EAAE,GAAGF;AAAL,KAArB;AACD,GAFD;;AAIA,QAAMM,YAAY,GAAGJ,OAAO,IAAI;AAC9Bb,IAAAA,KAAK,CAACkB,IAAN,CAAWL,OAAX,EAAoB,EAAE,GAAGF;AAAL,KAApB;AACD,GAFD;;AAIA,QAAMQ,YAAY,GAAGN,OAAO,IAAI;AAC9Bb,IAAAA,KAAK,CAACa,OAAD,EAAU,EAAE,GAAGF;AAAL,KAAV,CAAL;AACD,GAFD;;AAIA,QAAMS,SAAS,GAAGP,OAAO,IAAI;AAC3Bb,IAAAA,KAAK,CAACqB,IAAN,CAAWR,OAAX,EAAoB,EAAE,GAAGF;AAAL,KAApB;AACD,GAFD;;AAIA,SAAO;AAAEC,IAAAA,YAAF;AAAgBG,IAAAA,UAAhB;AAA4BE,IAAAA,YAA5B;AAA0CE,IAAAA,YAA1C;AAAwDC,IAAAA;AAAxD,GAAP;AACD,CAlCD;;GAAMnB,S;;AAoCN,eAAeA,SAAf","sourcesContent":["import { useState } from \"react\"\nimport { toast } from \"react-toastify\"\n\nconst uuseToast = (\n  initial = {\n    position: \"top-right\",\n    autoClose: 5000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n  }\n) => {\n  const [options] = useState(initial)\n\n  const toastSuccess = message => {\n    toast.success(message, { ...options })\n  }\n\n  const toastError = message => {\n    toast.error(message, { ...options })\n  }\n\n  const toastWarning = message => {\n    toast.warn(message, { ...options })\n  }\n\n  const toastDefault = message => {\n    toast(message, { ...options })\n  }\n\n  const toastInfo = message => {\n    toast.info(message, { ...options })\n  }\n\n  return { toastSuccess, toastError, toastWarning, toastDefault, toastInfo }\n}\n\nexport default uuseToast\n"]},"metadata":{},"sourceType":"module"}