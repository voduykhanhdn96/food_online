{"ast":null,"code":"import { existCartCustomerWithShop, getCartData } from \"../../lib/api_cart\";\nimport { createCustomer } from \"../../lib/api_customer\";\nimport { getAllShop } from \"../../lib/api_shop\";\nexport const registerCustomer = data => {\n  return async dispatch => {\n    dispatch({\n      type: \"SEND\"\n    });\n\n    try {\n      await createCustomer(data);\n      dispatch({\n        type: \"SUCCESS\"\n      });\n    } catch (error) {\n      dispatch({\n        type: \"ERROR\",\n        payload: {\n          errorMessage: error.message\n        }\n      });\n    }\n\n    dispatch({\n      type: \"CLEAR_STATUS\"\n    });\n  };\n};\nexport const fetchAllShop = () => {\n  return async dispatch => {\n    dispatch({\n      type: \"SEND\"\n    });\n\n    try {\n      const response = await getAllShop();\n      return response;\n    } catch (error) {\n      dispatch({\n        type: \"ERROR\",\n        payload: {\n          errorMessage: error.message\n        }\n      });\n    }\n\n    dispatch({\n      type: \"CLEAR_STATUS\"\n    });\n  };\n};\nexport const checkExistCartCustomerWithShop = (customerId, shopId) => {\n  return async dispatch => {\n    dispatch({\n      type: \"SEND\"\n    });\n\n    try {\n      const response = await existCartCustomerWithShop(customerId, shopId);\n      return response;\n    } catch (error) {\n      dispatch({\n        type: \"ERROR\",\n        payload: {\n          errorMessage: error.message\n        }\n      });\n    }\n\n    dispatch({\n      type: \"CLEAR_STATUS\"\n    });\n  };\n};\nexport const initialCartData = cartId => {\n  return async dispatch => {\n    dispatch({\n      type: \"SEND\"\n    });\n\n    try {\n      const response = await getCartData(cartId);\n      dispatch({\n        type: \"INITIAL_CART\",\n        payload: {\n          shopDetail: response\n        }\n      });\n    } catch (error) {\n      dispatch({\n        type: \"ERROR\",\n        payload: {\n          errorMessage: error.message\n        }\n      });\n    }\n\n    dispatch({\n      type: \"CLEAR_STATUS\"\n    });\n  };\n}; // export const getShopDetail = shopId => {\n//   return async dispatch => {\n//     dispatch({ type: \"SEND\" })\n//     try {\n//       const response = await getShopById(shopId)\n//       dispatch({\n//         type: \"INITIAL_SHOP\",\n//         payload: {\n//           shopDetail: response,\n//         },\n//       })\n//       dispatch({ type: \"SUCCESS\" })\n//     } catch (error) {\n//       dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n//     }\n//     dispatch({ type: \"CLEAR_STATUS\" })\n//   }\n// }\n// export const updateInfomationShop = data => {\n//   return async dispatch => {\n//     dispatch({ type: \"SEND\" })\n//     try {\n//       await updateShop(data)\n//       dispatch({ type: \"SUCCESS\" })\n//     } catch (error) {\n//       dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n//     }\n//     dispatch({ type: \"CLEAR_STATUS\" })\n//   }\n// }\n// export const createNewItem = data => {\n//   return async dispatch => {\n//     dispatch({ type: \"SEND\" })\n//     try {\n//       await createItem(data)\n//       dispatch({ type: \"SUCCESS\" })\n//     } catch (error) {\n//       dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n//     }\n//     dispatch({ type: \"CLEAR_STATUS\" })\n//   }\n// }\n// export const updateInfomationItem = data => {\n//   return async dispatch => {\n//     dispatch({ type: \"SEND\" })\n//     try {\n//       await updateItem(data)\n//       dispatch({ type: \"SUCCESS\" })\n//     } catch (error) {\n//       dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n//     }\n//     dispatch({ type: \"CLEAR_STATUS\" })\n//   }\n// }\n// export const activeThisItem = (shopId, itemId) => {\n//   return async dispatch => {\n//     dispatch({ type: \"SEND\" })\n//     try {\n//       await activeItem(shopId, itemId)\n//       dispatch({ type: \"SUCCESS\" })\n//     } catch (error) {\n//       dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n//     }\n//     dispatch({ type: \"CLEAR_STATUS\" })\n//   }\n// }\n// export const deleteThisItem = (shopId, itemId) => {\n//   return async dispatch => {\n//     dispatch({ type: \"SEND\" })\n//     try {\n//       await deleteItem(shopId, itemId)\n//       dispatch({ type: \"SUCCESS\" })\n//     } catch (error) {\n//       dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n//     }\n//     dispatch({ type: \"CLEAR_STATUS\" })\n//   }\n// }","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/store/actions/shop-action.js"],"names":["existCartCustomerWithShop","getCartData","createCustomer","getAllShop","registerCustomer","data","dispatch","type","error","payload","errorMessage","message","fetchAllShop","response","checkExistCartCustomerWithShop","customerId","shopId","initialCartData","cartId","shopDetail"],"mappings":"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","sourcesContent":["import { existCartCustomerWithShop, getCartData } from \"../../lib/api_cart\"\nimport { createCustomer } from \"../../lib/api_customer\"\nimport { getAllShop } from \"../../lib/api_shop\"\n\nexport const registerCustomer = data => {\n  return async dispatch => {\n    dispatch({ type: \"SEND\" })\n    try {\n      await createCustomer(data)\n      dispatch({ type: \"SUCCESS\" })\n    } catch (error) {\n      dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n    }\n    dispatch({ type: \"CLEAR_STATUS\" })\n  }\n}\n\nexport const fetchAllShop = () => {\n  return async dispatch => {\n    dispatch({ type: \"SEND\" })\n    try {\n      const response = await getAllShop()\n      return response\n    } catch (error) {\n      dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n    }\n    dispatch({ type: \"CLEAR_STATUS\" })\n  }\n}\n\nexport const checkExistCartCustomerWithShop = (customerId, shopId) => {\n  return async dispatch => {\n    dispatch({ type: \"SEND\" })\n    try {\n      const response = await existCartCustomerWithShop(customerId, shopId)\n      return response\n    } catch (error) {\n      dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n    }\n    dispatch({ type: \"CLEAR_STATUS\" })\n  }\n}\n\nexport const initialCartData = cartId => {\n  return async dispatch => {\n    dispatch({ type: \"SEND\" })\n    try {\n      const response = await getCartData(cartId)\n      dispatch({\n        type: \"INITIAL_CART\",\n        payload: {\n          shopDetail: response,\n        },\n      })\n    } catch (error) {\n      dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n    }\n    dispatch({ type: \"CLEAR_STATUS\" })\n  }\n}\n\n// export const getShopDetail = shopId => {\n//   return async dispatch => {\n//     dispatch({ type: \"SEND\" })\n//     try {\n//       const response = await getShopById(shopId)\n//       dispatch({\n//         type: \"INITIAL_SHOP\",\n//         payload: {\n//           shopDetail: response,\n//         },\n//       })\n//       dispatch({ type: \"SUCCESS\" })\n//     } catch (error) {\n//       dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n//     }\n//     dispatch({ type: \"CLEAR_STATUS\" })\n//   }\n// }\n\n// export const updateInfomationShop = data => {\n//   return async dispatch => {\n//     dispatch({ type: \"SEND\" })\n//     try {\n//       await updateShop(data)\n//       dispatch({ type: \"SUCCESS\" })\n//     } catch (error) {\n//       dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n//     }\n\n//     dispatch({ type: \"CLEAR_STATUS\" })\n//   }\n// }\n\n// export const createNewItem = data => {\n//   return async dispatch => {\n//     dispatch({ type: \"SEND\" })\n//     try {\n//       await createItem(data)\n//       dispatch({ type: \"SUCCESS\" })\n//     } catch (error) {\n//       dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n//     }\n\n//     dispatch({ type: \"CLEAR_STATUS\" })\n//   }\n// }\n\n// export const updateInfomationItem = data => {\n//   return async dispatch => {\n//     dispatch({ type: \"SEND\" })\n//     try {\n//       await updateItem(data)\n//       dispatch({ type: \"SUCCESS\" })\n//     } catch (error) {\n//       dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n//     }\n\n//     dispatch({ type: \"CLEAR_STATUS\" })\n//   }\n// }\n\n// export const activeThisItem = (shopId, itemId) => {\n//   return async dispatch => {\n//     dispatch({ type: \"SEND\" })\n//     try {\n//       await activeItem(shopId, itemId)\n//       dispatch({ type: \"SUCCESS\" })\n//     } catch (error) {\n//       dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n//     }\n\n//     dispatch({ type: \"CLEAR_STATUS\" })\n//   }\n// }\n\n// export const deleteThisItem = (shopId, itemId) => {\n//   return async dispatch => {\n//     dispatch({ type: \"SEND\" })\n//     try {\n//       await deleteItem(shopId, itemId)\n//       dispatch({ type: \"SUCCESS\" })\n//     } catch (error) {\n//       dispatch({ type: \"ERROR\", payload: { errorMessage: error.message } })\n//     }\n\n//     dispatch({ type: \"CLEAR_STATUS\" })\n//   }\n// }\n"]},"metadata":{},"sourceType":"module"}