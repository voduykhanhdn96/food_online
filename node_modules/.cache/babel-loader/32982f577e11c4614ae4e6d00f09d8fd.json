{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/food_online/src/app/layouts/AdminLayout/RightSideBar/ShareModal.jsx\",\n    _s = $RefreshSig$();\n\nimport { Modal, Header, Icon, Button, Divider } from \"semantic-ui-react\";\nimport { forwardRef, useImperativeHandle, useState } from \"react\";\nimport QRCode from \"react-qr-code\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ShareModal = /*#__PURE__*/forwardRef(_c = _s((props, ref) => {\n  _s();\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [url, setUrl] = useState(\"\");\n  useImperativeHandle(ref, () => ({\n    open(url) {\n      setIsOpen(true);\n      setUrl(url);\n    }\n\n  }));\n\n  const copy = () => {\n    navigator.clipboard.writeText(url);\n    setIsOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    basic: true,\n    onClose: () => setIsOpen(false),\n    onOpen: () => setIsOpen(true),\n    open: isOpen,\n    size: \"small\",\n    className: \"store-modify-modal\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      size: \"small\",\n      icon: true,\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"share\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), \"Share To Customer\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Content, {\n      image: true,\n      children: /*#__PURE__*/_jsxDEV(QRCode, {\n        value: url\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal.Actions, {\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        basic: true,\n        color: \"blue\",\n        inverted: true,\n        onClick: copy,\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"copy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), \" Copy\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}, \"ngvB2dzZB6erlUH+ieh/ITG1b+c=\", false, function () {\n  return [useImperativeHandle];\n}));\n_c2 = ShareModal;\nexport default ShareModal;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ShareModal$forwardRef\");\n$RefreshReg$(_c2, \"ShareModal\");","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/food_online/src/app/layouts/AdminLayout/RightSideBar/ShareModal.jsx"],"names":["Modal","Header","Icon","Button","Divider","forwardRef","useImperativeHandle","useState","QRCode","ShareModal","props","ref","isOpen","setIsOpen","url","setUrl","open","copy","navigator","clipboard","writeText"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,MAAhB,EAAwBC,IAAxB,EAA8BC,MAA9B,EAAsCC,OAAtC,QAAqD,mBAArD;AACA,SAASC,UAAT,EAAqBC,mBAArB,EAA0CC,QAA1C,QAA0D,OAA1D;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAEA,MAAMC,UAAU,gBAAGJ,UAAU,SAAC,CAACK,KAAD,EAAQC,GAAR,KAAgB;AAAA;;AAC5C,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAApC;AACA,QAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AAEAD,EAAAA,mBAAmB,CAACK,GAAD,EAAM,OAAO;AAC9BK,IAAAA,IAAI,CAACF,GAAD,EAAM;AACRD,MAAAA,SAAS,CAAC,IAAD,CAAT;AACAE,MAAAA,MAAM,CAACD,GAAD,CAAN;AACD;;AAJ6B,GAAP,CAAN,CAAnB;;AAOA,QAAMG,IAAI,GAAG,MAAM;AACjBC,IAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BN,GAA9B;AACAD,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAHD;;AAKA,sBACE,QAAC,KAAD;AACE,IAAA,KAAK,MADP;AAEE,IAAA,OAAO,EAAE,MAAMA,SAAS,CAAC,KAAD,CAF1B;AAGE,IAAA,MAAM,EAAE,MAAMA,SAAS,CAAC,IAAD,CAHzB;AAIE,IAAA,IAAI,EAAED,MAJR;AAKE,IAAA,IAAI,EAAC,OALP;AAME,IAAA,SAAS,EAAC,oBANZ;AAAA,4BAQE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,OAAb;AAAqB,MAAA,IAAI,MAAzB;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAYE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAZF,eAaE,QAAC,KAAD,CAAO,OAAP;AAAe,MAAA,KAAK,MAApB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,EAAEE;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAbF,eAgBE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAhBF,eAiBE,QAAC,KAAD,CAAO,OAAP;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,KAAK,MAAb;AAAc,QAAA,KAAK,EAAC,MAApB;AAA2B,QAAA,QAAQ,MAAnC;AAAoC,QAAA,OAAO,EAAEG,IAA7C;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,gBADF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAzC4B;AAAA,UAI3BX,mBAJ2B;AAAA,GAA7B;MAAMG,U;AA2CN,eAAeA,UAAf","sourcesContent":["import { Modal, Header, Icon, Button, Divider } from \"semantic-ui-react\";\nimport { forwardRef, useImperativeHandle, useState } from \"react\";\nimport QRCode from \"react-qr-code\";\n\nconst ShareModal = forwardRef((props, ref) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [url, setUrl] = useState(\"\");\n\n  useImperativeHandle(ref, () => ({\n    open(url) {\n      setIsOpen(true);\n      setUrl(url);\n    },\n  }));\n\n  const copy = () => {\n    navigator.clipboard.writeText(url);\n    setIsOpen(false);\n  };\n\n  return (\n    <Modal\n      basic\n      onClose={() => setIsOpen(false)}\n      onOpen={() => setIsOpen(true)}\n      open={isOpen}\n      size=\"small\"\n      className=\"store-modify-modal\"\n    >\n      <Header size=\"small\" icon>\n        <Icon name=\"share\" />\n        Share To Customer\n      </Header>\n      <Divider />\n      <Modal.Content image>\n        <QRCode value={url} />\n      </Modal.Content>\n      <Divider />\n      <Modal.Actions>\n        <Button basic color=\"blue\" inverted onClick={copy}>\n          <Icon name=\"copy\" /> Copy\n        </Button>\n      </Modal.Actions>\n    </Modal>\n  );\n});\n\nexport default ShareModal;\n"]},"metadata":{},"sourceType":"module"}