{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/Store.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport MenuItemList from \"./../components/MenuItemList\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport Cart from \"../components/Cart\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkExistCartCustomerWithShop, addItemToCart } from \"../store/actions/shop-action\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Store = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isClickAdd, setIsClickAdd] = useState(false);\n  const auth = useSelector(state => state.auth);\n  const shop = useSelector(state => state.shop.cart);\n  const {\n    shopId\n  } = useParams();\n\n  const addToCart = id => {\n    dispatch(addItemToCart(auth.customerId, id, shop.cartId));\n  };\n\n  useEffect(() => {\n    // URL store/yyyy\n    dispatch(checkExistCartCustomerWithShop(auth.customerId, shopId));\n\n    if (isClickAdd) {} // URL cart/yyyy\n\n  }, [dispatch, auth.customerId, shopId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!!shop.shop && /*#__PURE__*/_jsxDEV(Header, {\n      size: \"medium\",\n      children: [\"Shop \", shop.shop.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 23\n    }, this), shop.shop && /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 10,\n        children: [shop.shop.items && /*#__PURE__*/_jsxDEV(MenuItemList, {\n          items: shop.shop.items,\n          addToCart: addToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this), shop.shop.items.length === 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Don't have any items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 6,\n        children: /*#__PURE__*/_jsxDEV(Cart, {\n          cart: shop\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Store, \"UDloM3arNSPunRdimkJ2JG4NGxY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useParams];\n});\n\n_c = Store;\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/Store.jsx"],"names":["useParams","MenuItemList","Grid","Header","Cart","useEffect","useDispatch","useSelector","checkExistCartCustomerWithShop","addItemToCart","useState","Store","dispatch","isClickAdd","setIsClickAdd","auth","state","shop","cart","shopId","addToCart","id","customerId","cartId","name","items","length"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,cAA1B;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,8BADF,EAEEC,aAFF,QAGO,8BAHP;AAIA,SAASC,QAAT,QAAyB,OAAzB;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,CAAC,KAAD,CAA5C;AACA,QAAMK,IAAI,GAAGR,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAME,IAAI,GAAGV,WAAW,CAACS,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAArB,CAAxB;AAEA,QAAM;AAAEC,IAAAA;AAAF,MAAanB,SAAS,EAA5B;;AAEA,QAAMoB,SAAS,GAAGC,EAAE,IAAI;AACtBT,IAAAA,QAAQ,CAACH,aAAa,CAACM,IAAI,CAACO,UAAN,EAAkBD,EAAlB,EAAsBJ,IAAI,CAACM,MAA3B,CAAd,CAAR;AACD,GAFD;;AAIAlB,EAAAA,SAAS,CAAC,MAAM;AACd;AACAO,IAAAA,QAAQ,CAACJ,8BAA8B,CAACO,IAAI,CAACO,UAAN,EAAkBH,MAAlB,CAA/B,CAAR;;AAEA,QAAIN,UAAJ,EAAgB,CACf,CALa,CAOd;;AACD,GARQ,EAQN,CAACD,QAAD,EAAWG,IAAI,CAACO,UAAhB,EAA4BH,MAA5B,CARM,CAAT;AAUA,sBACE;AAAA,eACG,CAAC,CAACF,IAAI,CAACA,IAAP,iBAAe,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA,0BAA4BA,IAAI,CAACA,IAAL,CAAUO,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YADlB,EAEGP,IAAI,CAACA,IAAL,iBACC,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,EAApB;AAAA,mBACGA,IAAI,CAACA,IAAL,CAAUQ,KAAV,iBACC,QAAC,YAAD;AACE,UAAA,KAAK,EAAER,IAAI,CAACA,IAAL,CAAUQ,KADnB;AAEE,UAAA,SAAS,EAAEL;AAFb;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAOGH,IAAI,CAACA,IAAL,CAAUQ,KAAV,CAAgBC,MAAhB,KAA2B,CAA3B,iBAAgC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPnC;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,CAApB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAET;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA,kBADF;AAsBD,CA5CD;;GAAMN,K;UACaL,W,EAEJC,W,EACAA,W,EAEMP,S;;;KANfW,K;AA8CN,eAAeA,KAAf","sourcesContent":["import { useParams } from \"react-router\"\nimport MenuItemList from \"./../components/MenuItemList\"\nimport { Grid, Header } from \"semantic-ui-react\"\nimport Cart from \"../components/Cart\"\nimport { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  checkExistCartCustomerWithShop,\n  addItemToCart,\n} from \"../store/actions/shop-action\"\nimport { useState } from \"react\"\n\nconst Store = () => {\n  const dispatch = useDispatch()\n  const [isClickAdd, setIsClickAdd] = useState(false)\n  const auth = useSelector(state => state.auth)\n  const shop = useSelector(state => state.shop.cart)\n\n  const { shopId } = useParams()\n\n  const addToCart = id => {\n    dispatch(addItemToCart(auth.customerId, id, shop.cartId))\n  }\n\n  useEffect(() => {\n    // URL store/yyyy\n    dispatch(checkExistCartCustomerWithShop(auth.customerId, shopId))\n\n    if (isClickAdd) {\n    }\n    \n    // URL cart/yyyy\n  }, [dispatch, auth.customerId, shopId])\n\n  return (\n    <>\n      {!!shop.shop && <Header size=\"medium\">Shop {shop.shop.name}</Header>}\n      {shop.shop && (\n        <Grid>\n          <Grid.Column width={10}>\n            {shop.shop.items && (\n              <MenuItemList\n                items={shop.shop.items}\n                addToCart={addToCart}\n              ></MenuItemList>\n            )}\n            {shop.shop.items.length === 0 && <h1>Don't have any items</h1>}\n          </Grid.Column>\n\n          <Grid.Column width={6}>\n            <Cart cart={shop}></Cart>\n          </Grid.Column>\n        </Grid>\n      )}\n    </>\n  )\n}\n\nexport default Store\n"]},"metadata":{},"sourceType":"module"}