{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/food_online/src/app/pages/Store.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport MenuItemList from \"./../components/MenuItemList\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport Cart from \"../components/Cart\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkExistCartCustomerWithShop, addItemToCart, removeItemFromCart, initialCartData } from \"../store/actions/shop-action\";\nimport { useState } from \"react\";\nimport useToast from \"../hooks/useToast\";\nimport { useLocation } from \"react-router-dom\";\nimport Load from \"../components/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Store = () => {\n  _s();\n\n  const param = useParams();\n  const [isClick, setIsClick] = useState(false);\n  const [isInit, setIsInit] = useState(true);\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const shop = useSelector(state => state.shop.cart);\n  const notification = useSelector(state => state.notification);\n\n  const addToCart = id => {\n    dispatch(addItemToCart(auth.customerId, id, shop.cartId));\n    setIsClick(true);\n  };\n\n  const startCons = useCallback(async () => {\n    const connection = new HubConnectionBuilder().withUrl(\"http://localhost:8080/hubs/order?order=\" + orderId, {\n      withCredentials: false\n    }).configureLogging(LogLevel.Information).build();\n\n    try {\n      await connection.start();\n    } catch (e) {\n      console.log(e);\n    }\n\n    connection.on(\"ChangeOrderStatus\", message => {\n      dispatch(takeOrder(orderId));\n    });\n  }, [dispatch, orderId]);\n\n  const removeItem = id => {\n    dispatch(removeItemFromCart(auth.customerId, id, shop.cartId));\n    setIsClick(true);\n  };\n\n  const isChange = () => {\n    setIsClick(true);\n  };\n\n  useEffect(() => {\n    startCons();\n  }, [startCons]);\n  useEffect(() => {\n    if (isClick) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Food is added or removed into cart\");\n        setIsClick(false);\n      }\n\n      if (notification.status === \"completed\" && notification.error) {\n        toastError(notification.error);\n        setIsClick(false);\n      }\n    }\n  }, [notification, isClick, toastSuccess, toastError]);\n  useEffect(() => {\n    if (isInit) {\n      console.log(\"cxzcxz\");\n\n      if (location.pathname.includes(\"store\")) {\n        dispatch(checkExistCartCustomerWithShop(auth.customerId, param.shopId));\n      }\n\n      if (location.pathname.includes(\"cart\")) {\n        dispatch(initialCartData(param.cartId));\n      }\n\n      setIsInit(false);\n    }\n  }, [dispatch, auth.customerId, param, location, isInit]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notification.status === \"pending\" && /*#__PURE__*/_jsxDEV(Load, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 45\n    }, this), (isClick || notification.status !== \"pending\") && shop.shop && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        size: \"medium\",\n        children: [\"Shop \", shop.shop.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 10,\n          children: [shop.shop.items && /*#__PURE__*/_jsxDEV(MenuItemList, {\n            items: shop.shop.items.filter(item => item.isActive !== false),\n            addToCart: addToCart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 17\n          }, this), shop.shop.items.length === 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Don't have any items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 6,\n          children: /*#__PURE__*/_jsxDEV(Cart, {\n            cart: shop,\n            removeItem: removeItem,\n            isChange: isChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(Store, \"Gg7Mrw47cmCpznRkZL7sR1OnOAU=\", false, function () {\n  return [useParams, useToast, useLocation, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Store;\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/food_online/src/app/pages/Store.jsx"],"names":["useParams","MenuItemList","Grid","Header","Cart","useEffect","useDispatch","useSelector","checkExistCartCustomerWithShop","addItemToCart","removeItemFromCart","initialCartData","useState","useToast","useLocation","Load","Store","param","isClick","setIsClick","isInit","setIsInit","toastSuccess","toastError","location","dispatch","auth","state","shop","cart","notification","addToCart","id","customerId","cartId","startCons","useCallback","connection","HubConnectionBuilder","withUrl","orderId","withCredentials","configureLogging","LogLevel","Information","build","start","e","console","log","on","message","takeOrder","removeItem","isChange","status","error","pathname","includes","shopId","name","items","filter","item","isActive","length"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router\";\nimport MenuItemList from \"./../components/MenuItemList\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport Cart from \"../components/Cart\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  checkExistCartCustomerWithShop,\n  addItemToCart,\n  removeItemFromCart,\n  initialCartData,\n} from \"../store/actions/shop-action\";\nimport { useState } from \"react\";\nimport useToast from \"../hooks/useToast\";\nimport { useLocation } from \"react-router-dom\";\nimport Load from \"../components/Loader\";\n\nconst Store = () => {\n  const param = useParams();\n  const [isClick, setIsClick] = useState(false);\n  const [isInit, setIsInit] = useState(true);\n  const { toastSuccess, toastError } = useToast();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const auth = useSelector((state) => state.auth);\n  const shop = useSelector((state) => state.shop.cart);\n  const notification = useSelector((state) => state.notification);\n\n  const addToCart = (id) => {\n    dispatch(addItemToCart(auth.customerId, id, shop.cartId));\n    setIsClick(true);\n  };\n\n  const startCons = useCallback(async () => {\n    const connection = new HubConnectionBuilder()\n      .withUrl(\"http://localhost:8080/hubs/order?order=\" + orderId, {\n        withCredentials: false,\n      })\n      .configureLogging(LogLevel.Information)\n      .build();\n\n    try {\n      await connection.start();\n    } catch (e) {\n      console.log(e);\n    }\n\n    connection.on(\"ChangeOrderStatus\", (message) => {\n      dispatch(takeOrder(orderId));\n    });\n  }, [dispatch, orderId]);\n\n  const removeItem = (id) => {\n    dispatch(removeItemFromCart(auth.customerId, id, shop.cartId));\n    setIsClick(true);\n  };\n\n  const isChange = () => {\n    setIsClick(true);\n  };\n\n  useEffect(() => {\n    startCons();\n  }, [startCons]);\n  useEffect(() => {\n    if (isClick) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Food is added or removed into cart\");\n        setIsClick(false);\n      }\n      if (notification.status === \"completed\" && notification.error) {\n        toastError(notification.error);\n        setIsClick(false);\n      }\n    }\n  }, [notification, isClick, toastSuccess, toastError]);\n\n  useEffect(() => {\n    if (isInit) {\n      console.log(\"cxzcxz\");\n      if (location.pathname.includes(\"store\")) {\n        dispatch(checkExistCartCustomerWithShop(auth.customerId, param.shopId));\n      }\n      if (location.pathname.includes(\"cart\")) {\n        dispatch(initialCartData(param.cartId));\n      }\n      setIsInit(false);\n    }\n  }, [dispatch, auth.customerId, param, location, isInit]);\n\n  return (\n    <>\n      {notification.status === \"pending\" && <Load />}\n      {(isClick || notification.status !== \"pending\") && shop.shop && (\n        <>\n          <Header size=\"medium\">Shop {shop.shop.name}</Header>\n          <Grid>\n            <Grid.Column width={10}>\n              {shop.shop.items && (\n                <MenuItemList\n                  items={shop.shop.items.filter(\n                    (item) => item.isActive !== false\n                  )}\n                  addToCart={addToCart}\n                ></MenuItemList>\n              )}\n              {shop.shop.items.length === 0 && <h1>Don't have any items</h1>}\n            </Grid.Column>\n\n            <Grid.Column width={6}>\n              <Cart\n                cart={shop}\n                removeItem={removeItem}\n                isChange={isChange}\n              ></Cart>\n            </Grid.Column>\n          </Grid>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}