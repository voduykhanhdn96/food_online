{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/Store.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport { useState } from \"react\";\nimport MenuItemList from \"./../components/MenuItemList\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport Cart from \"../components/Cart\";\nimport { generateCart, generateMenu } from \"../helpers/fake-data-helper\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkExistCartCustomerWithShop } from \"../store/actions/shop-action\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Store = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const shop = useSelector(state => state.shop.cart);\n  const menuFake = generateMenu();\n  const cartFake = generateCart(menuFake);\n  const {\n    shopId\n  } = useParams();\n  const [items] = useState(menuFake);\n  const [cart] = useState(cartFake);\n\n  const addToCart = id => {};\n\n  const checkResponseExistCart = useCallback(async () => {\n    const response = await dispatch(checkExistCartCustomerWithShop(auth.customerId, shopId));\n    setResponseCheck(response);\n  }, [auth.customerId, shopId, dispatch]);\n  useEffect(() => {\n    checkResponseExistCart();\n  }, [checkResponseExistCart]);\n  console.log(shop);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!!shop.shop && /*#__PURE__*/_jsxDEV(Header, {\n      size: \"medium\",\n      children: [\"Shop \", shop.shop.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 12,\n        children: items && /*#__PURE__*/_jsxDEV(MenuItemList, {\n          items: items,\n          addToCart: addToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 4,\n        children: /*#__PURE__*/_jsxDEV(Cart, {\n          cart: cart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Store, \"7J47lu0xKCu2RHSo7cnp9nMhRYs=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useParams];\n});\n\n_c = Store;\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/Store.jsx"],"names":["useParams","useState","MenuItemList","Grid","Header","Cart","generateCart","generateMenu","useEffect","useDispatch","useSelector","checkExistCartCustomerWithShop","useCallback","Store","dispatch","auth","state","shop","cart","menuFake","cartFake","shopId","items","addToCart","id","checkResponseExistCart","response","customerId","setResponseCheck","console","log","name"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,cAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,6BAA3C;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACEC,8BADF,QAEO,8BAFP;AAGA,SAASC,WAAT,QAA4B,OAA5B;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,IAAI,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAME,IAAI,GAAGP,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAArB,CAAxB;AACA,QAAMC,QAAQ,GAAGZ,YAAY,EAA7B;AACA,QAAMa,QAAQ,GAAGd,YAAY,CAACa,QAAD,CAA7B;AAEA,QAAM;AAAEE,IAAAA;AAAF,MAAarB,SAAS,EAA5B;AACA,QAAM,CAACsB,KAAD,IAAUrB,QAAQ,CAACkB,QAAD,CAAxB;AACA,QAAM,CAACD,IAAD,IAASjB,QAAQ,CAACmB,QAAD,CAAvB;;AAEA,QAAMG,SAAS,GAAGC,EAAE,IAAI,CAAE,CAA1B;;AAEA,QAAMC,sBAAsB,GAAGb,WAAW,CAAC,YAAY;AACrD,UAAMc,QAAQ,GAAG,MAAMZ,QAAQ,CAC7BH,8BAA8B,CAACI,IAAI,CAACY,UAAN,EAAkBN,MAAlB,CADD,CAA/B;AAGAO,IAAAA,gBAAgB,CAACF,QAAD,CAAhB;AACD,GALyC,EAKvC,CAACX,IAAI,CAACY,UAAN,EAAkBN,MAAlB,EAA0BP,QAA1B,CALuC,CAA1C;AAOAN,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,sBAAsB;AACvB,GAFQ,EAEN,CAACA,sBAAD,CAFM,CAAT;AAIAI,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACA,sBACE;AAAA,eACG,CAAC,CAACA,IAAI,CAACA,IAAP,iBAAe,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA,0BAA4BA,IAAI,CAACA,IAAL,CAAUc,IAAtC;AAAA;AAAA;AAAA;AAAA;AAAA,YADlB,eAEE,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,EAApB;AAAA,kBACGT,KAAK,iBACJ,QAAC,YAAD;AAAc,UAAA,KAAK,EAAEA,KAArB;AAA4B,UAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,CAApB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEL;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAeD,CAxCD;;GAAML,K;UACaJ,W,EACJC,W,EACAA,W,EAIMV,S;;;KAPfa,K;AA0CN,eAAeA,KAAf","sourcesContent":["import { useParams } from \"react-router\"\nimport { useState } from \"react\"\nimport MenuItemList from \"./../components/MenuItemList\"\nimport { Grid, Header } from \"semantic-ui-react\"\nimport Cart from \"../components/Cart\"\nimport { generateCart, generateMenu } from \"../helpers/fake-data-helper\"\nimport { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  checkExistCartCustomerWithShop,\n} from \"../store/actions/shop-action\"\nimport { useCallback } from \"react\"\n\nconst Store = () => {\n  const dispatch = useDispatch()\n  const auth = useSelector(state => state.auth)\n  const shop = useSelector(state => state.shop.cart)\n  const menuFake = generateMenu()\n  const cartFake = generateCart(menuFake)\n\n  const { shopId } = useParams()\n  const [items] = useState(menuFake)\n  const [cart] = useState(cartFake)\n\n  const addToCart = id => {}\n\n  const checkResponseExistCart = useCallback(async () => {\n    const response = await dispatch(\n      checkExistCartCustomerWithShop(auth.customerId, shopId)\n    )\n    setResponseCheck(response)\n  }, [auth.customerId, shopId, dispatch])\n\n  useEffect(() => {\n    checkResponseExistCart()\n  }, [checkResponseExistCart])\n\n  console.log(shop)\n  return (\n    <>\n      {!!shop.shop && <Header size=\"medium\">Shop {shop.shop.name}</Header>}\n      <Grid>\n        <Grid.Column width={12}>\n          {items && (\n            <MenuItemList items={items} addToCart={addToCart}></MenuItemList>\n          )}\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Cart cart={cart}></Cart>\n        </Grid.Column>\n      </Grid>\n    </>\n  )\n}\n\nexport default Store\n"]},"metadata":{},"sourceType":"module"}