{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/Store.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport MenuItemList from \"./../components/MenuItemList\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport Cart from \"../components/Cart\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkExistCartCustomerWithShop, addItemToCart } from \"../store/actions/shop-action\";\nimport { useState } from \"react\";\nimport useToast from \"../hooks/useToast\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Store = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const [isClick, setIsClick] = useState(false);\n  const auth = useSelector(state => state.auth);\n  const shop = useSelector(state => state.shop.cart);\n  const notification = useSelector(state => state.notification);\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const {\n    shopId\n  } = useParams();\n\n  const addToCart = id => {\n    dispatch(addItemToCart(auth.customerId, id, shop.cartId));\n    setIsClick(true);\n  };\n\n  const removeItem = id => {};\n\n  useEffect(() => {\n    if (isClickAdd) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Food is added into cart\");\n        setIsClick(false);\n      }\n\n      if (notification.status === \"completed\" && notification.error) {\n        toastError(\"Add food have some problem\");\n        setIsClick(false);\n      }\n    }\n  }, [notification, isClickAdd, toastSuccess, toastError]);\n  useEffect(() => {\n    // URL store/yyyy\n    dispatch(checkExistCartCustomerWithShop(auth.customerId, shopId)); // URL cart/yyyy\n  }, [dispatch, auth.customerId, shopId]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!!shop.shop && /*#__PURE__*/_jsxDEV(Header, {\n      size: \"medium\",\n      children: [\"Shop \", shop.shop.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 23\n    }, this), shop.shop && /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 10,\n        children: [shop.shop.items && /*#__PURE__*/_jsxDEV(MenuItemList, {\n          items: shop.shop.items,\n          addToCart: addToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this), shop.shop.items.length === 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Don't have any items\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 46\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 6,\n        children: /*#__PURE__*/_jsxDEV(Cart, {\n          cart: shop,\n          removeItem: removeItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Store, \"gKtp7li7d61UkBVmJt+I2svdXaM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useToast, useParams];\n});\n\n_c = Store;\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/Store.jsx"],"names":["useParams","MenuItemList","Grid","Header","Cart","useEffect","useDispatch","useSelector","checkExistCartCustomerWithShop","addItemToCart","useState","useToast","Store","dispatch","isClick","setIsClick","auth","state","shop","cart","notification","toastSuccess","toastError","shopId","addToCart","id","customerId","cartId","removeItem","isClickAdd","status","error","name","items","length"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router\"\nimport MenuItemList from \"./../components/MenuItemList\"\nimport { Grid, Header } from \"semantic-ui-react\"\nimport Cart from \"../components/Cart\"\nimport { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  checkExistCartCustomerWithShop,\n  addItemToCart,\n} from \"../store/actions/shop-action\"\nimport { useState } from \"react\"\nimport useToast from \"../hooks/useToast\"\n\nconst Store = () => {\n  const dispatch = useDispatch()\n  const [isClick, setIsClick] = useState(false)\n  const auth = useSelector(state => state.auth)\n  const shop = useSelector(state => state.shop.cart)\n  const notification = useSelector(state => state.notification)\n  const { toastSuccess, toastError } = useToast()\n\n  const { shopId } = useParams()\n\n  const addToCart = id => {\n    dispatch(addItemToCart(auth.customerId, id, shop.cartId))\n    setIsClick(true)\n  }\n\n  const removeItem = id => {}\n  useEffect(() => {\n    if (isClickAdd) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Food is added into cart\")\n        setIsClick(false)\n      }\n      if (notification.status === \"completed\" && notification.error) {\n        toastError(\"Add food have some problem\")\n        setIsClick(false)\n      }\n    }\n  }, [notification, isClickAdd, toastSuccess, toastError])\n\n  useEffect(() => {\n    // URL store/yyyy\n    dispatch(checkExistCartCustomerWithShop(auth.customerId, shopId))\n\n    // URL cart/yyyy\n  }, [dispatch, auth.customerId, shopId])\n\n  return (\n    <>\n      {!!shop.shop && <Header size=\"medium\">Shop {shop.shop.name}</Header>}\n      {shop.shop && (\n        <Grid>\n          <Grid.Column width={10}>\n            {shop.shop.items && (\n              <MenuItemList\n                items={shop.shop.items}\n                addToCart={addToCart}\n              ></MenuItemList>\n            )}\n            {shop.shop.items.length === 0 && <h1>Don't have any items</h1>}\n          </Grid.Column>\n\n          <Grid.Column width={6}>\n            <Cart cart={shop} removeItem={removeItem}></Cart>\n          </Grid.Column>\n        </Grid>\n      )}\n    </>\n  )\n}\n\nexport default Store\n"]},"metadata":{},"sourceType":"module"}