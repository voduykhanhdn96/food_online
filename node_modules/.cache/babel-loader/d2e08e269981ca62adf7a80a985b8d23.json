{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/ViewOrders.jsx\",\n    _s = $RefreshSig$();\n\nimport { AgGridReact } from \"ag-grid-react\";\nimport { useMemo, useRef, useState } from \"react\";\nimport { generateOrders } from \"../helpers/fake-data-helper\";\nimport ActionCellRenderer from \"./ViewOrders/ActionCellRenderer\";\nimport StatusCellRenderer from \"./ViewOrders/StatusCellRenderer\";\nimport OrderDetailModal from \"./ViewOrders/OrderDetailModal\";\nimport SectionHeader from \"../components/SectionHeader\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport { getListOrder } from \"../store/actions/admin-action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewOrders = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const order = useSelector(state => state.admin.order); // never changes, so we can use useMemo\n\n  const columnDefs = useMemo(() => [{\n    field: \"orderNumber\",\n    pinned: \"left\"\n  }, {\n    field: \"customerName\"\n  }, {\n    field: \"customerPhone\"\n  }, {\n    field: \"total\"\n  }, {\n    field: \"status\",\n    cellRenderer: \"statusCellRenderer\"\n  }, {\n    field: \"orderTime\",\n    sort: \"desc\"\n  }, {\n    field: \"action\",\n    pinned: \"right\",\n    cellRenderer: \"actionCellRenderer\",\n    cellRendererParams: {\n      onViewOrder: id => viewOrder(id)\n    }\n  }], []);\n  const defaultColDef = useMemo(() => ({\n    resizable: true,\n    sortable: true\n  }), []);\n  useEffect(() => {\n    dispatch(getListOrder(auth.shopId));\n  }, [dispatch, auth.shopId]);\n  console.log(shop); // changes, needs to be state\n\n  const [rowData] = useState(generateOrders());\n  console.log(rowData);\n  const gridHeight = window.innerHeight;\n  const modalRef = useRef(null);\n\n  const viewOrder = id => {\n    modalRef.current.open(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n      title: \"View Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ag-theme-material grid-order\",\n      style: {\n        height: gridHeight - 150\n      },\n      children: /*#__PURE__*/_jsxDEV(AgGridReact, {\n        reactUi: \"true\",\n        className: \"ag-theme-material\",\n        animateRows: \"true\",\n        columnDefs: columnDefs,\n        defaultColDef: defaultColDef,\n        rowData: rowData,\n        frameworkComponents: {\n          actionCellRenderer: ActionCellRenderer,\n          statusCellRenderer: StatusCellRenderer\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderDetailModal, {\n      ref: modalRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ViewOrders, \"FNyRjSQVr3b9RydMzcK/qX4RhgI=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ViewOrders;\nexport default ViewOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewOrders\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/ViewOrders.jsx"],"names":["AgGridReact","useMemo","useRef","useState","generateOrders","ActionCellRenderer","StatusCellRenderer","OrderDetailModal","SectionHeader","useDispatch","useSelector","useEffect","getListOrder","ViewOrders","dispatch","auth","state","order","admin","columnDefs","field","pinned","cellRenderer","sort","cellRendererParams","onViewOrder","id","viewOrder","defaultColDef","resizable","sortable","shopId","console","log","shop","rowData","gridHeight","window","innerHeight","modalRef","current","open","height","actionCellRenderer","statusCellRenderer"],"mappings":"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","sourcesContent":["import { AgGridReact } from \"ag-grid-react\"\nimport { useMemo, useRef, useState } from \"react\"\nimport { generateOrders } from \"../helpers/fake-data-helper\"\nimport ActionCellRenderer from \"./ViewOrders/ActionCellRenderer\"\nimport StatusCellRenderer from \"./ViewOrders/StatusCellRenderer\"\nimport OrderDetailModal from \"./ViewOrders/OrderDetailModal\"\nimport SectionHeader from \"../components/SectionHeader\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect } from \"react\"\nimport { getListOrder } from \"../store/actions/admin-action\"\n\nconst ViewOrders = () => {\n  const dispatch = useDispatch()\n  const auth = useSelector(state => state.auth)\n  const order = useSelector(state => state.admin.order)\n  // never changes, so we can use useMemo\n  const columnDefs = useMemo(\n    () => [\n      { field: \"orderNumber\", pinned: \"left\" },\n      { field: \"customerName\" },\n      { field: \"customerPhone\" },\n      { field: \"total\" },\n      { field: \"status\", cellRenderer: \"statusCellRenderer\" },\n      { field: \"orderTime\", sort: \"desc\" },\n      {\n        field: \"action\",\n        pinned: \"right\",\n        cellRenderer: \"actionCellRenderer\",\n        cellRendererParams: {\n          onViewOrder: id => viewOrder(id),\n        },\n      },\n    ],\n    []\n  )\n\n  const defaultColDef = useMemo(\n    () => ({\n      resizable: true,\n      sortable: true,\n    }),\n    []\n  )\n\n  useEffect(() => {\n    dispatch(getListOrder(auth.shopId))\n  }, [dispatch, auth.shopId])\n\n  console.log(shop)\n  // changes, needs to be state\n  const [rowData] = useState(generateOrders())\n  console.log(rowData)\n  const gridHeight = window.innerHeight\n\n  const modalRef = useRef(null)\n\n  const viewOrder = id => {\n    modalRef.current.open(id)\n  }\n\n  return (\n    <>\n      <SectionHeader title=\"View Orders\"></SectionHeader>\n      <div\n        className=\"ag-theme-material grid-order\"\n        style={{ height: gridHeight - 150 }}\n      >\n        <AgGridReact\n          reactUi=\"true\"\n          className=\"ag-theme-material\"\n          animateRows=\"true\"\n          columnDefs={columnDefs}\n          defaultColDef={defaultColDef}\n          rowData={rowData}\n          frameworkComponents={{\n            actionCellRenderer: ActionCellRenderer,\n            statusCellRenderer: StatusCellRenderer,\n          }}\n        />\n      </div>\n      <OrderDetailModal ref={modalRef}></OrderDetailModal>\n    </>\n  )\n}\n\nexport default ViewOrders\n"]},"metadata":{},"sourceType":"module"}