{"ast":null,"code":"const BACKEND_DOMAIN = \"http://localhost:8080/api\";\nexport async function createItem(foodData) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Item/create`, {\n    method: \"POST\",\n    body: foodData\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Insert item is fail\");\n  }\n\n  return null;\n}\nexport async function updateItem(itemData) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Item`, {\n    method: \"PUT\",\n    body: itemData\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Update shop is fail\");\n  }\n\n  return null;\n}\nexport async function deleteItem(shopId, itemId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Item/`, {\n    method: \"DELETE\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      shopId: shopId,\n      itemId: itemId\n    })\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Delete item is fail\");\n  }\n\n  return null;\n}\nexport async function activeItem(shopId, itemId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Item/Active`, {\n    method: \"PUT\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n      shopId: shopId,\n      itemId: itemId\n    })\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Active item is fail\");\n  }\n\n  return null;\n}","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/food_online/src/app/lib/api_item.js"],"names":["BACKEND_DOMAIN","createItem","foodData","response","fetch","method","body","data","json","ok","Error","message","updateItem","itemData","deleteItem","shopId","itemId","headers","JSON","stringify","activeItem"],"mappings":"AAAA,MAAMA,cAAc,GAAG,2BAAvB;AAEA,OAAO,eAAeC,UAAf,CAA0BC,QAA1B,EAAoC;AACzC,QAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,cAAe,cAAnB,EAAkC;AAC5DK,IAAAA,MAAM,EAAE,MADoD;AAE5DC,IAAAA,IAAI,EAAEJ;AAFsD,GAAlC,CAA5B;AAKA,QAAMK,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;;AAEA,MAAI,CAACL,QAAQ,CAACM,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,qBAA1B,CAAN;AACD;;AAED,SAAO,IAAP;AACD;AAED,OAAO,eAAeC,UAAf,CAA0BC,QAA1B,EAAoC;AACzC,QAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,cAAe,OAAnB,EAA2B;AACrDK,IAAAA,MAAM,EAAE,KAD6C;AAErDC,IAAAA,IAAI,EAAEO;AAF+C,GAA3B,CAA5B;AAKA,QAAMN,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;;AAEA,MAAI,CAACL,QAAQ,CAACM,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,qBAA1B,CAAN;AACD;;AAED,SAAO,IAAP;AACD;AAED,OAAO,eAAeG,UAAf,CAA0BC,MAA1B,EAAkCC,MAAlC,EAA0C;AAC/C,QAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,cAAe,QAAnB,EAA4B;AACtDK,IAAAA,MAAM,EAAE,QAD8C;AAEtDY,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAF6C;AAGtDX,IAAAA,IAAI,EAAEY,IAAI,CAACC,SAAL,CAAe;AACnBJ,MAAAA,MAAM,EAAEA,MADW;AAEnBC,MAAAA,MAAM,EAAEA;AAFW,KAAf;AAHgD,GAA5B,CAA5B;AASA,QAAMT,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;;AAEA,MAAI,CAACL,QAAQ,CAACM,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,qBAA1B,CAAN;AACD;;AAED,SAAO,IAAP;AACD;AAED,OAAO,eAAeS,UAAf,CAA0BL,MAA1B,EAAkCC,MAAlC,EAA0C;AAC/C,QAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEJ,cAAe,cAAnB,EAAkC;AAC5DK,IAAAA,MAAM,EAAE,KADoD;AAE5DY,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFmD;AAG5DX,IAAAA,IAAI,EAAEY,IAAI,CAACC,SAAL,CAAe;AACnBJ,MAAAA,MAAM,EAAEA,MADW;AAEnBC,MAAAA,MAAM,EAAEA;AAFW,KAAf;AAHsD,GAAlC,CAA5B;AASA,QAAMT,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAT,EAAnB;;AAEA,MAAI,CAACL,QAAQ,CAACM,EAAd,EAAkB;AAChB,UAAM,IAAIC,KAAJ,CAAUH,IAAI,CAACI,OAAL,IAAgB,qBAA1B,CAAN;AACD;;AAED,SAAO,IAAP;AACD","sourcesContent":["const BACKEND_DOMAIN = \"http://localhost:8080/api\"\n\nexport async function createItem(foodData) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Item/create`, {\n    method: \"POST\",\n    body: foodData,\n  })\n\n  const data = await response.json()\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Insert item is fail\")\n  }\n\n  return null\n}\n\nexport async function updateItem(itemData) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Item`, {\n    method: \"PUT\",\n    body: itemData,\n  })\n\n  const data = await response.json()\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Update shop is fail\")\n  }\n\n  return null\n}\n\nexport async function deleteItem(shopId, itemId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Item/`, {\n    method: \"DELETE\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      shopId: shopId,\n      itemId: itemId,\n    }),\n  })\n\n  const data = await response.json()\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Delete item is fail\")\n  }\n\n  return null\n}\n\nexport async function activeItem(shopId, itemId) {\n  const response = await fetch(`${BACKEND_DOMAIN}/Item/Active`, {\n    method: \"PUT\",\n    headers: { \"Content-Type\": \"application/json\" },\n    body: JSON.stringify({\n      shopId: shopId,\n      itemId: itemId,\n    }),\n  })\n\n  const data = await response.json()\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Active item is fail\")\n  }\n\n  return null\n}\n"]},"metadata":{},"sourceType":"module"}