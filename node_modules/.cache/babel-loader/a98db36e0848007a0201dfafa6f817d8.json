{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/ViewMenu.jsx\",\n    _s = $RefreshSig$();\n\nimport MenuDetailModal from \"./ViewMenu/MenuDetailModal\";\nimport MenuItemList from \"../components/MenuItemList\";\nimport { generateMenu } from \"../helpers/fake-data-helper\";\nimport SectionHeader from \"../components/SectionHeader\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getShopDetail } from \"../store/actions/admin-action\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewMenu = () => {\n  _s();\n\n  const auth = useSelector(state => state.auth);\n  const dispatch = useDispatch();\n  const [rowData] = useState(generateMenu());\n  const modalRef = useRef(null);\n\n  const viewOrder = id => {\n    modalRef.current.open(id);\n  };\n\n  const addItem = () => {\n    modalRef.current.open();\n  };\n\n  useEffect(() => {\n    dispatch(getShopDetail(auth.shopId));\n  }, [auth, dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n      title: \"View Menu\",\n      addItem: () => addItem()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), rowData && /*#__PURE__*/_jsxDEV(MenuItemList, {\n      items: rowData,\n      viewOrder: viewOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MenuDetailModal, {\n      ref: modalRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ViewMenu, \"/SuTCcY/1cYGpPqJkvFTBNtJ9Ow=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ViewMenu;\nexport default ViewMenu;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewMenu\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/ViewMenu.jsx"],"names":["MenuDetailModal","MenuItemList","generateMenu","SectionHeader","useEffect","useRef","useState","useDispatch","useSelector","getShopDetail","ViewMenu","auth","state","dispatch","rowData","modalRef","viewOrder","id","current","open","addItem","shopId"],"mappings":";;;AAAA,OAAOA,eAAP,MAA4B,4BAA5B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,aAAT,QAA8B,+BAA9B;;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACrB,QAAMC,IAAI,GAAGH,WAAW,CAACI,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AAEA,QAAME,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,OAAD,IAAYR,QAAQ,CAACJ,YAAY,EAAb,CAA1B;AACA,QAAMa,QAAQ,GAAGV,MAAM,CAAC,IAAD,CAAvB;;AAEA,QAAMW,SAAS,GAAGC,EAAE,IAAI;AACtBF,IAAAA,QAAQ,CAACG,OAAT,CAAiBC,IAAjB,CAAsBF,EAAtB;AACD,GAFD;;AAIA,QAAMG,OAAO,GAAG,MAAM;AACpBL,IAAAA,QAAQ,CAACG,OAAT,CAAiBC,IAAjB;AACD,GAFD;;AAIAf,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,CAACJ,aAAa,CAACE,IAAI,CAACU,MAAN,CAAd,CAAR;AACD,GAFQ,EAEN,CAACV,IAAD,EAAOE,QAAP,CAFM,CAAT;AAIA,sBACE;AAAA,4BACE,QAAC,aAAD;AACE,MAAA,KAAK,EAAC,WADR;AAEE,MAAA,OAAO,EAAE,MAAMO,OAAO;AAFxB;AAAA;AAAA;AAAA;AAAA,YADF,EAKGN,OAAO,iBACN,QAAC,YAAD;AAAc,MAAA,KAAK,EAAEA,OAArB;AAA8B,MAAA,SAAS,EAAEE;AAAzC;AAAA;AAAA;AAAA;AAAA,YANJ,eASE,QAAC,eAAD;AAAiB,MAAA,GAAG,EAAED;AAAtB;AAAA;AAAA;AAAA;AAAA,YATF;AAAA,kBADF;AAaD,CAhCD;;GAAML,Q;UACSF,W,EAEID,W;;;KAHbG,Q;AAkCN,eAAeA,QAAf","sourcesContent":["import MenuDetailModal from \"./ViewMenu/MenuDetailModal\"\nimport MenuItemList from \"../components/MenuItemList\"\nimport { generateMenu } from \"../helpers/fake-data-helper\"\nimport SectionHeader from \"../components/SectionHeader\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { getShopDetail } from \"../store/actions/admin-action\"\n\nconst ViewMenu = () => {\n  const auth = useSelector(state => state.auth)\n\n  const dispatch = useDispatch()\n  const [rowData] = useState(generateMenu())\n  const modalRef = useRef(null)\n\n  const viewOrder = id => {\n    modalRef.current.open(id)\n  }\n\n  const addItem = () => {\n    modalRef.current.open()\n  }\n\n  useEffect(() => {\n    dispatch(getShopDetail(auth.shopId))\n  }, [auth, dispatch])\n\n  return (\n    <>\n      <SectionHeader\n        title=\"View Menu\"\n        addItem={() => addItem()}\n      ></SectionHeader>\n      {rowData && (\n        <MenuItemList items={rowData} viewOrder={viewOrder}></MenuItemList>\n      )}\n\n      <MenuDetailModal ref={modalRef}></MenuDetailModal>\n    </>\n  )\n}\n\nexport default ViewMenu\n"]},"metadata":{},"sourceType":"module"}