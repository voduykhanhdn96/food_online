{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/food_online/src/app/pages/Store.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport MenuItemList from \"./../components/MenuItemList\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport Cart from \"../components/Cart\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkExistCartCustomerWithShop, addItemToCart, removeItemFromCart, initialCartData } from \"../store/actions/shop-action\";\nimport { useState } from \"react\";\nimport useToast from \"../hooks/useToast\";\nimport { useLocation } from \"react-router-dom\";\nimport Load from \"../components/Loader\";\nimport { LogLevel, HubConnectionBuilder } from \"@microsoft/signalr\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst startCons = async () => {\n  const connection = new HubConnectionBuilder().withUrl(\"http://localhost:8080/hubs/cart?cart=44a39f\", {\n    withCredentials: false\n  }).configureLogging(LogLevel.Information).build();\n\n  try {\n    await connection.start();\n  } catch (e) {\n    console.log(e);\n  }\n\n  connection.on(\"AddItemToCart\", message => {\n    console.log(message);\n  }); // connection.on(\"UnsubmitItems\", (message) => {\n  //   console.log(\"you just unsubmtited cart id: \" + message);\n  // });\n};\n\nconst Store = () => {\n  _s();\n\n  const param = useParams();\n  const [isClick, setIsClick] = useState(false);\n  const [isInit, setIsInit] = useState(true);\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const shop = useSelector(state => state.shop.cart);\n  const notification = useSelector(state => state.notification);\n\n  const addToCart = id => {\n    startCons();\n    dispatch(addItemToCart(auth.customerId, id, shop.cartId));\n    setIsClick(true);\n  };\n\n  const removeItem = id => {\n    dispatch(removeItemFromCart(auth.customerId, id, shop.cartId));\n    setIsClick(true);\n  };\n\n  const isChange = () => {\n    setIsClick(true);\n  };\n\n  useEffect(() => {\n    if (isClick) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Food is added or removed into cart\");\n        setIsClick(false);\n      }\n\n      if (notification.status === \"completed\" && notification.error) {\n        toastError(notification.error);\n        setIsClick(false);\n      }\n    }\n  }, [notification, isClick, toastSuccess, toastError]);\n  useEffect(() => {\n    if (isInit) {\n      if (location.pathname.includes(\"store\")) {\n        dispatch(checkExistCartCustomerWithShop(auth.customerId, param.shopId));\n      }\n\n      if (location.pathname.includes(\"cart\")) {\n        dispatch(initialCartData(param.cartId));\n      }\n\n      setIsInit(false);\n    }\n  }, [dispatch, auth.customerId, param, location, isInit]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notification.status === \"pending\" && /*#__PURE__*/_jsxDEV(Load, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 45\n    }, this), (isClick || notification.status !== \"pending\") && shop.shop && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        size: \"medium\",\n        children: [\"Shop \", shop.shop.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 10,\n          children: [shop.shop.items && /*#__PURE__*/_jsxDEV(MenuItemList, {\n            items: shop.shop.items.filter(item => item.isActive !== false),\n            addToCart: addToCart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }, this), shop.shop.items.length === 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Don't have any items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 6,\n          children: /*#__PURE__*/_jsxDEV(Cart, {\n            cart: shop,\n            removeItem: removeItem,\n            isChange: isChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(Store, \"Eod5jjNDss6XnjVy91tFWHOBz/U=\", false, function () {\n  return [useParams, useToast, useLocation, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Store;\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/food_online/src/app/pages/Store.jsx"],"names":["useParams","MenuItemList","Grid","Header","Cart","useEffect","useDispatch","useSelector","checkExistCartCustomerWithShop","addItemToCart","removeItemFromCart","initialCartData","useState","useToast","useLocation","Load","LogLevel","HubConnectionBuilder","startCons","connection","withUrl","withCredentials","configureLogging","Information","build","start","e","console","log","on","message","Store","param","isClick","setIsClick","isInit","setIsInit","toastSuccess","toastError","location","dispatch","auth","state","shop","cart","notification","addToCart","id","customerId","cartId","removeItem","isChange","status","error","pathname","includes","shopId","name","items","filter","item","isActive","length"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router\";\nimport MenuItemList from \"./../components/MenuItemList\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport Cart from \"../components/Cart\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  checkExistCartCustomerWithShop,\n  addItemToCart,\n  removeItemFromCart,\n  initialCartData,\n} from \"../store/actions/shop-action\";\nimport { useState } from \"react\";\nimport useToast from \"../hooks/useToast\";\nimport { useLocation } from \"react-router-dom\";\nimport Load from \"../components/Loader\";\nimport { LogLevel, HubConnectionBuilder } from \"@microsoft/signalr\";\n\nconst startCons = async () => {\n  const connection = new HubConnectionBuilder()\n    .withUrl(\"http://localhost:8080/hubs/cart?cart=44a39f\", {\n      withCredentials: false,\n    })\n    .configureLogging(LogLevel.Information)\n    .build();\n\n  try {\n    await connection.start();\n  } catch (e) {\n    console.log(e);\n  }\n\n  connection.on(\"AddItemToCart\", (message) => {\n    console.log(message);\n  });\n  // connection.on(\"UnsubmitItems\", (message) => {\n  //   console.log(\"you just unsubmtited cart id: \" + message);\n  // });\n};\n\nconst Store = () => {\n  const param = useParams();\n  const [isClick, setIsClick] = useState(false);\n  const [isInit, setIsInit] = useState(true);\n  const { toastSuccess, toastError } = useToast();\n  const location = useLocation();\n  const dispatch = useDispatch();\n\n  const auth = useSelector((state) => state.auth);\n  const shop = useSelector((state) => state.shop.cart);\n  const notification = useSelector((state) => state.notification);\n\n  const addToCart = (id) => {\n    startCons();\n    dispatch(addItemToCart(auth.customerId, id, shop.cartId));\n    setIsClick(true);\n  };\n\n  const removeItem = (id) => {\n    dispatch(removeItemFromCart(auth.customerId, id, shop.cartId));\n    setIsClick(true);\n  };\n\n  const isChange = () => {\n    setIsClick(true);\n  };\n\n  useEffect(() => {\n    if (isClick) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Food is added or removed into cart\");\n        setIsClick(false);\n      }\n      if (notification.status === \"completed\" && notification.error) {\n        toastError(notification.error);\n        setIsClick(false);\n      }\n    }\n  }, [notification, isClick, toastSuccess, toastError]);\n\n  useEffect(() => {\n    if (isInit) {\n      if (location.pathname.includes(\"store\")) {\n        dispatch(checkExistCartCustomerWithShop(auth.customerId, param.shopId));\n      }\n      if (location.pathname.includes(\"cart\")) {\n        dispatch(initialCartData(param.cartId));\n      }\n      setIsInit(false);\n    }\n  }, [dispatch, auth.customerId, param, location, isInit]);\n\n  return (\n    <>\n      {notification.status === \"pending\" && <Load />}\n      {(isClick || notification.status !== \"pending\") && shop.shop && (\n        <>\n          <Header size=\"medium\">Shop {shop.shop.name}</Header>\n          <Grid>\n            <Grid.Column width={10}>\n              {shop.shop.items && (\n                <MenuItemList\n                  items={shop.shop.items.filter(\n                    (item) => item.isActive !== false\n                  )}\n                  addToCart={addToCart}\n                ></MenuItemList>\n              )}\n              {shop.shop.items.length === 0 && <h1>Don't have any items</h1>}\n            </Grid.Column>\n\n            <Grid.Column width={6}>\n              <Cart\n                cart={shop}\n                removeItem={removeItem}\n                isChange={isChange}\n              ></Cart>\n            </Grid.Column>\n          </Grid>\n        </>\n      )}\n    </>\n  );\n};\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}