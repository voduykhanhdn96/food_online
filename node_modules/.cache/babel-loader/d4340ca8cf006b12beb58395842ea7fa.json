{"ast":null,"code":"import faker from \"faker\";\nimport dayjs from \"dayjs\";\nimport { generateId } from \"./crypto-helper\";\nexport const generateItems = () => {\n  const order = [];\n\n  for (let i = 0; i < faker.datatype.number({\n    min: 1,\n    max: 10\n  }); i++) {\n    const item = {\n      name: faker.commerce.productName(),\n      id: `ITM${faker.datatype.number({\n        min: 100000,\n        max: 999999\n      })}`,\n      price: faker.commerce.price(),\n      quantity: faker.datatype.number({\n        min: 1,\n        max: 10\n      }),\n      note: `N/A`\n    };\n    item.total = item.quantity * item.price;\n    order.push(item);\n  }\n\n  return order;\n};\nexport const generateOrders = () => {\n  const orders = [];\n  const status = [\"Confirmed\", \"Cancelled\", \"Sent To Kitchen\", \"Ready for Pickup\", \"Ready for Delivery\", \"Delivered\"];\n\n  for (let i = 0; i < faker.datatype.number({\n    min: 10,\n    max: 100\n  }); i++) {\n    const id = `ORD${faker.datatype.number({\n      min: 100000,\n      max: 999999\n    })}`;\n    const order = {\n      id,\n      orderNumber: id,\n      orderTime: dayjs(faker.date.past()).format(\"MM/DD/YYYY HH:mm\"),\n      customerName: faker.name.findName(),\n      customerPhone: faker.phone.phoneNumber(),\n      total: faker.datatype.number({\n        min: 300,\n        max: 2000\n      }),\n      status: status[faker.datatype.number({\n        min: 0,\n        max: status.length - 1\n      })]\n    };\n    orders.push(order);\n  }\n\n  return orders;\n};\nexport const generateStores = () => {\n  const stores = [];\n\n  for (let i = 0; i < faker.datatype.number({\n    min: 10,\n    max: 100\n  }); i++) {\n    const store = {\n      id: `STR${faker.datatype.number({\n        min: 100000,\n        max: 999999\n      })}`,\n      name: faker.company.companyName(),\n      brief: faker.lorem.sentences(),\n      image: `https://source.unsplash.com/random/900x900?food,${faker.datatype.number()}`,\n      location: faker.address.city(),\n      phoneNumber: faker.phone.phoneNumber()\n    };\n    stores.push(store);\n  }\n\n  return stores;\n};\nexport const generateMenu = () => {\n  const menu = [];\n\n  for (let i = 0; i < 15; i++) {\n    const item = {\n      image: `https://source.unsplash.com/random/?food,${i}`,\n      name: faker.commerce.productName(),\n      id: `ITM${faker.datatype.number({\n        min: 100000,\n        max: 999999\n      })}`,\n      price: faker.commerce.price() * 1000,\n      description: faker.commerce.productDescription()\n    };\n    menu.push(item);\n  }\n\n  return menu;\n};\nexport const generateCart = menuItems => {\n  const cartGroups = [];\n  let total = 0;\n  const discount = faker.datatype.number({\n    min: 1,\n    max: 5\n  }) * 10 / 100; // groups\n\n  for (let i = 0; i < faker.datatype.number({\n    min: 1,\n    max: 5\n  }); i++) {\n    // items\n    const items = [];\n\n    for (let j = 0; j < menuItems.length; j++) {\n      if (faker.datatype.number({\n        min: 1,\n        max: 5\n      }) % 3 === 0) {\n        const item = { ...menuItems[j],\n          quantity: faker.datatype.number({\n            min: 1,\n            max: 5\n          })\n        };\n        total += item.price * item.quantity;\n        items.push(item);\n      }\n    }\n\n    const group = {\n      userId: `USR${faker.datatype.number({\n        min: 100000,\n        max: 999999\n      })}`,\n      userName: faker.name.findName(),\n      items\n    };\n    cartGroups.push(group);\n  }\n\n  return {\n    id: `CRT${faker.datatype.number({\n      min: 100000,\n      max: 999999\n    })}`,\n    subtotal: total,\n    discount,\n    total: total - total * discount,\n    groups: cartGroups\n  };\n};\nexport const generateStore = () => {\n  return {\n    id: `STR${faker.datatype.number({\n      min: 100000,\n      max: 999999\n    })}`,\n    link: `link.com/${generateId()}`,\n    image: `https://source.unsplash.com/random/?food,${faker.datatype.number()}`,\n    name: `${faker.company.companyName()}`,\n    address: `${faker.address.streetAddress()}, ${faker.address.county()}, ${faker.address.city()}, ${faker.address.state()}`,\n    phone: faker.phone.phoneNumber()\n  };\n};\nexport const generateMenuItem = () => {\n  return {\n    image: `https://source.unsplash.com/random/?food`,\n    name: faker.commerce.productName(),\n    id: `ITM${faker.datatype.number({\n      min: 100000,\n      max: 999999\n    })}`,\n    price: faker.commerce.price(),\n    description: faker.commerce.productDescription()\n  };\n};\nexport const generateOrder = () => {\n  const id = `ORD${faker.datatype.number({\n    min: 100000,\n    max: 999999\n  })}`;\n  return {\n    id,\n    orderNumber: id,\n    orderTime: faker.date.past(),\n    customerName: faker.name.findName(),\n    customerPhone: faker.phone.phoneNumber()\n  };\n};","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/helpers/fake-data-helper.js"],"names":["faker","dayjs","generateId","generateItems","order","i","datatype","number","min","max","item","name","commerce","productName","id","price","quantity","note","total","push","generateOrders","orders","status","orderNumber","orderTime","date","past","format","customerName","findName","customerPhone","phone","phoneNumber","length","generateStores","stores","store","company","companyName","brief","lorem","sentences","image","location","address","city","generateMenu","menu","description","productDescription","generateCart","menuItems","cartGroups","discount","items","j","group","userId","userName","subtotal","groups","generateStore","link","streetAddress","county","state","generateMenuItem","generateOrder"],"mappings":"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","sourcesContent":["import faker from \"faker\"\nimport dayjs from \"dayjs\"\nimport { generateId } from \"./crypto-helper\"\n\nexport const generateItems = () => {\n  const order = []\n  for (let i = 0; i < faker.datatype.number({ min: 1, max: 10 }); i++) {\n    const item = {\n      name: faker.commerce.productName(),\n      id: `ITM${faker.datatype.number({\n        min: 100000,\n        max: 999999,\n      })}`,\n      price: faker.commerce.price(),\n      quantity: faker.datatype.number({ min: 1, max: 10 }),\n      note: `N/A`,\n    }\n\n    item.total = item.quantity * item.price\n\n    order.push(item)\n  }\n  return order\n}\n\nexport const generateOrders = () => {\n  const orders = []\n  const status = [\n    \"Confirmed\",\n    \"Cancelled\",\n    \"Sent To Kitchen\",\n    \"Ready for Pickup\",\n    \"Ready for Delivery\",\n    \"Delivered\",\n  ]\n  for (let i = 0; i < faker.datatype.number({ min: 10, max: 100 }); i++) {\n    const id = `ORD${faker.datatype.number({\n      min: 100000,\n      max: 999999,\n    })}`\n    const order = {\n      id,\n      orderNumber: id,\n      orderTime: dayjs(faker.date.past()).format(\"MM/DD/YYYY HH:mm\"),\n      customerName: faker.name.findName(),\n      customerPhone: faker.phone.phoneNumber(),\n      total: faker.datatype.number({ min: 300, max: 2000 }),\n      status: status[faker.datatype.number({ min: 0, max: status.length - 1 })],\n    }\n\n    orders.push(order)\n  }\n  return orders\n}\n\nexport const generateStores = () => {\n  const stores = []\n  for (let i = 0; i < faker.datatype.number({ min: 10, max: 100 }); i++) {\n    const store = {\n      id: `STR${faker.datatype.number({\n        min: 100000,\n        max: 999999,\n      })}`,\n      name: faker.company.companyName(),\n      brief: faker.lorem.sentences(),\n      image: `https://source.unsplash.com/random/900x900?food,${faker.datatype.number()}`,\n      location: faker.address.city(),\n      phoneNumber: faker.phone.phoneNumber(),\n    }\n    stores.push(store)\n  }\n  return stores\n}\n\nexport const generateMenu = () => {\n  const menu = []\n  for (let i = 0; i < 15; i++) {\n    const item = {\n      image: `https://source.unsplash.com/random/?food,${i}`,\n      name: faker.commerce.productName(),\n      id: `ITM${faker.datatype.number({\n        min: 100000,\n        max: 999999,\n      })}`,\n      price: faker.commerce.price() * 1000,\n      description: faker.commerce.productDescription(),\n    }\n    menu.push(item)\n  }\n  return menu\n}\n\nexport const generateCart = menuItems => {\n  const cartGroups = []\n  let total = 0\n  const discount = (faker.datatype.number({ min: 1, max: 5 }) * 10) / 100\n\n  // groups\n  for (let i = 0; i < faker.datatype.number({ min: 1, max: 5 }); i++) {\n    // items\n    const items = []\n    for (let j = 0; j < menuItems.length; j++) {\n      if (faker.datatype.number({ min: 1, max: 5 }) % 3 === 0) {\n        const item = {\n          ...menuItems[j],\n          quantity: faker.datatype.number({ min: 1, max: 5 }),\n        }\n        total += item.price * item.quantity\n        items.push(item)\n      }\n    }\n\n    const group = {\n      userId: `USR${faker.datatype.number({\n        min: 100000,\n        max: 999999,\n      })}`,\n      userName: faker.name.findName(),\n      items,\n    }\n\n    cartGroups.push(group)\n  }\n\n  return {\n    id: `CRT${faker.datatype.number({\n      min: 100000,\n      max: 999999,\n    })}`,\n    subtotal: total,\n    discount,\n    total: total - total * discount,\n    groups: cartGroups,\n  }\n}\n\nexport const generateStore = () => {\n  return {\n    id: `STR${faker.datatype.number({\n      min: 100000,\n      max: 999999,\n    })}`,\n    link: `link.com/${generateId()}`,\n    image: `https://source.unsplash.com/random/?food,${faker.datatype.number()}`,\n    name: `${faker.company.companyName()}`,\n    address: `${faker.address.streetAddress()}, ${faker.address.county()}, ${faker.address.city()}, ${faker.address.state()}`,\n    phone: faker.phone.phoneNumber(),\n  }\n}\n\nexport const generateMenuItem = () => {\n  return {\n    image: `https://source.unsplash.com/random/?food`,\n    name: faker.commerce.productName(),\n    id: `ITM${faker.datatype.number({\n      min: 100000,\n      max: 999999,\n    })}`,\n    price: faker.commerce.price(),\n    description: faker.commerce.productDescription(),\n  }\n}\n\nexport const generateOrder = () => {\n  const id = `ORD${faker.datatype.number({\n    min: 100000,\n    max: 999999,\n  })}`\n  return {\n    id,\n    orderNumber: id,\n    orderTime: faker.date.past(),\n    customerName: faker.name.findName(),\n    customerPhone: faker.phone.phoneNumber(),\n  }\n}\n"]},"metadata":{},"sourceType":"module"}