{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/Store.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport MenuItemList from \"./../components/MenuItemList\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport Cart from \"../components/Cart\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkExistCartCustomerWithShop, addItemToCart, removeItemFromCart, initialCartData } from \"../store/actions/shop-action\";\nimport { useState } from \"react\";\nimport useToast from \"../hooks/useToast\";\nimport { useLocation } from \"react-router-dom\";\nimport Load from \"../components/Loader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Store = () => {\n  _s();\n\n  const param = useParams();\n  const [isClick, setIsClick] = useState(false);\n  const {\n    toastSuccess,\n    toastError\n  } = useToast();\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const shop = useSelector(state => state.shop.cart);\n  const notification = useSelector(state => state.notification);\n\n  const addToCart = id => {\n    dispatch(addItemToCart(auth.customerId, id, shop.cartId));\n    setIsClick(true);\n  };\n\n  const removeItem = id => {\n    dispatch(removeItemFromCart(auth.customerId, id, shop.cartId));\n    setIsClick(true);\n  };\n\n  const onChangeStatusFood = e => {\n    if (e.target.checked) {\n      // Submit\n      dispatch(submitItemOfCustomer(items, userId, cartId));\n    } else {\n      dispatch(unSubmitItemOfCustomer(userId, cartId));\n    }\n\n    setIsClick(true);\n  };\n\n  useEffect(() => {\n    if (isClick) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Food is added or removed into cart\");\n        setIsClick(false);\n      }\n\n      if (notification.status === \"completed\" && notification.error) {\n        toastError(\"Add or remove food have some problem\");\n        setIsClick(false);\n      }\n    }\n  }, [notification, isClick, toastSuccess, toastError]);\n  useEffect(() => {\n    if (location.pathname.includes(\"store\")) {\n      dispatch(checkExistCartCustomerWithShop(auth.customerId, param.shopId));\n    }\n\n    if (location.pathname.includes(\"cart\")) {\n      dispatch(initialCartData(param.cartId));\n    }\n  }, [dispatch, auth.customerId, param, location]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [notification.status === \"pending\" && /*#__PURE__*/_jsxDEV(Load, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 45\n    }, this), (isClick || notification.status !== \"pending\") && shop.shop && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        size: \"medium\",\n        children: [\"Shop \", shop.shop.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 10,\n          children: [shop.shop.items && /*#__PURE__*/_jsxDEV(MenuItemList, {\n            items: shop.shop.items,\n            addToCart: addToCart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }, this), shop.shop.items.length === 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Don't have any items\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: 6,\n          children: /*#__PURE__*/_jsxDEV(Cart, {\n            cart: shop,\n            removeItem: removeItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(Store, \"jcPEehLrtBAdJa1AEl0apYIJRDQ=\", false, function () {\n  return [useParams, useToast, useLocation, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Store;\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/Store.jsx"],"names":["useParams","MenuItemList","Grid","Header","Cart","useEffect","useDispatch","useSelector","checkExistCartCustomerWithShop","addItemToCart","removeItemFromCart","initialCartData","useState","useToast","useLocation","Load","Store","param","isClick","setIsClick","toastSuccess","toastError","location","dispatch","auth","state","shop","cart","notification","addToCart","id","customerId","cartId","removeItem","onChangeStatusFood","e","target","checked","submitItemOfCustomer","items","userId","unSubmitItemOfCustomer","status","error","pathname","includes","shopId","name","length"],"mappings":"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","sourcesContent":["import { useParams } from \"react-router\"\nimport MenuItemList from \"./../components/MenuItemList\"\nimport { Grid, Header } from \"semantic-ui-react\"\nimport Cart from \"../components/Cart\"\nimport { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport {\n  checkExistCartCustomerWithShop,\n  addItemToCart,\n  removeItemFromCart,\n  initialCartData,\n} from \"../store/actions/shop-action\"\nimport { useState } from \"react\"\nimport useToast from \"../hooks/useToast\"\nimport { useLocation } from \"react-router-dom\"\nimport Load from \"../components/Loader\"\n\nconst Store = () => {\n  const param = useParams()\n  const [isClick, setIsClick] = useState(false)\n  const { toastSuccess, toastError } = useToast()\n  const location = useLocation()\n  const dispatch = useDispatch()\n\n  const auth = useSelector(state => state.auth)\n  const shop = useSelector(state => state.shop.cart)\n  const notification = useSelector(state => state.notification)\n\n  const addToCart = id => {\n    dispatch(addItemToCart(auth.customerId, id, shop.cartId))\n    setIsClick(true)\n  }\n\n  const removeItem = id => {\n    dispatch(removeItemFromCart(auth.customerId, id, shop.cartId))\n    setIsClick(true)\n  }\n\n  const onChangeStatusFood = e => {\n    if (e.target.checked) {\n      // Submit\n      dispatch(submitItemOfCustomer(items, userId, cartId))\n    } else {\n      dispatch(unSubmitItemOfCustomer(userId, cartId))\n    }\n    setIsClick(true)\n  }\n\n  useEffect(() => {\n    if (isClick) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Food is added or removed into cart\")\n        setIsClick(false)\n      }\n      if (notification.status === \"completed\" && notification.error) {\n        toastError(\"Add or remove food have some problem\")\n        setIsClick(false)\n      }\n    }\n  }, [notification, isClick, toastSuccess, toastError])\n\n  useEffect(() => {\n    if (location.pathname.includes(\"store\")) {\n      dispatch(checkExistCartCustomerWithShop(auth.customerId, param.shopId))\n    }\n    if (location.pathname.includes(\"cart\")) {\n      dispatch(initialCartData(param.cartId))\n    }\n  }, [dispatch, auth.customerId, param, location])\n\n  return (\n    <>\n      {notification.status === \"pending\" && <Load />}\n      {(isClick || notification.status !== \"pending\") && shop.shop && (\n        <>\n          <Header size=\"medium\">Shop {shop.shop.name}</Header>\n          <Grid>\n            <Grid.Column width={10}>\n              {shop.shop.items && (\n                <MenuItemList\n                  items={shop.shop.items}\n                  addToCart={addToCart}\n                ></MenuItemList>\n              )}\n              {shop.shop.items.length === 0 && <h1>Don't have any items</h1>}\n            </Grid.Column>\n\n            <Grid.Column width={6}>\n              <Cart cart={shop} removeItem={removeItem}></Cart>\n            </Grid.Column>\n          </Grid>\n        </>\n      )}\n    </>\n  )\n}\n\nexport default Store\n"]},"metadata":{},"sourceType":"module"}