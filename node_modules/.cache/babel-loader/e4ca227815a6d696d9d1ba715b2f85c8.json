{"ast":null,"code":"import { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { takeOrder } from \"../store/actions/shop-action\";\nimport ProcessStatus from \"../components/ProcessStatus/ProcessStatus\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Order = () => {\n  // const { orderId } = useParams()\n  // const [stepOrder, setStepOrder] = useState(0)\n  // const order = useSelector(state => state.shop.order)\n  // // const groups = useSelector(state => state.shop.groups)\n  // const notification = useSelector(state => state.notification)\n  // const dispatch = useDispatch()\n  // useEffect(() => {\n  //   dispatch(takeOrder(orderId))\n  // }, [dispatch, orderId])\n  // useEffect(() => {\n  //   if (notification.status === \"completed\" && !notification.error) {\n  //     switch (order.status) {\n  //       case \"Cancel\":\n  //         setStepOrder(-1)\n  //         break\n  //       case \"Confirmed\":\n  //         setStepOrder(0)\n  //         break\n  //       case \"Sent To Kitchen\":\n  //         setStepOrder(1)\n  //         break\n  //       case \"Ready for Pickup\":\n  //         setStepOrder(2)\n  //         break\n  //       case \"Ready for Delivery\":\n  //         setStepOrder(3)\n  //         break\n  //       case \"Delivered\":\n  //         setStepOrder(4)\n  //         break\n  //       default:\n  //         setStepOrder(0)\n  //     }\n  //   }\n  // }, [notification, order.status])\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_c = Order;\nexport default Order;\n\nvar _c;\n\n$RefreshReg$(_c, \"Order\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/Order.jsx"],"names":["useEffect","useState","useDispatch","useSelector","useParams","takeOrder","ProcessStatus","Order"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,aAAP,MAA0B,2CAA1B;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAClB;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACE,qCADF;AAKD,CA5CD;;KAAMA,K;AA8CN,eAAeA,KAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\nimport { takeOrder } from \"../store/actions/shop-action\"\nimport ProcessStatus from \"../components/ProcessStatus/ProcessStatus\"\n\nconst Order = () => {\n  // const { orderId } = useParams()\n  // const [stepOrder, setStepOrder] = useState(0)\n  // const order = useSelector(state => state.shop.order)\n  // // const groups = useSelector(state => state.shop.groups)\n  // const notification = useSelector(state => state.notification)\n  // const dispatch = useDispatch()\n\n  // useEffect(() => {\n  //   dispatch(takeOrder(orderId))\n  // }, [dispatch, orderId])\n\n  // useEffect(() => {\n  //   if (notification.status === \"completed\" && !notification.error) {\n  //     switch (order.status) {\n  //       case \"Cancel\":\n  //         setStepOrder(-1)\n  //         break\n  //       case \"Confirmed\":\n  //         setStepOrder(0)\n  //         break\n  //       case \"Sent To Kitchen\":\n  //         setStepOrder(1)\n  //         break\n  //       case \"Ready for Pickup\":\n  //         setStepOrder(2)\n  //         break\n  //       case \"Ready for Delivery\":\n  //         setStepOrder(3)\n  //         break\n  //       case \"Delivered\":\n  //         setStepOrder(4)\n  //         break\n  //       default:\n  //         setStepOrder(0)\n  //     }\n  //   }\n  // }, [notification, order.status])\n\n  return (\n    <>\n      \n    </>\n  )\n}\n\nexport default Order\n"]},"metadata":{},"sourceType":"module"}