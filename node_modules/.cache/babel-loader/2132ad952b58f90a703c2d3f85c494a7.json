{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Documents/GitHub/food_online/src/app/pages/Checkout/ViewCart.jsx\";\nimport { formatCurrency } from \"../../helpers/number-helper\";\nimport { Table } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ViewCart = ({\n  item\n}) => {\n  const {\n    customerName,\n    itemName,\n    price,\n    amount\n  } = item;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Table.Row, {\n      children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: customerName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: itemName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: formatCurrency(price)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: amount\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n        children: formatCurrency(price * amount)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_c = ViewCart;\nexport default ViewCart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewCart\");","map":{"version":3,"sources":["/Users/mac/Documents/GitHub/food_online/src/app/pages/Checkout/ViewCart.jsx"],"names":["formatCurrency","Table","ViewCart","item","customerName","itemName","price","amount"],"mappings":";AAAA,SAASA,cAAT,QAA+B,6BAA/B;AACA,SAASC,KAAT,QAAsB,mBAAtB;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAc;AAC7B,QAAM;AAAEC,IAAAA,YAAF;AAAgBC,IAAAA,QAAhB;AAA0BC,IAAAA,KAA1B;AAAiCC,IAAAA;AAAjC,MAA4CJ,IAAlD;AAEA,sBACE;AAAA,2BACE,QAAC,KAAD,CAAO,GAAP;AAAA,8BACE,QAAC,KAAD,CAAO,IAAP;AAAA,kBAAaC;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,KAAD,CAAO,IAAP;AAAA,kBAAaC;AAAb;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,KAAD,CAAO,IAAP;AAAA,kBAAaL,cAAc,CAACM,KAAD;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,KAAD,CAAO,IAAP;AAAA,kBAAaC;AAAb;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE,QAAC,KAAD,CAAO,IAAP;AAAA,kBAAaP,cAAc,CAACM,KAAK,GAAGC,MAAT;AAA3B;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAWD,CAdD;;KAAML,Q;AAgBN,eAAeA,QAAf","sourcesContent":["import { formatCurrency } from \"../../helpers/number-helper\"\nimport { Table } from \"semantic-ui-react\"\n\nconst ViewCart = ({ item }) => {\n  const { customerName, itemName, price, amount } = item\n\n  return (\n    <>\n      <Table.Row>\n        <Table.Cell>{customerName}</Table.Cell>\n        <Table.Cell>{itemName}</Table.Cell>\n        <Table.Cell>{formatCurrency(price)}</Table.Cell>\n        <Table.Cell>{amount}</Table.Cell>\n        <Table.Cell>{formatCurrency(price * amount)}</Table.Cell>\n      </Table.Row>\n    </>\n  )\n}\n\nexport default ViewCart\n"]},"metadata":{},"sourceType":"module"}