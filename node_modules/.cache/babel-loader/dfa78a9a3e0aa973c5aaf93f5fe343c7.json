{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/OrderDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useParams } from \"react-router-dom\";\nimport { takeOrder } from \"../store/actions/shop-action\";\nimport ProcessStatus from \"../components/ProcessStatus/ProcessStatus\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst status = [\"Confirmed\", \"Cancelled\", \"Sent To Kitchen\", \"Ready for Pickup\", \"Ready for Delivery\", \"Delivered\"];\n\nconst OrderDetail = () => {\n  _s();\n\n  const {\n    orderId\n  } = useParams();\n  const [stepOrder, setStepOrder] = useState(0);\n  const order = useSelector(state => state.shop.order);\n  const group = useSelector(state => state.shop.groups);\n  const notification = useSelector(state => state.notification);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(takeOrder(orderId));\n  }, [dispatch, orderId]);\n  useEffect(() => {\n    if (isOrder) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Order is success !\");\n        setIsOrder(false);\n        console.log(order);\n        history.push(\"/order/\" + order.orderId);\n      }\n\n      if (notification.status === \"completed\" && notification.error) {\n        setIsOrder(false);\n        toastError(\"Order is wrong !\");\n      }\n    }\n  }, [notification, history, toastSuccess, toastError, isOrder, order]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [order.length === 0 && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Don't have this order, please check again \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), order.length !== 0 && /*#__PURE__*/_jsxDEV(ProcessStatus, {\n      orderInfo: order\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrderDetail, \"rWphgPM3FhwJ1axYnK8FuzgcArs=\", false, function () {\n  return [useParams, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = OrderDetail;\nexport default OrderDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderDetail\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/OrderDetail.jsx"],"names":["useEffect","useState","useDispatch","useSelector","useParams","takeOrder","ProcessStatus","status","OrderDetail","orderId","stepOrder","setStepOrder","order","state","shop","group","groups","notification","dispatch","isOrder","error","toastSuccess","setIsOrder","console","log","history","push","toastError","length"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,SAAT,QAA0B,8BAA1B;AACA,OAAOC,aAAP,MAA0B,2CAA1B;;;AAEA,MAAMC,MAAM,GAAG,CACb,WADa,EAEb,WAFa,EAGb,iBAHa,EAIb,kBAJa,EAKb,oBALa,EAMb,WANa,CAAf;;AAQA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM;AAAEC,IAAAA;AAAF,MAAcL,SAAS,EAA7B;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAMW,KAAK,GAAGT,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWF,KAArB,CAAzB;AACA,QAAMG,KAAK,GAAGZ,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWE,MAArB,CAAzB;AACA,QAAMC,YAAY,GAAGd,WAAW,CAACU,KAAK,IAAIA,KAAK,CAACI,YAAhB,CAAhC;AACA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,QAAQ,CAACb,SAAS,CAACI,OAAD,CAAV,CAAR;AACD,GAFQ,EAEN,CAACS,QAAD,EAAWT,OAAX,CAFM,CAAT;AAIAT,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImB,OAAJ,EAAa;AACX,UAAIF,YAAY,CAACV,MAAb,KAAwB,WAAxB,IAAuC,CAACU,YAAY,CAACG,KAAzD,EAAgE;AAC9DC,QAAAA,YAAY,CAAC,oBAAD,CAAZ;AACAC,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AACAa,QAAAA,OAAO,CAACC,IAAR,CAAa,YAAYd,KAAK,CAACH,OAA/B;AACD;;AACD,UAAIQ,YAAY,CAACV,MAAb,KAAwB,WAAxB,IAAuCU,YAAY,CAACG,KAAxD,EAA+D;AAC7DE,QAAAA,UAAU,CAAC,KAAD,CAAV;AACAK,QAAAA,UAAU,CAAC,kBAAD,CAAV;AACD;AACF;AACF,GAbQ,EAaN,CAACV,YAAD,EAAeQ,OAAf,EAAwBJ,YAAxB,EAAsCM,UAAtC,EAAkDR,OAAlD,EAA2DP,KAA3D,CAbM,CAAT;AAeA,sBACE;AAAA,eACGA,KAAK,CAACgB,MAAN,KAAiB,CAAjB,iBACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,EAIGhB,KAAK,CAACgB,MAAN,KAAiB,CAAjB,iBAAsB,QAAC,aAAD;AAAe,MAAA,SAAS,EAAEhB;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJzB;AAAA,kBADF;AAQD,CAnCD;;GAAMJ,W;UACgBJ,S,EAEND,W,EACAA,W,EACOA,W,EACJD,W;;;KANbM,W;AAqCN,eAAeA,WAAf","sourcesContent":["import { useEffect, useState } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { useParams } from \"react-router-dom\"\nimport { takeOrder } from \"../store/actions/shop-action\"\nimport ProcessStatus from \"../components/ProcessStatus/ProcessStatus\"\n\nconst status = [\n  \"Confirmed\",\n  \"Cancelled\",\n  \"Sent To Kitchen\",\n  \"Ready for Pickup\",\n  \"Ready for Delivery\",\n  \"Delivered\",\n]\nconst OrderDetail = () => {\n  const { orderId } = useParams()\n  const [stepOrder, setStepOrder] = useState(0)\n  const order = useSelector(state => state.shop.order)\n  const group = useSelector(state => state.shop.groups)\n  const notification = useSelector(state => state.notification)\n  const dispatch = useDispatch()\n\n  useEffect(() => {\n    dispatch(takeOrder(orderId))\n  }, [dispatch, orderId])\n\n  useEffect(() => {\n    if (isOrder) {\n      if (notification.status === \"completed\" && !notification.error) {\n        toastSuccess(\"Order is success !\")\n        setIsOrder(false)\n        console.log(order)\n        history.push(\"/order/\" + order.orderId)\n      }\n      if (notification.status === \"completed\" && notification.error) {\n        setIsOrder(false)\n        toastError(\"Order is wrong !\")\n      }\n    }\n  }, [notification, history, toastSuccess, toastError, isOrder, order])\n\n  return (\n    <>\n      {order.length === 0 && (\n        <h1>Don't have this order, please check again </h1>\n      )}\n      {order.length !== 0 && <ProcessStatus orderInfo={order} />}\n    </>\n  )\n}\n\nexport default OrderDetail\n"]},"metadata":{},"sourceType":"module"}