{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/Store.jsx\",\n    _s = $RefreshSig$();\n\nimport { useParams } from \"react-router\";\nimport { useState } from \"react\";\nimport MenuItemList from \"./../components/MenuItemList\";\nimport { Grid, Header } from \"semantic-ui-react\";\nimport Cart from \"../components/Cart\";\nimport { generateCart, generateMenu } from \"../helpers/fake-data-helper\";\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { checkExistCartCustomerWithShop } from \"../store/actions/shop-action\";\nimport { useCallback } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Store = () => {\n  _s();\n\n  const dispatch = useDispatch();\n  const auth = useSelector(state => state.auth);\n  const menuFake = generateMenu();\n  const cartFake = generateCart(menuFake);\n  const {\n    shopId\n  } = useParams();\n  const [items] = useState(menuFake);\n  const [cart] = useState(cartFake);\n  const [responseCheck, setResponseCheck] = useState(null);\n\n  const addToCart = id => {};\n\n  useEffect(() => {\n    checkResponseExistCart();\n\n    if (!responseCheck) {\n      console.log(\"OK\");\n    } else {\n      console.log(responseCheck);\n    }\n  }, [checkResponseExistCart]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      size: \"medium\",\n      children: [\"Shop \", shopId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 12,\n        children: items && /*#__PURE__*/_jsxDEV(MenuItemList, {\n          items: items,\n          addToCart: addToCart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n        width: 4,\n        children: /*#__PURE__*/_jsxDEV(Cart, {\n          cart: cart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Store, \"I4ZleUUveihLXbLwFOMslJDuXlw=\", false, function () {\n  return [useDispatch, useSelector, useParams];\n});\n\n_c = Store;\nexport default Store;\n\nvar _c;\n\n$RefreshReg$(_c, \"Store\");","map":{"version":3,"sources":["/Users/mac/Desktop/Projects/Mock_project/mock-project-store-online/src/app/pages/Store.jsx"],"names":["useParams","useState","MenuItemList","Grid","Header","Cart","generateCart","generateMenu","useEffect","useDispatch","useSelector","checkExistCartCustomerWithShop","useCallback","Store","dispatch","auth","state","menuFake","cartFake","shopId","items","cart","responseCheck","setResponseCheck","addToCart","id","checkResponseExistCart","console","log"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,cAA1B;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,SAASC,IAAT,EAAeC,MAAf,QAA6B,mBAA7B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,6BAA3C;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,8BAAT,QAA+C,8BAA/C;AACA,SAASC,WAAT,QAA4B,OAA5B;;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAMM,IAAI,GAAGL,WAAW,CAACM,KAAK,IAAIA,KAAK,CAACD,IAAhB,CAAxB;AACA,QAAME,QAAQ,GAAGV,YAAY,EAA7B;AACA,QAAMW,QAAQ,GAAGZ,YAAY,CAACW,QAAD,CAA7B;AAEA,QAAM;AAAEE,IAAAA;AAAF,MAAanB,SAAS,EAA5B;AACA,QAAM,CAACoB,KAAD,IAAUnB,QAAQ,CAACgB,QAAD,CAAxB;AACA,QAAM,CAACI,IAAD,IAASpB,QAAQ,CAACiB,QAAD,CAAvB;AACA,QAAM,CAACI,aAAD,EAAgBC,gBAAhB,IAAoCtB,QAAQ,CAAC,IAAD,CAAlD;;AAEA,QAAMuB,SAAS,GAAGC,EAAE,IAAI,CAAE,CAA1B;;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACdkB,IAAAA,sBAAsB;;AACtB,QAAI,CAACJ,aAAL,EAAoB;AAClBK,MAAAA,OAAO,CAACC,GAAR,CAAY,IAAZ;AACD,KAFD,MAEO;AACLD,MAAAA,OAAO,CAACC,GAAR,CAAYN,aAAZ;AACD;AACF,GAPQ,EAON,CAACI,sBAAD,CAPM,CAAT;AASA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAA,0BAA4BP,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,IAAD;AAAA,8BACE,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,EAApB;AAAA,kBACGC,KAAK,iBACJ,QAAC,YAAD;AAAc,UAAA,KAAK,EAAEA,KAArB;AAA4B,UAAA,SAAS,EAAEI;AAAvC;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cADF,eAME,QAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE,CAApB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEH;AAAZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAeD,CArCD;;GAAMR,K;UACaJ,W,EACJC,W,EAIMV,S;;;KANfa,K;AAuCN,eAAeA,KAAf","sourcesContent":["import { useParams } from \"react-router\"\nimport { useState } from \"react\"\nimport MenuItemList from \"./../components/MenuItemList\"\nimport { Grid, Header } from \"semantic-ui-react\"\nimport Cart from \"../components/Cart\"\nimport { generateCart, generateMenu } from \"../helpers/fake-data-helper\"\nimport { useEffect } from \"react\"\nimport { useDispatch, useSelector } from \"react-redux\"\nimport { checkExistCartCustomerWithShop } from \"../store/actions/shop-action\"\nimport { useCallback } from \"react\"\n\nconst Store = () => {\n  const dispatch = useDispatch()\n  const auth = useSelector(state => state.auth)\n  const menuFake = generateMenu()\n  const cartFake = generateCart(menuFake)\n\n  const { shopId } = useParams()\n  const [items] = useState(menuFake)\n  const [cart] = useState(cartFake)\n  const [responseCheck, setResponseCheck] = useState(null)\n\n  const addToCart = id => {}\n\n  useEffect(() => {\n    checkResponseExistCart()\n    if (!responseCheck) {\n      console.log(\"OK\")\n    } else {\n      console.log(responseCheck)\n    }\n  }, [checkResponseExistCart])\n\n  return (\n    <>\n      <Header size=\"medium\">Shop {shopId}</Header>\n      <Grid>\n        <Grid.Column width={12}>\n          {items && (\n            <MenuItemList items={items} addToCart={addToCart}></MenuItemList>\n          )}\n        </Grid.Column>\n        <Grid.Column width={4}>\n          <Cart cart={cart}></Cart>\n        </Grid.Column>\n      </Grid>\n    </>\n  )\n}\n\nexport default Store\n"]},"metadata":{},"sourceType":"module"}